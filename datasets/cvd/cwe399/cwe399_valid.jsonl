{"idx":16413,"code":"size_t data;\ndata = 20;\nif (data > wcslen(HELLO_STRING))\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":1}
{"idx":16414,"code":"data = 0;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nif (data > wcslen(HELLO_STRING))\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":1}
{"idx":16415,"code":"data = 0;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nif (data > wcslen(HELLO_STRING))\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":1}
{"idx":16416,"code":"data = 0;\ndata = 20;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":0}
{"idx":16417,"code":"size_t data;\ndata = 20;\nif (data > wcslen(HELLO_STRING))\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":1}
{"idx":16418,"code":"size_t data;\ndata = strtoul(inputBuffer, NULL, 0);\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":0}
{"idx":16419,"code":"size_t data;\ndata = strtoul(inputBuffer, NULL, 0);\nif (data > wcslen(HELLO_STRING))\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":1}
{"idx":16420,"code":"data = 0;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nif (data > wcslen(HELLO_STRING))\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":1}
{"idx":16421,"code":"data = 0;\ndata = 20;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":0}
{"idx":16422,"code":"data = 0;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nif (data > wcslen(HELLO_STRING))\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":1}
{"idx":16423,"code":"size_t data;\ndata = strtoul(inputBuffer, NULL, 0);\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":0}
{"idx":16424,"code":"size_t data;\ndata = 20;\nif (data > wcslen(HELLO_STRING))\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":1}
{"idx":16425,"code":"size_t data;\ndata = strtoul(inputBuffer, NULL, 0);\nif (data > wcslen(HELLO_STRING))\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":1}
{"idx":16426,"code":"char inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(connectSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nif (data > wcslen(HELLO_STRING))\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":1}
{"idx":16427,"code":"data = 20;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":0}
{"idx":16428,"code":"char inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(connectSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nif (data > wcslen(HELLO_STRING))\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":1}
{"idx":16429,"code":"size_t data;\ndata = strtoul(inputBuffer, NULL, 0);\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":0}
{"idx":16430,"code":"size_t data;\ndata = strtoul(inputBuffer, NULL, 0);\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":0}
{"idx":16431,"code":"size_t data;\ndata = strtoul(inputBuffer, NULL, 0);\nif (data > wcslen(HELLO_STRING))\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":1}
{"idx":16432,"code":"size_t data;\ndata = 0;\nif (data > wcslen(HELLO_STRING))\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":1}
{"idx":16433,"code":"char inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(connectSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\ngoodB2G2Sink(data);\nstatic void goodB2G2Sink(size_t data)\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":0}
{"idx":16434,"code":"char inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(connectSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\ngoodB2G1Sink(data);\nstatic void goodB2G1Sink(size_t data)\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":0}
{"idx":16435,"code":"data = 20;\ngoodG2BSink(data);\nstatic void goodG2BSink(size_t data)\nif (data > wcslen(HELLO_STRING))\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":1}
{"idx":16436,"code":"char inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(connectSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nbadSink(data);\nstatic void badSink(size_t data)\nif (data > wcslen(HELLO_STRING))\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":1}
{"idx":16437,"code":"size_t data;\ndata = strtoul(inputBuffer, NULL, 0);\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":0}
{"idx":16438,"code":"size_t data;\ndata = strtoul(inputBuffer, NULL, 0);\nif (data > wcslen(HELLO_STRING))\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":1}
{"idx":16439,"code":"size_t data;\ndata = 0;\nif (data > wcslen(HELLO_STRING))\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":1}
{"idx":16440,"code":"size_t data;\ndata = strtoul(inputBuffer, NULL, 0);\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":0}
{"idx":16441,"code":"void CWE789_Uncontrolled_Mem_Alloc__malloc_wchar_t_listen_socket_22_badSink(size_t data)\nif (data > wcslen(HELLO_STRING))\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":1}
{"idx":16442,"code":"void CWE789_Uncontrolled_Mem_Alloc__malloc_wchar_t_listen_socket_22_goodB2G2Sink(size_t data)\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":0}
{"idx":16443,"code":"data = 20;\nCWE789_Uncontrolled_Mem_Alloc__malloc_wchar_t_listen_socket_22_goodG2BSink(data);\nvoid CWE789_Uncontrolled_Mem_Alloc__malloc_wchar_t_listen_socket_22_goodG2BSink(size_t data)\nif (data > wcslen(HELLO_STRING))\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":1}
{"idx":16444,"code":"void CWE789_Uncontrolled_Mem_Alloc__malloc_wchar_t_listen_socket_22_goodB2G1Sink(size_t data)\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":0}
{"idx":16445,"code":"size_t data;\ndata = 20;\nif (data > wcslen(HELLO_STRING))\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":1}
{"idx":16446,"code":"size_t data;\ndata = strtoul(inputBuffer, NULL, 0);\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":0}
{"idx":16447,"code":"size_t data;\ndata = strtoul(inputBuffer, NULL, 0);\nif (data > wcslen(HELLO_STRING))\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":1}
{"idx":16448,"code":"char inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(connectSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nsize_t dataCopy = data;\nsize_t data = dataCopy;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":0}
{"idx":16449,"code":"data = 20;\nsize_t dataCopy = data;\nsize_t data = dataCopy;\nif (data > wcslen(HELLO_STRING))\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":1}
{"idx":16450,"code":"char inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(connectSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nsize_t dataCopy = data;\nsize_t data = dataCopy;\nif (data > wcslen(HELLO_STRING))\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":1}
{"idx":16451,"code":"size_t data;\ndata = strtoul(inputBuffer, NULL, 0);\nif (data > wcslen(HELLO_STRING))\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":1}
{"idx":16452,"code":"size_t data;\ndata = strtoul(inputBuffer, NULL, 0);\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":0}
{"idx":16453,"code":"size_t data;\ndata = 20;\nif (data > wcslen(HELLO_STRING))\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":1}
{"idx":16454,"code":"size_t *dataPtr2 = &data;\nsize_t data = *dataPtr2;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":0}
{"idx":16455,"code":"size_t *dataPtr2 = &data;\nsize_t data = *dataPtr2;\nif (data > wcslen(HELLO_STRING))\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":1}
{"idx":16456,"code":"size_t *dataPtr2 = &data;\nsize_t data = *dataPtr2;\nif (data > wcslen(HELLO_STRING))\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":1}
{"idx":16457,"code":"size_t data;\ndata = 20;\nif (data > wcslen(HELLO_STRING))\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":1}
{"idx":16458,"code":"size_t data;\ndata = strtoul(inputBuffer, NULL, 0);\nif (data > wcslen(HELLO_STRING))\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":1}
{"idx":16459,"code":"size_t data;\ndata = strtoul(inputBuffer, NULL, 0);\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":0}
{"idx":16460,"code":"CWE789_Uncontrolled_Mem_Alloc__malloc_wchar_t_listen_socket_34_unionType myUnion;\nsize_t data = myUnion.unionSecond;\nif (data > wcslen(HELLO_STRING))\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":1}
{"idx":16461,"code":"CWE789_Uncontrolled_Mem_Alloc__malloc_wchar_t_listen_socket_34_unionType myUnion;\nsize_t data = myUnion.unionSecond;\nif (data > wcslen(HELLO_STRING))\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":1}
{"idx":16462,"code":"CWE789_Uncontrolled_Mem_Alloc__malloc_wchar_t_listen_socket_34_unionType myUnion;\nsize_t data = myUnion.unionSecond;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":0}
{"idx":16463,"code":"size_t data;\ndata = strtoul(inputBuffer, NULL, 0);\nif (data > wcslen(HELLO_STRING))\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":1}
{"idx":16464,"code":"size_t data;\ndata = 20;\nif (data > wcslen(HELLO_STRING))\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":1}
{"idx":16465,"code":"size_t data;\ndata = strtoul(inputBuffer, NULL, 0);\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":0}
{"idx":16466,"code":"char inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(connectSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\ngoodB2GSink(data);\nstatic void goodB2GSink(size_t data)\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":0}
{"idx":16467,"code":"data = 20;\ngoodG2BSink(data);\nstatic void goodG2BSink(size_t data)\nif (data > wcslen(HELLO_STRING))\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":1}
{"idx":16468,"code":"char inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(connectSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nbadSink(data);\nstatic void badSink(size_t data)\nif (data > wcslen(HELLO_STRING))\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":1}
{"idx":16469,"code":"size_t data;\ndata = strtoul(inputBuffer, NULL, 0);\nif (data > wcslen(HELLO_STRING))\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":1}
{"idx":16470,"code":"size_t data;\ndata = strtoul(inputBuffer, NULL, 0);\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":0}
{"idx":16471,"code":"size_t data;\ndata = 20;\nif (data > wcslen(HELLO_STRING))\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":1}
{"idx":16472,"code":"data = 20;\nreturn data;\ndata = goodG2BSource(data);\nif (data > wcslen(HELLO_STRING))\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":1}
{"idx":16473,"code":"char inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(connectSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nreturn data;\ndata = goodB2GSource(data);\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":0}
{"idx":16474,"code":"char inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(connectSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nreturn data;\ndata = badSource(data);\nif (data > wcslen(HELLO_STRING))\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":1}
{"idx":16475,"code":"size_t data;\ndata = strtoul(inputBuffer, NULL, 0);\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":0}
{"idx":16476,"code":"size_t data;\ndata = strtoul(inputBuffer, NULL, 0);\nif (data > wcslen(HELLO_STRING))\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":1}
{"idx":16477,"code":"size_t data;\ndata = 20;\nif (data > wcslen(HELLO_STRING))\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":1}
{"idx":16478,"code":"static void goodG2BSink(size_t data)\nif (data > wcslen(HELLO_STRING))\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":1}
{"idx":16479,"code":"static void badSink(size_t data)\nif (data > wcslen(HELLO_STRING))\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":1}
{"idx":16480,"code":"static void goodB2GSink(size_t data)\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":0}
{"idx":16481,"code":"size_t data;\ndata = 20;\nif (data > wcslen(HELLO_STRING))\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":1}
{"idx":16482,"code":"size_t data;\ndata = strtoul(inputBuffer, NULL, 0);\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":0}
{"idx":16483,"code":"size_t data;\ndata = strtoul(inputBuffer, NULL, 0);\nif (data > wcslen(HELLO_STRING))\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":1}
{"idx":16484,"code":"char inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(connectSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nCWE789_Uncontrolled_Mem_Alloc__malloc_wchar_t_listen_socket_45_goodB2GData = data;\ngoodB2GSink();\nsize_t data = CWE789_Uncontrolled_Mem_Alloc__malloc_wchar_t_listen_socket_45_goodB2GData;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":0}
{"idx":16485,"code":"data = 20;\nCWE789_Uncontrolled_Mem_Alloc__malloc_wchar_t_listen_socket_45_goodG2BData = data;\ngoodG2BSink();\nsize_t data = CWE789_Uncontrolled_Mem_Alloc__malloc_wchar_t_listen_socket_45_goodG2BData;\nif (data > wcslen(HELLO_STRING))\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":1}
{"idx":16486,"code":"char inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(connectSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nCWE789_Uncontrolled_Mem_Alloc__malloc_wchar_t_listen_socket_45_badData = data;\nbadSink();\nsize_t data = CWE789_Uncontrolled_Mem_Alloc__malloc_wchar_t_listen_socket_45_badData;\nif (data > wcslen(HELLO_STRING))\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":1}
{"idx":16487,"code":"size_t data;\ndata = strtoul(inputBuffer, NULL, 0);\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":0}
{"idx":16488,"code":"size_t data;\ndata = strtoul(inputBuffer, NULL, 0);\nif (data > wcslen(HELLO_STRING))\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":1}
{"idx":16489,"code":"size_t data;\ndata = 20;\nif (data > wcslen(HELLO_STRING))\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":1}
{"idx":16490,"code":"void CWE789_Uncontrolled_Mem_Alloc__malloc_wchar_t_listen_socket_51b_goodG2BSink(size_t data)\nif (data > wcslen(HELLO_STRING))\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":1}
{"idx":16491,"code":"void CWE789_Uncontrolled_Mem_Alloc__malloc_wchar_t_listen_socket_51b_badSink(size_t data)\nif (data > wcslen(HELLO_STRING))\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":1}
{"idx":16492,"code":"char inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(connectSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nCWE789_Uncontrolled_Mem_Alloc__malloc_wchar_t_listen_socket_51b_goodB2GSink(data);\nvoid CWE789_Uncontrolled_Mem_Alloc__malloc_wchar_t_listen_socket_51b_goodB2GSink(size_t data)\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":0}
{"idx":16493,"code":"size_t data;\ndata = strtoul(inputBuffer, NULL, 0);\nif (data > wcslen(HELLO_STRING))\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":1}
{"idx":16494,"code":"size_t data;\ndata = 20;\nif (data > wcslen(HELLO_STRING))\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":1}
{"idx":16495,"code":"size_t data;\ndata = strtoul(inputBuffer, NULL, 0);\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":0}
{"idx":16496,"code":"void CWE789_Uncontrolled_Mem_Alloc__malloc_wchar_t_listen_socket_52c_goodG2BSink(size_t data)\nif (data > wcslen(HELLO_STRING))\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":1}
{"idx":16497,"code":"void CWE789_Uncontrolled_Mem_Alloc__malloc_wchar_t_listen_socket_52c_badSink(size_t data)\nif (data > wcslen(HELLO_STRING))\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":1}
{"idx":16498,"code":"void CWE789_Uncontrolled_Mem_Alloc__malloc_wchar_t_listen_socket_52b_goodB2GSink(size_t data)\nCWE789_Uncontrolled_Mem_Alloc__malloc_wchar_t_listen_socket_52c_goodB2GSink(data);\nvoid CWE789_Uncontrolled_Mem_Alloc__malloc_wchar_t_listen_socket_52c_goodB2GSink(size_t data)\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":0}
{"idx":16499,"code":"size_t data;\ndata = strtoul(inputBuffer, NULL, 0);\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":0}
{"idx":16500,"code":"size_t data;\ndata = strtoul(inputBuffer, NULL, 0);\nif (data > wcslen(HELLO_STRING))\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":1}
{"idx":16501,"code":"size_t data;\ndata = 20;\nif (data > wcslen(HELLO_STRING))\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":1}
{"idx":16502,"code":"void CWE789_Uncontrolled_Mem_Alloc__malloc_wchar_t_listen_socket_53c_goodB2GSink(size_t data)\nCWE789_Uncontrolled_Mem_Alloc__malloc_wchar_t_listen_socket_53d_goodB2GSink(data);\nvoid CWE789_Uncontrolled_Mem_Alloc__malloc_wchar_t_listen_socket_53d_goodB2GSink(size_t data)\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":0}
{"idx":16503,"code":"void CWE789_Uncontrolled_Mem_Alloc__malloc_wchar_t_listen_socket_53d_goodG2BSink(size_t data)\nif (data > wcslen(HELLO_STRING))\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":1}
{"idx":16504,"code":"void CWE789_Uncontrolled_Mem_Alloc__malloc_wchar_t_listen_socket_53d_badSink(size_t data)\nif (data > wcslen(HELLO_STRING))\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":1}
{"idx":16505,"code":"size_t data;\ndata = strtoul(inputBuffer, NULL, 0);\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":0}
{"idx":16506,"code":"size_t data;\ndata = strtoul(inputBuffer, NULL, 0);\nif (data > wcslen(HELLO_STRING))\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":1}
{"idx":16507,"code":"size_t data;\ndata = 20;\nif (data > wcslen(HELLO_STRING))\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":1}
{"idx":16508,"code":"void CWE789_Uncontrolled_Mem_Alloc__malloc_wchar_t_listen_socket_54e_goodG2BSink(size_t data)\nif (data > wcslen(HELLO_STRING))\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":1}
{"idx":16509,"code":"void CWE789_Uncontrolled_Mem_Alloc__malloc_wchar_t_listen_socket_54e_badSink(size_t data)\nif (data > wcslen(HELLO_STRING))\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":1}
{"idx":16510,"code":"void CWE789_Uncontrolled_Mem_Alloc__malloc_wchar_t_listen_socket_54d_goodB2GSink(size_t data)\nCWE789_Uncontrolled_Mem_Alloc__malloc_wchar_t_listen_socket_54e_goodB2GSink(data);\nvoid CWE789_Uncontrolled_Mem_Alloc__malloc_wchar_t_listen_socket_54e_goodB2GSink(size_t data)\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":0}
{"idx":16511,"code":"size_t data;\ndata = strtoul(inputBuffer, NULL, 0);\nif (data > wcslen(HELLO_STRING))\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":1}
{"idx":16512,"code":"size_t data;\ndata = strtoul(inputBuffer, NULL, 0);\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":0}
{"idx":16513,"code":"size_t data;\ndata = 20;\nif (data > wcslen(HELLO_STRING))\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":1}
{"idx":16514,"code":"data = CWE789_Uncontrolled_Mem_Alloc__malloc_wchar_t_listen_socket_61b_badSource(data);\nif (data > wcslen(HELLO_STRING))\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":1}
{"idx":16515,"code":"data = CWE789_Uncontrolled_Mem_Alloc__malloc_wchar_t_listen_socket_61b_goodG2BSource(data);\nif (data > wcslen(HELLO_STRING))\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":1}
{"idx":16516,"code":"char inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(connectSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nreturn data;\ndata = CWE789_Uncontrolled_Mem_Alloc__malloc_wchar_t_listen_socket_61b_goodB2GSource(data);\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":0}
{"idx":16517,"code":"size_t data;\ndata = strtoul(inputBuffer, NULL, 0);\nif (data > wcslen(HELLO_STRING))\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":1}
{"idx":16518,"code":"size_t data;\ndata = 20;\nif (data > wcslen(HELLO_STRING))\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":1}
{"idx":16519,"code":"size_t data;\ndata = strtoul(inputBuffer, NULL, 0);\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":0}
{"idx":16520,"code":"void CWE789_Uncontrolled_Mem_Alloc__malloc_wchar_t_listen_socket_63b_badSink(size_t * dataPtr)\nsize_t data = *dataPtr;\nif (data > wcslen(HELLO_STRING))\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":1}
{"idx":16521,"code":"char inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(connectSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nCWE789_Uncontrolled_Mem_Alloc__malloc_wchar_t_listen_socket_63b_goodB2GSink(&data);\nvoid CWE789_Uncontrolled_Mem_Alloc__malloc_wchar_t_listen_socket_63b_goodB2GSink(size_t * dataPtr)\nsize_t data = *dataPtr;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":0}
{"idx":16522,"code":"void CWE789_Uncontrolled_Mem_Alloc__malloc_wchar_t_listen_socket_63b_goodG2BSink(size_t * dataPtr)\nsize_t data = *dataPtr;\nif (data > wcslen(HELLO_STRING))\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":1}
{"idx":16523,"code":"size_t data;\ndata = strtoul(inputBuffer, NULL, 0);\nif (data > wcslen(HELLO_STRING))\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":1}
{"idx":16524,"code":"size_t data;\ndata = 20;\nif (data > wcslen(HELLO_STRING))\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":1}
{"idx":16525,"code":"size_t data;\ndata = strtoul(inputBuffer, NULL, 0);\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":0}
{"idx":16526,"code":"void CWE789_Uncontrolled_Mem_Alloc__malloc_wchar_t_listen_socket_64b_badSink(void * dataVoidPtr)\nsize_t * dataPtr = (size_t *)dataVoidPtr;\nsize_t data = (*dataPtr);\nif (data > wcslen(HELLO_STRING))\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":1}
{"idx":16527,"code":"char inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(connectSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nCWE789_Uncontrolled_Mem_Alloc__malloc_wchar_t_listen_socket_64b_goodB2GSink(&data);\nvoid CWE789_Uncontrolled_Mem_Alloc__malloc_wchar_t_listen_socket_64b_goodB2GSink(void * dataVoidPtr)\nsize_t * dataPtr = (size_t *)dataVoidPtr;\nsize_t data = (*dataPtr);\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":0}
{"idx":16528,"code":"void CWE789_Uncontrolled_Mem_Alloc__malloc_wchar_t_listen_socket_64b_goodG2BSink(void * dataVoidPtr)\nsize_t * dataPtr = (size_t *)dataVoidPtr;\nsize_t data = (*dataPtr);\nif (data > wcslen(HELLO_STRING))\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":1}
{"idx":16529,"code":"size_t data;\ndata = strtoul(inputBuffer, NULL, 0);\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":0}
{"idx":16530,"code":"size_t data;\ndata = strtoul(inputBuffer, NULL, 0);\nif (data > wcslen(HELLO_STRING))\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":1}
{"idx":16531,"code":"size_t data;\ndata = 20;\nif (data > wcslen(HELLO_STRING))\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":1}
{"idx":16532,"code":"void CWE789_Uncontrolled_Mem_Alloc__malloc_wchar_t_listen_socket_65b_goodG2BSink(size_t data)\nif (data > wcslen(HELLO_STRING))\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":1}
{"idx":16533,"code":"void CWE789_Uncontrolled_Mem_Alloc__malloc_wchar_t_listen_socket_65b_badSink(size_t data)\nif (data > wcslen(HELLO_STRING))\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":1}
{"idx":16534,"code":"void CWE789_Uncontrolled_Mem_Alloc__malloc_wchar_t_listen_socket_65b_goodB2GSink(size_t data)\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":0}
{"idx":16535,"code":"size_t data = dataArray[2];\nif (data > wcslen(HELLO_STRING))\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":1}
{"idx":16536,"code":"size_t data = dataArray[2];\nif (data > wcslen(HELLO_STRING))\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":1}
{"idx":16537,"code":"size_t data = dataArray[2];\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":0}
{"idx":16538,"code":"void CWE789_Uncontrolled_Mem_Alloc__malloc_wchar_t_listen_socket_66b_badSink(size_t dataArray[])\nsize_t data = dataArray[2];\nif (data > wcslen(HELLO_STRING))\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":1}
{"idx":16539,"code":"void CWE789_Uncontrolled_Mem_Alloc__malloc_wchar_t_listen_socket_66b_goodG2BSink(size_t dataArray[])\nsize_t data = dataArray[2];\nif (data > wcslen(HELLO_STRING))\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":1}
{"idx":16540,"code":"char inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(connectSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\ndataArray[2] = data;\nCWE789_Uncontrolled_Mem_Alloc__malloc_wchar_t_listen_socket_66b_goodB2GSink(dataArray);\nvoid CWE789_Uncontrolled_Mem_Alloc__malloc_wchar_t_listen_socket_66b_goodB2GSink(size_t dataArray[])\nsize_t data = dataArray[2];\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":0}
{"idx":16541,"code":"size_t data;\ndata = strtoul(inputBuffer, NULL, 0);\nif (data > wcslen(HELLO_STRING))\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":1}
{"idx":16542,"code":"size_t data;\ndata = 20;\nif (data > wcslen(HELLO_STRING))\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":1}
{"idx":16543,"code":"size_t data;\ndata = strtoul(inputBuffer, NULL, 0);\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":0}
{"idx":16544,"code":"void CWE789_Uncontrolled_Mem_Alloc__malloc_wchar_t_listen_socket_67b_badSink(CWE789_Uncontrolled_Mem_Alloc__malloc_wchar_t_listen_socket_67_structType myStruct)\nsize_t data = myStruct.structFirst;\nif (data > wcslen(HELLO_STRING))\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":1}
{"idx":16545,"code":"CWE789_Uncontrolled_Mem_Alloc__malloc_wchar_t_listen_socket_67_structType myStruct;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nmyStruct.structFirst = data;\nCWE789_Uncontrolled_Mem_Alloc__malloc_wchar_t_listen_socket_67b_goodB2GSink(myStruct);\nvoid CWE789_Uncontrolled_Mem_Alloc__malloc_wchar_t_listen_socket_67b_goodB2GSink(CWE789_Uncontrolled_Mem_Alloc__malloc_wchar_t_listen_socket_67_structType myStruct)\nsize_t data = myStruct.structFirst;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":0}
{"idx":16546,"code":"void CWE789_Uncontrolled_Mem_Alloc__malloc_wchar_t_listen_socket_67b_goodG2BSink(CWE789_Uncontrolled_Mem_Alloc__malloc_wchar_t_listen_socket_67_structType myStruct)\nsize_t data = myStruct.structFirst;\nif (data > wcslen(HELLO_STRING))\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":1}
{"idx":16547,"code":"size_t data;\ndata = strtoul(inputBuffer, NULL, 0);\nif (data > wcslen(HELLO_STRING))\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":1}
{"idx":16548,"code":"size_t data;\ndata = 20;\nif (data > wcslen(HELLO_STRING))\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":1}
{"idx":16549,"code":"size_t data;\ndata = strtoul(inputBuffer, NULL, 0);\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":0}
{"idx":16550,"code":"size_t data = CWE789_Uncontrolled_Mem_Alloc__malloc_wchar_t_listen_socket_68_badData;\nif (data > wcslen(HELLO_STRING))\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":1}
{"idx":16551,"code":"char inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(connectSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nCWE789_Uncontrolled_Mem_Alloc__malloc_wchar_t_listen_socket_68_goodB2GData = data;\nCWE789_Uncontrolled_Mem_Alloc__malloc_wchar_t_listen_socket_68b_goodB2GSink();\nsize_t data = CWE789_Uncontrolled_Mem_Alloc__malloc_wchar_t_listen_socket_68_goodB2GData;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":0}
{"idx":16552,"code":"size_t data = CWE789_Uncontrolled_Mem_Alloc__malloc_wchar_t_listen_socket_68_goodG2BData;\nif (data > wcslen(HELLO_STRING))\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":1}
{"idx":16553,"code":"size_t data;\ndata = 0;\nif (data > wcslen(HELLO_STRING))\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":1}
{"idx":16554,"code":"void CWE789_Uncontrolled_Mem_Alloc__malloc_wchar_t_listen_socket_81_bad::action(size_t data) const\nif (data > wcslen(HELLO_STRING))\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":1}
{"idx":16555,"code":"size_t data;\ndata = 0;\nif (data > wcslen(HELLO_STRING))\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":1}
{"idx":16556,"code":"void CWE789_Uncontrolled_Mem_Alloc__malloc_wchar_t_listen_socket_82_bad::action(size_t data)\nif (data > wcslen(HELLO_STRING))\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":1}
{"idx":16557,"code":"CWE789_Uncontrolled_Mem_Alloc__malloc_wchar_t_listen_socket_82_base* baseObject = new CWE789_Uncontrolled_Mem_Alloc__malloc_wchar_t_listen_socket_82_bad;\nbaseObject->action(data);\ndelete baseObject;\n \n","target":0}
{"idx":16558,"code":"CWE789_Uncontrolled_Mem_Alloc__malloc_wchar_t_listen_socket_82_base* baseObject = new CWE789_Uncontrolled_Mem_Alloc__malloc_wchar_t_listen_socket_82_goodB2G;\nbaseObject->action(data);\ndelete baseObject;\n \n","target":0}
{"idx":16559,"code":"CWE789_Uncontrolled_Mem_Alloc__malloc_wchar_t_listen_socket_82_base* baseObject = new CWE789_Uncontrolled_Mem_Alloc__malloc_wchar_t_listen_socket_82_goodG2B;\nbaseObject->action(data);\ndelete baseObject;\n \n","target":0}
{"idx":16560,"code":"CWE789_Uncontrolled_Mem_Alloc__malloc_wchar_t_listen_socket_82_base* baseObject = new CWE789_Uncontrolled_Mem_Alloc__malloc_wchar_t_listen_socket_82_goodG2B;\nbaseObject->action(data);\ndelete baseObject;\n \n","target":0}
{"idx":16561,"code":"CWE789_Uncontrolled_Mem_Alloc__malloc_wchar_t_listen_socket_82_base* baseObject = new CWE789_Uncontrolled_Mem_Alloc__malloc_wchar_t_listen_socket_82_bad;\nbaseObject->action(data);\ndelete baseObject;\n \n","target":0}
{"idx":16562,"code":"CWE789_Uncontrolled_Mem_Alloc__malloc_wchar_t_listen_socket_82_base* baseObject = new CWE789_Uncontrolled_Mem_Alloc__malloc_wchar_t_listen_socket_82_goodB2G;\nbaseObject->action(data);\ndelete baseObject;\n \n","target":0}
{"idx":16563,"code":"CWE789_Uncontrolled_Mem_Alloc__malloc_wchar_t_listen_socket_84_goodB2G * goodB2GObject = new CWE789_Uncontrolled_Mem_Alloc__malloc_wchar_t_listen_socket_84_goodB2G(data);\ndelete goodB2GObject;\n \n","target":0}
{"idx":16564,"code":"CWE789_Uncontrolled_Mem_Alloc__malloc_wchar_t_listen_socket_84_goodG2B * goodG2BObject = new CWE789_Uncontrolled_Mem_Alloc__malloc_wchar_t_listen_socket_84_goodG2B(data);\ndelete goodG2BObject;\n \n","target":0}
{"idx":16565,"code":"CWE789_Uncontrolled_Mem_Alloc__malloc_wchar_t_listen_socket_84_bad * badObject = new CWE789_Uncontrolled_Mem_Alloc__malloc_wchar_t_listen_socket_84_bad(data);\ndelete badObject;\n \n","target":0}
{"idx":16566,"code":"CWE789_Uncontrolled_Mem_Alloc__malloc_wchar_t_listen_socket_84_goodG2B * goodG2BObject = new CWE789_Uncontrolled_Mem_Alloc__malloc_wchar_t_listen_socket_84_goodG2B(data);\ndelete goodG2BObject;\n \n","target":0}
{"idx":16567,"code":"CWE789_Uncontrolled_Mem_Alloc__malloc_wchar_t_listen_socket_84_bad * badObject = new CWE789_Uncontrolled_Mem_Alloc__malloc_wchar_t_listen_socket_84_bad(data);\ndelete badObject;\n \n","target":0}
{"idx":16568,"code":"CWE789_Uncontrolled_Mem_Alloc__malloc_wchar_t_listen_socket_84_goodB2G * goodB2GObject = new CWE789_Uncontrolled_Mem_Alloc__malloc_wchar_t_listen_socket_84_goodB2G(data);\ndelete goodB2GObject;\n \n","target":0}
{"idx":16569,"code":"size_t data;\ndata = strtoul(inputBuffer, NULL, 0);\nif (data > wcslen(HELLO_STRING))\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":1}
{"idx":16570,"code":"size_t data;\ndata = 20;\nif (data > wcslen(HELLO_STRING))\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":1}
{"idx":16571,"code":"size_t data;\ndata = strtoul(inputBuffer, NULL, 0);\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":0}
{"idx":16572,"code":"data = rand();\nif (data > wcslen(HELLO_STRING))\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":1}
{"idx":16573,"code":"data = rand();\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":0}
{"idx":16574,"code":"data = 20;\nif (data > wcslen(HELLO_STRING))\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":1}
{"idx":16575,"code":"size_t data;\ndata = strtoul(inputBuffer, NULL, 0);\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":0}
{"idx":16576,"code":"size_t data;\ndata = 0;\nif (data > wcslen(HELLO_STRING))\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":1}
{"idx":16577,"code":"size_t data;\ndata = 0;\nif (data > wcslen(HELLO_STRING))\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":1}
{"idx":16578,"code":"size_t data;\ndata = strtoul(inputBuffer, NULL, 0);\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":0}
{"idx":16579,"code":"size_t data;\ndata = strtoul(inputBuffer, NULL, 0);\nif (data > wcslen(HELLO_STRING))\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":1}
{"idx":16580,"code":"data = 0;\ndata = 20;\nif (data > wcslen(HELLO_STRING))\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":1}
{"idx":16581,"code":"data = 0;\ndata = rand();\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":0}
{"idx":16582,"code":"data = 0;\ndata = rand();\nif (data > wcslen(HELLO_STRING))\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":1}
{"idx":16583,"code":"data = 0;\ndata = rand();\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":0}
{"idx":16584,"code":"data = 0;\ndata = 20;\nif (data > wcslen(HELLO_STRING))\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":1}
{"idx":16585,"code":"size_t data;\ndata = strtoul(inputBuffer, NULL, 0);\nif (data > wcslen(HELLO_STRING))\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":1}
{"idx":16586,"code":"size_t data;\ndata = 20;\nif (data > wcslen(HELLO_STRING))\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":1}
{"idx":16587,"code":"size_t data;\ndata = strtoul(inputBuffer, NULL, 0);\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":0}
{"idx":16588,"code":"data = rand();\nif (data > wcslen(HELLO_STRING))\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":1}
{"idx":16589,"code":"data = rand();\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":0}
{"idx":16590,"code":"data = 20;\nif (data > wcslen(HELLO_STRING))\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":1}
{"idx":16591,"code":"size_t data;\ndata = strtoul(inputBuffer, NULL, 0);\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":0}
{"idx":16592,"code":"size_t data;\ndata = 0;\nif (data > wcslen(HELLO_STRING))\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":1}
{"idx":16593,"code":"size_t data;\ndata = 0;\nif (data > wcslen(HELLO_STRING))\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":1}
{"idx":16594,"code":"size_t data;\ndata = strtoul(inputBuffer, NULL, 0);\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":0}
{"idx":16595,"code":"size_t data;\ndata = strtoul(inputBuffer, NULL, 0);\nif (data > wcslen(HELLO_STRING))\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":1}
{"idx":16596,"code":"data = 0;\ndata = 20;\nif (data > wcslen(HELLO_STRING))\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":1}
{"idx":16597,"code":"data = 0;\ndata = rand();\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":0}
{"idx":16598,"code":"data = 0;\ndata = rand();\nif (data > wcslen(HELLO_STRING))\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":1}
{"idx":16599,"code":"data = 0;\ndata = rand();\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":0}
{"idx":16600,"code":"data = 0;\ndata = 20;\nif (data > wcslen(HELLO_STRING))\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":1}
{"idx":16601,"code":"size_t data;\ndata = strtoul(inputBuffer, NULL, 0);\nif (data > wcslen(HELLO_STRING))\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":1}
{"idx":16602,"code":"size_t data;\ndata = strtoul(inputBuffer, NULL, 0);\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":0}
{"idx":16603,"code":"size_t data;\ndata = 20;\nif (data > wcslen(HELLO_STRING))\nmyString = (wchar_t *)malloc(data*sizeof(wchar_t));\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\nfree(myString);\n \n","target":1}
{"idx":16604,"code":"size_t data;\ndata = 0;\ndata = rand();\nbadGlobal = 1;\nbadSink(data);\nvoid badSink(size_t data)\nif(badGlobal)\nchar * myString;\nif (data > strlen(HELLO_STRING))\nmyString = new char[data];\nstrcpy(myString, HELLO_STRING);\nprintLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":16605,"code":"size_t data;\ndata = 0;\ndata = rand();\ngoodB2G1Global = 0;\ngoodB2G1Sink(data);\nvoid goodB2G1Sink(size_t data)\nif(goodB2G1Global){}\nelse\nchar * myString;\nif (data > strlen(HELLO_STRING) && data < 100)\nmyString = new char[data];\nstrcpy(myString, HELLO_STRING);\nprintLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16606,"code":"size_t data;\ndata = 0;\ndata = rand();\ngoodB2G2Global = 1;\ngoodB2G2Sink(data);\nvoid goodB2G2Sink(size_t data)\nif(goodB2G2Global)\nchar * myString;\nif (data > strlen(HELLO_STRING) && data < 100)\nmyString = new char[data];\nstrcpy(myString, HELLO_STRING);\nprintLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16607,"code":"size_t data;\ndata = 0;\ndata = 20;\ngoodG2B1Global = 1;\ngoodG2B1Sink(data);\nvoid goodG2B1Sink(size_t data)\nif(goodG2B1Global)\nchar * myString;\nif (data > strlen(HELLO_STRING))\nmyString = new char[data];\nstrcpy(myString, HELLO_STRING);\nprintLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16608,"code":"size_t data;\ndata = 0;\ndata = rand();\nsize_t dataCopy = data;\nsize_t data = dataCopy;\nchar * myString;\nif (data > strlen(HELLO_STRING))\nmyString = new char[data];\nstrcpy(myString, HELLO_STRING);\nprintLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":16609,"code":"size_t data;\ndata = 0;\ndata = rand();\nsize_t dataCopy = data;\nsize_t data = dataCopy;\nchar * myString;\nif (data > strlen(HELLO_STRING) && data < 100)\nmyString = new char[data];\nstrcpy(myString, HELLO_STRING);\nprintLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16610,"code":"size_t data;\ndata = 0;\ndata = 20;\nsize_t dataCopy = data;\nsize_t data = dataCopy;\nchar * myString;\nif (data > strlen(HELLO_STRING))\nmyString = new char[data];\nstrcpy(myString, HELLO_STRING);\nprintLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16611,"code":"size_t data;\nsize_t *dataPtr1 = &data;\nsize_t *dataPtr2 = &data;\ndata = 0;\nsize_t data = *dataPtr1;\ndata = rand();\n*dataPtr1 = data;\nsize_t data = *dataPtr2;\nchar * myString;\nif (data > strlen(HELLO_STRING) && data < 100)\nmyString = new char[data];\nstrcpy(myString, HELLO_STRING);\nprintLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16612,"code":"size_t data;\nsize_t *dataPtr1 = &data;\nsize_t *dataPtr2 = &data;\ndata = 0;\nsize_t data = *dataPtr1;\ndata = 20;\n*dataPtr1 = data;\nsize_t data = *dataPtr2;\nchar * myString;\nif (data > strlen(HELLO_STRING))\nmyString = new char[data];\nstrcpy(myString, HELLO_STRING);\nprintLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16613,"code":"size_t data;\nsize_t *dataPtr1 = &data;\nsize_t *dataPtr2 = &data;\ndata = 0;\nsize_t data = *dataPtr1;\ndata = rand();\n*dataPtr1 = data;\nsize_t data = *dataPtr2;\nchar * myString;\nif (data > strlen(HELLO_STRING))\nmyString = new char[data];\nstrcpy(myString, HELLO_STRING);\nprintLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":16614,"code":"size_t data;\nsize_t &dataRef = data;\ndata = 0;\ndata = rand();\nsize_t data = dataRef;\nchar * myString;\nif (data > strlen(HELLO_STRING))\nmyString = new char[data];\nstrcpy(myString, HELLO_STRING);\nprintLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":16615,"code":"size_t data;\nsize_t &dataRef = data;\ndata = 0;\ndata = rand();\nsize_t data = dataRef;\nchar * myString;\nif (data > strlen(HELLO_STRING) && data < 100)\nmyString = new char[data];\nstrcpy(myString, HELLO_STRING);\nprintLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16616,"code":"size_t data;\nsize_t &dataRef = data;\ndata = 0;\ndata = 20;\nsize_t data = dataRef;\nchar * myString;\nif (data > strlen(HELLO_STRING))\nmyString = new char[data];\nstrcpy(myString, HELLO_STRING);\nprintLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16617,"code":"size_t data;\nunionType myUnion;\ndata = 0;\ndata = rand();\nmyUnion.unionFirst = data;\nsize_t data = myUnion.unionSecond;\nchar * myString;\nif (data > strlen(HELLO_STRING))\nmyString = new char[data];\nstrcpy(myString, HELLO_STRING);\nprintLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":16618,"code":"size_t data;\nunionType myUnion;\ndata = 0;\ndata = 20;\nmyUnion.unionFirst = data;\nsize_t data = myUnion.unionSecond;\nchar * myString;\nif (data > strlen(HELLO_STRING))\nmyString = new char[data];\nstrcpy(myString, HELLO_STRING);\nprintLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16619,"code":"size_t data;\nunionType myUnion;\ndata = 0;\ndata = rand();\nmyUnion.unionFirst = data;\nsize_t data = myUnion.unionSecond;\nchar * myString;\nif (data > strlen(HELLO_STRING) && data < 100)\nmyString = new char[data];\nstrcpy(myString, HELLO_STRING);\nprintLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16620,"code":"size_t data;\ndata = 0;\ndata = rand();\nbadSink(data);\nstatic void badSink(size_t data)\nchar * myString;\nif (data > strlen(HELLO_STRING))\nmyString = new char[data];\nstrcpy(myString, HELLO_STRING);\nprintLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":16621,"code":"size_t data;\ndata = 0;\ndata = rand();\ngoodB2GSink(data);\nstatic void goodB2GSink(size_t data)\nchar * myString;\nif (data > strlen(HELLO_STRING) && data < 100)\nmyString = new char[data];\nstrcpy(myString, HELLO_STRING);\nprintLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16622,"code":"size_t data;\ndata = 0;\ndata = 20;\ngoodG2BSink(data);\nstatic void goodG2BSink(size_t data)\nchar * myString;\nif (data > strlen(HELLO_STRING))\nmyString = new char[data];\nstrcpy(myString, HELLO_STRING);\nprintLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16623,"code":"size_t data;\ndata = 0;\ndata = goodG2BSource(data);\nstatic size_t goodG2BSource(size_t data)\ndata = 20;\nreturn data;\nchar * myString;\nif (data > strlen(HELLO_STRING))\nmyString = new char[data];\nstrcpy(myString, HELLO_STRING);\nprintLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16624,"code":"size_t data;\ndata = 0;\ndata = badSource(data);\nstatic size_t badSource(size_t data)\ndata = rand();\nreturn data;\nchar * myString;\nif (data > strlen(HELLO_STRING))\nmyString = new char[data];\nstrcpy(myString, HELLO_STRING);\nprintLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":16625,"code":"size_t data;\ndata = 0;\ndata = goodB2GSource(data);\nstatic size_t goodB2GSource(size_t data)\ndata = rand();\nreturn data;\nchar * myString;\nif (data > strlen(HELLO_STRING) && data < 100)\nmyString = new char[data];\nstrcpy(myString, HELLO_STRING);\nprintLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16626,"code":"size_t data;\ndata = 0;\ngoodB2GSource(data);\nstatic void goodB2GSource(size_t &data)\ndata = rand();\nchar * myString;\nif (data > strlen(HELLO_STRING) && data < 100)\nmyString = new char[data];\nstrcpy(myString, HELLO_STRING);\nprintLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16627,"code":"size_t data;\ndata = 0;\ngoodG2BSource(data);\nstatic void goodG2BSource(size_t &data)\ndata = 20;\nchar * myString;\nif (data > strlen(HELLO_STRING))\nmyString = new char[data];\nstrcpy(myString, HELLO_STRING);\nprintLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16628,"code":"size_t data;\ndata = 0;\nbadSource(data);\nvoid badSource(size_t &data)\ndata = rand();\nchar * myString;\nif (data > strlen(HELLO_STRING))\nmyString = new char[data];\nstrcpy(myString, HELLO_STRING);\nprintLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":16629,"code":"size_t data;\nvoid (*funcPtr) (size_t) = goodG2BSink;\ndata = 0;\ndata = 20;\nfuncPtr(data);\nstatic void goodG2BSink(size_t data)\nchar * myString;\nif (data > strlen(HELLO_STRING))\nmyString = new char[data];\nstrcpy(myString, HELLO_STRING);\nprintLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16630,"code":"size_t data;\nvoid (*funcPtr) (size_t) = badSink;\ndata = 0;\ndata = rand();\nfuncPtr(data);\nstatic void badSink(size_t data)\nchar * myString;\nif (data > strlen(HELLO_STRING))\nmyString = new char[data];\nstrcpy(myString, HELLO_STRING);\nprintLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":16631,"code":"size_t data;\nvoid (*funcPtr) (size_t) = goodB2GSink;\ndata = 0;\ndata = rand();\nfuncPtr(data);\nstatic void goodB2GSink(size_t data)\nchar * myString;\nif (data > strlen(HELLO_STRING) && data < 100)\nmyString = new char[data];\nstrcpy(myString, HELLO_STRING);\nprintLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16632,"code":"size_t data;\ndata = 0;\ndata = rand();\ngoodB2GData = data;\ngoodB2GSink();\nstatic void goodB2GSink()\nsize_t data = goodB2GData;\nchar * myString;\nif (data > strlen(HELLO_STRING) && data < 100)\nmyString = new char[data];\nstrcpy(myString, HELLO_STRING);\nprintLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16633,"code":"size_t data;\ndata = 0;\ndata = 20;\ngoodG2BData = data;\ngoodG2BSink();\nstatic void goodG2BSink()\nsize_t data = goodG2BData;\nchar * myString;\nif (data > strlen(HELLO_STRING))\nmyString = new char[data];\nstrcpy(myString, HELLO_STRING);\nprintLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16634,"code":"size_t data;\ndata = 0;\ndata = rand();\nbadData = data;\nbadSink();\nstatic void badSink()\nsize_t data = badData;\nchar * myString;\nif (data > strlen(HELLO_STRING))\nmyString = new char[data];\nstrcpy(myString, HELLO_STRING);\nprintLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":16635,"code":"size_t data;\ndata = 0;\ndata = rand();\nbadSink(data);\nvoid badSink(size_t data)\nchar * myString;\nif (data > strlen(HELLO_STRING))\nmyString = new char[data];\nstrcpy(myString, HELLO_STRING);\nprintLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":16636,"code":"size_t data;\ndata = 0;\ndata = 20;\ngoodG2BSink(data);\nvoid goodG2BSink(size_t data)\nchar * myString;\nif (data > strlen(HELLO_STRING))\nmyString = new char[data];\nstrcpy(myString, HELLO_STRING);\nprintLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16637,"code":"size_t data;\ndata = 0;\ndata = rand();\ngoodB2GSink(data);\nvoid goodB2GSink(size_t data)\nchar * myString;\nif (data > strlen(HELLO_STRING) && data < 100)\nmyString = new char[data];\nstrcpy(myString, HELLO_STRING);\nprintLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16638,"code":"size_t data;\ndata = 0;\ndata = rand();\nbadSink_b(data);\nvoid badSink_b(size_t data)\nbadSink_c(data);\nvoid badSink_c(size_t data)\nchar * myString;\nif (data > strlen(HELLO_STRING))\nmyString = new char[data];\nstrcpy(myString, HELLO_STRING);\nprintLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":16639,"code":"size_t data;\ndata = 0;\ndata = 20;\ngoodG2BSink_b(data);\nvoid goodG2BSink_b(size_t data)\ngoodG2BSink_c(data);\nvoid goodG2BSink_c(size_t data)\nchar * myString;\nif (data > strlen(HELLO_STRING))\nmyString = new char[data];\nstrcpy(myString, HELLO_STRING);\nprintLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16640,"code":"size_t data;\ndata = 0;\ndata = rand();\ngoodB2GSink_b(data);\nvoid goodB2GSink_b(size_t data)\ngoodB2GSink_c(data);\nvoid goodB2GSink_c(size_t data)\nchar * myString;\nif (data > strlen(HELLO_STRING) && data < 100)\nmyString = new char[data];\nstrcpy(myString, HELLO_STRING);\nprintLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16641,"code":"size_t data;\ndata = 0;\ndata = rand();\nbadSink_b(data);\nvoid badSink_b(size_t data)\nbadSink_c(data);\nvoid badSink_c(size_t data)\nbadSink_d(data);\nvoid badSink_d(size_t data)\nchar * myString;\nif (data > strlen(HELLO_STRING))\nmyString = new char[data];\nstrcpy(myString, HELLO_STRING);\nprintLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":16642,"code":"size_t data;\ndata = 0;\ndata = 20;\ngoodG2BSink_b(data);\nvoid goodG2BSink_b(size_t data)\ngoodG2BSink_c(data);\nvoid goodG2BSink_c(size_t data)\ngoodG2BSink_d(data);\nvoid goodG2BSink_d(size_t data)\nchar * myString;\nif (data > strlen(HELLO_STRING))\nmyString = new char[data];\nstrcpy(myString, HELLO_STRING);\nprintLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16643,"code":"size_t data;\ndata = 0;\ndata = rand();\ngoodB2GSink_b(data);\nvoid goodB2GSink_b(size_t data)\ngoodB2GSink_c(data);\nvoid goodB2GSink_c(size_t data)\ngoodB2GSink_d(data);\nvoid goodB2GSink_d(size_t data)\nchar * myString;\nif (data > strlen(HELLO_STRING) && data < 100)\nmyString = new char[data];\nstrcpy(myString, HELLO_STRING);\nprintLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16644,"code":"size_t data;\ndata = 0;\ndata = rand();\nbadSink_b(data);\nvoid badSink_b(size_t data)\nbadSink_c(data);\nvoid badSink_c(size_t data)\nbadSink_d(data);\nvoid badSink_d(size_t data)\nbadSink_e(data);\nvoid badSink_e(size_t data)\nchar * myString;\nif (data > strlen(HELLO_STRING))\nmyString = new char[data];\nstrcpy(myString, HELLO_STRING);\nprintLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":16645,"code":"size_t data;\ndata = 0;\ndata = 20;\ngoodG2BSink_b(data);\nvoid goodG2BSink_b(size_t data)\ngoodG2BSink_c(data);\nvoid goodG2BSink_c(size_t data)\ngoodG2BSink_d(data);\nvoid goodG2BSink_d(size_t data)\ngoodG2BSink_e(data);\nvoid goodG2BSink_e(size_t data)\nchar * myString;\nif (data > strlen(HELLO_STRING))\nmyString = new char[data];\nstrcpy(myString, HELLO_STRING);\nprintLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16646,"code":"size_t data;\ndata = 0;\ndata = rand();\ngoodB2GSink_b(data);\nvoid goodB2GSink_b(size_t data)\ngoodB2GSink_c(data);\nvoid goodB2GSink_c(size_t data)\ngoodB2GSink_d(data);\nvoid goodB2GSink_d(size_t data)\ngoodB2GSink_e(data);\nvoid goodB2GSink_e(size_t data)\nchar * myString;\nif (data > strlen(HELLO_STRING) && data < 100)\nmyString = new char[data];\nstrcpy(myString, HELLO_STRING);\nprintLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16647,"code":"size_t data;\ndata = 0;\ndata = goodG2BSource(data);\nsize_t goodG2BSource(size_t data)\ndata = 20;\nreturn data;\nchar * myString;\nif (data > strlen(HELLO_STRING))\nmyString = new char[data];\nstrcpy(myString, HELLO_STRING);\nprintLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16648,"code":"size_t data;\ndata = 0;\ndata = badSource(data);\nsize_t badSource(size_t data)\ndata = rand();\nreturn data;\nchar * myString;\nif (data > strlen(HELLO_STRING))\nmyString = new char[data];\nstrcpy(myString, HELLO_STRING);\nprintLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":16649,"code":"size_t data;\ndata = 0;\ndata = goodB2GSource(data);\nsize_t goodB2GSource(size_t data)\ndata = rand();\nreturn data;\nchar * myString;\nif (data > strlen(HELLO_STRING) && data < 100)\nmyString = new char[data];\nstrcpy(myString, HELLO_STRING);\nprintLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16650,"code":"size_t data;\ndata = 0;\ngoodG2BSource(data);\nvoid goodG2BSource(size_t &data)\ndata = 20;\nchar * myString;\nif (data > strlen(HELLO_STRING))\nmyString = new char[data];\nstrcpy(myString, HELLO_STRING);\nprintLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16651,"code":"size_t data;\ndata = 0;\nbadSource(data);\nvoid badSource(size_t &data)\ndata = rand();\nchar * myString;\nif (data > strlen(HELLO_STRING))\nmyString = new char[data];\nstrcpy(myString, HELLO_STRING);\nprintLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":16652,"code":"size_t data;\ndata = 0;\ngoodB2GSource(data);\nvoid goodB2GSource(size_t &data)\ndata = rand();\nchar * myString;\nif (data > strlen(HELLO_STRING) && data < 100)\nmyString = new char[data];\nstrcpy(myString, HELLO_STRING);\nprintLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16653,"code":"size_t data;\ndata = 0;\ndata = rand();\nbadSink(&data);\nvoid badSink(size_t * dataPtr)\nsize_t data = *dataPtr;\nchar * myString;\nif (data > strlen(HELLO_STRING))\nmyString = new char[data];\nstrcpy(myString, HELLO_STRING);\nprintLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":16654,"code":"size_t data;\ndata = 0;\ndata = rand();\ngoodB2GSink(&data);\nvoid goodB2GSink(size_t * dataPtr)\nsize_t data = *dataPtr;\nchar * myString;\nif (data > strlen(HELLO_STRING) && data < 100)\nmyString = new char[data];\nstrcpy(myString, HELLO_STRING);\nprintLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16655,"code":"size_t data;\ndata = 0;\ndata = 20;\ngoodG2BSink(&data);\nvoid goodG2BSink(size_t * dataPtr)\nsize_t data = *dataPtr;\nchar * myString;\nif (data > strlen(HELLO_STRING))\nmyString = new char[data];\nstrcpy(myString, HELLO_STRING);\nprintLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16656,"code":"size_t data;\ndata = 0;\ndata = rand();\ngoodB2GSink(&data);\nvoid goodB2GSink(void * dataVoidPtr)\nsize_t * dataPtr = (size_t *)dataVoidPtr;\nsize_t data = (*dataPtr);\nchar * myString;\nif (data > strlen(HELLO_STRING) && data < 100)\nmyString = new char[data];\nstrcpy(myString, HELLO_STRING);\nprintLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16657,"code":"size_t data;\ndata = 0;\ndata = 20;\ngoodG2BSink(&data);\nvoid goodG2BSink(void * dataVoidPtr)\nsize_t * dataPtr = (size_t *)dataVoidPtr;\nsize_t data = (*dataPtr);\nchar * myString;\nif (data > strlen(HELLO_STRING))\nmyString = new char[data];\nstrcpy(myString, HELLO_STRING);\nprintLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16658,"code":"size_t data;\ndata = 0;\ndata = rand();\nbadSink(&data);\nvoid badSink(void * dataVoidPtr)\nsize_t * dataPtr = (size_t *)dataVoidPtr;\nsize_t data = (*dataPtr);\nchar * myString;\nif (data > strlen(HELLO_STRING))\nmyString = new char[data];\nstrcpy(myString, HELLO_STRING);\nprintLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":16659,"code":"size_t data;\nvoid (*funcPtr) (size_t) = goodB2GSink;\ndata = 0;\ndata = rand();\nfuncPtr(data);\nvoid goodB2GSink(size_t data)\nchar * myString;\nif (data > strlen(HELLO_STRING) && data < 100)\nmyString = new char[data];\nstrcpy(myString, HELLO_STRING);\nprintLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16660,"code":"size_t data;\nvoid (*funcPtr) (size_t) = goodG2BSink;\ndata = 0;\ndata = 20;\nfuncPtr(data);\nvoid goodG2BSink(size_t data)\nchar * myString;\nif (data > strlen(HELLO_STRING))\nmyString = new char[data];\nstrcpy(myString, HELLO_STRING);\nprintLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16661,"code":"size_t data;\nvoid (*funcPtr) (size_t) = badSink;\ndata = 0;\ndata = rand();\nfuncPtr(data);\nvoid badSink(size_t data)\nchar * myString;\nif (data > strlen(HELLO_STRING))\nmyString = new char[data];\nstrcpy(myString, HELLO_STRING);\nprintLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":16662,"code":"size_t data;\nsize_t dataArray[5];\ndata = 0;\ndata = rand();\ndataArray[2] = data;\nbadSink(dataArray);\nvoid badSink(size_t dataArray[])\nsize_t data = dataArray[2];\nchar * myString;\nif (data > strlen(HELLO_STRING))\nmyString = new char[data];\nstrcpy(myString, HELLO_STRING);\nprintLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":16663,"code":"size_t data;\nsize_t dataArray[5];\ndata = 0;\ndata = rand();\ndataArray[2] = data;\ngoodB2GSink(dataArray);\nvoid goodB2GSink(size_t dataArray[])\nsize_t data = dataArray[2];\nchar * myString;\nif (data > strlen(HELLO_STRING) && data < 100)\nmyString = new char[data];\nstrcpy(myString, HELLO_STRING);\nprintLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16664,"code":"size_t data;\nsize_t dataArray[5];\ndata = 0;\ndata = 20;\ndataArray[2] = data;\ngoodG2BSink(dataArray);\nvoid goodG2BSink(size_t dataArray[])\nsize_t data = dataArray[2];\nchar * myString;\nif (data > strlen(HELLO_STRING))\nmyString = new char[data];\nstrcpy(myString, HELLO_STRING);\nprintLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16665,"code":"size_t data;\nstructType myStruct;\ndata = 0;\ndata = rand();\nmyStruct.structFirst = data;\nbadSink(myStruct);\nvoid badSink(structType myStruct)\nsize_t data = myStruct.structFirst;\nchar * myString;\nif (data > strlen(HELLO_STRING))\nmyString = new char[data];\nstrcpy(myString, HELLO_STRING);\nprintLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":16666,"code":"size_t data;\nstructType myStruct;\ndata = 0;\ndata = 20;\nmyStruct.structFirst = data;\ngoodG2BSink(myStruct);\nvoid goodG2BSink(structType myStruct)\nsize_t data = myStruct.structFirst;\nchar * myString;\nif (data > strlen(HELLO_STRING))\nmyString = new char[data];\nstrcpy(myString, HELLO_STRING);\nprintLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16667,"code":"size_t data;\nstructType myStruct;\ndata = 0;\ndata = rand();\nmyStruct.structFirst = data;\ngoodB2GSink(myStruct);\nvoid goodB2GSink(structType myStruct)\nsize_t data = myStruct.structFirst;\nchar * myString;\nif (data > strlen(HELLO_STRING) && data < 100)\nmyString = new char[data];\nstrcpy(myString, HELLO_STRING);\nprintLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16668,"code":"size_t data;\ndata = 0;\ndata = rand();\ngoodB2GData = data;\ngoodB2GSink();\nvoid goodB2GSink()\nsize_t data = goodB2GData;\nchar * myString;\nif (data > strlen(HELLO_STRING) && data < 100)\nmyString = new char[data];\nstrcpy(myString, HELLO_STRING);\nprintLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16669,"code":"size_t data;\ndata = 0;\ndata = 20;\ngoodG2BData = data;\ngoodG2BSink();\nvoid goodG2BSink()\nsize_t data = goodG2BData;\nchar * myString;\nif (data > strlen(HELLO_STRING))\nmyString = new char[data];\nstrcpy(myString, HELLO_STRING);\nprintLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16670,"code":"size_t data;\ndata = 0;\ndata = rand();\nbadData = data;\nbadSink();\nvoid badSink()\nsize_t data = badData;\nchar * myString;\nif (data > strlen(HELLO_STRING))\nmyString = new char[data];\nstrcpy(myString, HELLO_STRING);\nprintLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":16671,"code":"size_t data;\nvector<size_t> dataVector;\ndata = 0;\ndata = 20;\ndataVector.insert(dataVector.end(), 1, data);\ndataVector.insert(dataVector.end(), 1, data);\ndataVector.insert(dataVector.end(), 1, data);\ngoodG2BSink(dataVector);\nvoid goodG2BSink(vector<size_t> dataVector)\nsize_t data = dataVector[2];\nchar * myString;\nif (data > strlen(HELLO_STRING))\nmyString = new char[data];\nstrcpy(myString, HELLO_STRING);\nprintLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16672,"code":"size_t data;\nvector<size_t> dataVector;\ndata = 0;\ndata = rand();\ndataVector.insert(dataVector.end(), 1, data);\ndataVector.insert(dataVector.end(), 1, data);\ndataVector.insert(dataVector.end(), 1, data);\ngoodB2GSink(dataVector);\nvoid goodB2GSink(vector<size_t> dataVector)\nsize_t data = dataVector[2];\nchar * myString;\nif (data > strlen(HELLO_STRING) && data < 100)\nmyString = new char[data];\nstrcpy(myString, HELLO_STRING);\nprintLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16673,"code":"size_t data;\nvector<size_t> dataVector;\ndata = 0;\ndata = rand();\ndataVector.insert(dataVector.end(), 1, data);\ndataVector.insert(dataVector.end(), 1, data);\ndataVector.insert(dataVector.end(), 1, data);\nbadSink(dataVector);\nvoid badSink(vector<size_t> dataVector)\nsize_t data = dataVector[2];\nchar * myString;\nif (data > strlen(HELLO_STRING))\nmyString = new char[data];\nstrcpy(myString, HELLO_STRING);\nprintLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":16674,"code":"size_t data;\nlist<size_t> dataList;\ndata = 0;\ndata = 20;\ndataList.push_back(data);\ndataList.push_back(data);\ndataList.push_back(data);\ngoodG2BSink(dataList);\nvoid goodG2BSink(list<size_t> dataList)\nsize_t data = dataList.back();\nchar * myString;\nif (data > strlen(HELLO_STRING))\nmyString = new char[data];\nstrcpy(myString, HELLO_STRING);\nprintLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16675,"code":"size_t data;\nlist<size_t> dataList;\ndata = 0;\ndata = rand();\ndataList.push_back(data);\ndataList.push_back(data);\ndataList.push_back(data);\ngoodB2GSink(dataList);\nvoid goodB2GSink(list<size_t> dataList)\nsize_t data = dataList.back();\nchar * myString;\nif (data > strlen(HELLO_STRING) && data < 100)\nmyString = new char[data];\nstrcpy(myString, HELLO_STRING);\nprintLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16676,"code":"size_t data;\nlist<size_t> dataList;\ndata = 0;\ndata = rand();\ndataList.push_back(data);\ndataList.push_back(data);\ndataList.push_back(data);\nbadSink(dataList);\nvoid badSink(list<size_t> dataList)\nsize_t data = dataList.back();\nchar * myString;\nif (data > strlen(HELLO_STRING))\nmyString = new char[data];\nstrcpy(myString, HELLO_STRING);\nprintLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":16677,"code":"size_t data;\nmap<int, size_t> dataMap;\ndata = 0;\ndata = 20;\ndataMap[0] = data;\ndataMap[1] = data;\ndataMap[2] = data;\ngoodG2BSink(dataMap);\nvoid goodG2BSink(map<int, size_t> dataMap)\nsize_t data = dataMap[2];\nchar * myString;\nif (data > strlen(HELLO_STRING))\nmyString = new char[data];\nstrcpy(myString, HELLO_STRING);\nprintLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16678,"code":"size_t data;\nmap<int, size_t> dataMap;\ndata = 0;\ndata = rand();\ndataMap[0] = data;\ndataMap[1] = data;\ndataMap[2] = data;\ngoodB2GSink(dataMap);\nvoid goodB2GSink(map<int, size_t> dataMap)\nsize_t data = dataMap[2];\nchar * myString;\nif (data > strlen(HELLO_STRING) && data < 100)\nmyString = new char[data];\nstrcpy(myString, HELLO_STRING);\nprintLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16679,"code":"size_t data;\nmap<int, size_t> dataMap;\ndata = 0;\ndata = rand();\ndataMap[0] = data;\ndataMap[1] = data;\ndataMap[2] = data;\nbadSink(dataMap);\nvoid badSink(map<int, size_t> dataMap)\nsize_t data = dataMap[2];\nchar * myString;\nif (data > strlen(HELLO_STRING))\nmyString = new char[data];\nstrcpy(myString, HELLO_STRING);\nprintLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":16680,"code":"size_t data;\ndata = 0;\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(connectSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16681,"code":"size_t data;\ndata = 0;\ndata = 20;\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16682,"code":"size_t data;\ndata = 0;\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(connectSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":16683,"code":"size_t data;\ndata = 0;\nif(1)\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(connectSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nif(1)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16684,"code":"size_t data;\ndata = 0;\nif(1)\ndata = 20;\nif(1)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16685,"code":"size_t data;\ndata = 0;\nif(1)\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(connectSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nif(1)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":16686,"code":"size_t data;\ndata = 0;\nif(1)\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(connectSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nif(0){}\nelse\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16687,"code":"size_t data;\ndata = 0;\nif(0){}\nelse\ndata = 20;\nif(1)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16688,"code":"size_t data;\ndata = 0;\nif(5==5)\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(connectSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nif(5==5)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16689,"code":"size_t data;\ndata = 0;\nif(5==5)\ndata = 20;\nif(5==5)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16690,"code":"size_t data;\ndata = 0;\nif(5==5)\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(connectSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nif(5==5)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":16691,"code":"size_t data;\ndata = 0;\nif(5==5)\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(connectSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nif(5!=5){}\nelse\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16692,"code":"size_t data;\ndata = 0;\nif(5!=5){}\nelse\ndata = 20;\nif(5==5)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16693,"code":"size_t data;\ndata = 0;\nif(STATIC_CONST_TRUE)\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(connectSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nif(STATIC_CONST_FALSE){}\nelse\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16694,"code":"size_t data;\ndata = 0;\nif(STATIC_CONST_TRUE)\ndata = 20;\nif(STATIC_CONST_TRUE)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16695,"code":"size_t data;\ndata = 0;\nif(STATIC_CONST_TRUE)\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(connectSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nif(STATIC_CONST_TRUE)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16696,"code":"size_t data;\ndata = 0;\nif(STATIC_CONST_TRUE)\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(connectSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nif(STATIC_CONST_TRUE)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":16697,"code":"size_t data;\ndata = 0;\nif(STATIC_CONST_FALSE){}\nelse\ndata = 20;\nif(STATIC_CONST_TRUE)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16698,"code":"size_t data;\ndata = 0;\nif(staticTrue)\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(connectSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nif(staticFalse){}\nelse\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16699,"code":"size_t data;\ndata = 0;\nif(staticTrue)\ndata = 20;\nif(staticTrue)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16700,"code":"size_t data;\ndata = 0;\nif(staticTrue)\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(connectSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nif(staticTrue)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16701,"code":"size_t data;\ndata = 0;\nif(staticTrue)\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(connectSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nif(staticTrue)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":16702,"code":"size_t data;\ndata = 0;\nif(staticFalse){}\nelse\ndata = 20;\nif(staticTrue)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16703,"code":"size_t data;\ndata = 0;\nif(STATIC_CONST_FIVE!=5){}\nelse\ndata = 20;\nif(STATIC_CONST_FIVE==5)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16704,"code":"size_t data;\ndata = 0;\nif(STATIC_CONST_FIVE==5)\ndata = 20;\nif(STATIC_CONST_FIVE==5)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16705,"code":"size_t data;\ndata = 0;\nif(STATIC_CONST_FIVE==5)\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(connectSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nif(STATIC_CONST_FIVE==5)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":16706,"code":"size_t data;\ndata = 0;\nif(STATIC_CONST_FIVE==5)\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(connectSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nif(STATIC_CONST_FIVE!=5){}\nelse\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16707,"code":"size_t data;\ndata = 0;\nif(STATIC_CONST_FIVE==5)\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(connectSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nif(STATIC_CONST_FIVE==5)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16708,"code":"size_t data;\ndata = 0;\nif(staticFive!=5){}\nelse\ndata = 20;\nif(staticFive==5)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16709,"code":"size_t data;\ndata = 0;\nif(staticFive==5)\ndata = 20;\nif(staticFive==5)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16710,"code":"size_t data;\ndata = 0;\nif(staticFive==5)\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(connectSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nif(staticFive==5)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":16711,"code":"size_t data;\ndata = 0;\nif(staticFive==5)\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(connectSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nif(staticFive!=5){}\nelse\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16712,"code":"size_t data;\ndata = 0;\nif(staticFive==5)\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(connectSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nif(staticFive==5)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16713,"code":"size_t data;\ndata = 0;\nif(staticReturnsTrue())\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(connectSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nif(staticReturnsTrue())\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":16714,"code":"size_t data;\ndata = 0;\nif(staticReturnsTrue())\ndata = 20;\nif(staticReturnsTrue())\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16715,"code":"size_t data;\ndata = 0;\nif(staticReturnsFalse()){}\nelse\ndata = 20;\nif(staticReturnsTrue())\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16716,"code":"size_t data;\ndata = 0;\nif(staticReturnsTrue())\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(connectSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nif(staticReturnsTrue())\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16717,"code":"size_t data;\ndata = 0;\nif(staticReturnsTrue())\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(connectSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nif(staticReturnsFalse()){}\nelse\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16718,"code":"size_t data;\ndata = 0;\nif(GLOBAL_CONST_TRUE)\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(connectSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nif(GLOBAL_CONST_TRUE)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16719,"code":"size_t data;\ndata = 0;\nif(GLOBAL_CONST_FALSE){}\nelse\ndata = 20;\nif(GLOBAL_CONST_TRUE)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16720,"code":"size_t data;\ndata = 0;\nif(GLOBAL_CONST_TRUE)\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(connectSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nif(GLOBAL_CONST_TRUE)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":16721,"code":"size_t data;\ndata = 0;\nif(GLOBAL_CONST_TRUE)\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(connectSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nif(GLOBAL_CONST_FALSE){}\nelse\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16722,"code":"size_t data;\ndata = 0;\nif(GLOBAL_CONST_TRUE)\ndata = 20;\nif(GLOBAL_CONST_TRUE)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16723,"code":"size_t data;\ndata = 0;\nif(globalTrue)\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(connectSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nif(globalTrue)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16724,"code":"size_t data;\ndata = 0;\nif(globalTrue)\ndata = 20;\nif(globalTrue)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16725,"code":"size_t data;\ndata = 0;\nif(globalTrue)\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(connectSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nif(globalTrue)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":16726,"code":"size_t data;\ndata = 0;\nif(globalTrue)\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(connectSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nif(globalFalse){}\nelse\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16727,"code":"size_t data;\ndata = 0;\nif(globalFalse){}\nelse\ndata = 20;\nif(globalTrue)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16728,"code":"size_t data;\ndata = 0;\nif(globalReturnsFalse()){}\nelse\ndata = 20;\nif(globalReturnsTrue())\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16729,"code":"size_t data;\ndata = 0;\nif(globalReturnsTrue())\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(connectSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nif(globalReturnsTrue())\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":16730,"code":"size_t data;\ndata = 0;\nif(globalReturnsTrue())\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(connectSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nif(globalReturnsFalse()){}\nelse\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16731,"code":"size_t data;\ndata = 0;\nif(globalReturnsTrue())\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(connectSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nif(globalReturnsTrue())\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16732,"code":"size_t data;\ndata = 0;\nif(globalReturnsTrue())\ndata = 20;\nif(globalReturnsTrue())\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16733,"code":"size_t data;\ndata = 0;\nif(GLOBAL_CONST_FIVE==5)\ndata = 20;\nif(GLOBAL_CONST_FIVE==5)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16734,"code":"size_t data;\ndata = 0;\nif(GLOBAL_CONST_FIVE==5)\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(connectSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nif(GLOBAL_CONST_FIVE==5)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":16735,"code":"size_t data;\ndata = 0;\nif(GLOBAL_CONST_FIVE==5)\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(connectSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nif(GLOBAL_CONST_FIVE!=5){}\nelse\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16736,"code":"size_t data;\ndata = 0;\nif(GLOBAL_CONST_FIVE==5)\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(connectSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nif(GLOBAL_CONST_FIVE==5)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16737,"code":"size_t data;\ndata = 0;\nif(GLOBAL_CONST_FIVE!=5){}\nelse\ndata = 20;\nif(GLOBAL_CONST_FIVE==5)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16738,"code":"size_t data;\ndata = 0;\nif(globalFive==5)\ndata = 20;\nif(globalFive==5)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16739,"code":"size_t data;\ndata = 0;\nif(globalFive==5)\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(connectSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nif(globalFive==5)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":16740,"code":"size_t data;\ndata = 0;\nif(globalFive==5)\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(connectSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nif(globalFive!=5){}\nelse\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16741,"code":"size_t data;\ndata = 0;\nif(globalFive==5)\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(connectSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nif(globalFive==5)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16742,"code":"size_t data;\ndata = 0;\nif(globalFive!=5){}\nelse\ndata = 20;\nif(globalFive==5)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16743,"code":"size_t data;\ndata = 0;\nswitch(6)\ncase 6:\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(connectSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nbreak;\ndefault:\nbreak;\nswitch(7)\ncase 7:\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16744,"code":"size_t data;\ndata = 0;\nswitch(5)\ncase 6:\nbreak;\ndefault:\ndata = 20;\nbreak;\nswitch(7)\ncase 7:\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16745,"code":"size_t data;\ndata = 0;\nswitch(6)\ncase 6:\ndata = 20;\nbreak;\ndefault:\nbreak;\nswitch(7)\ncase 7:\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16746,"code":"size_t data;\ndata = 0;\nswitch(6)\ncase 6:\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(connectSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nbreak;\ndefault:\nbreak;\nswitch(7)\ncase 7:\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":16747,"code":"size_t data;\ndata = 0;\nswitch(6)\ncase 6:\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(connectSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nbreak;\ndefault:\nbreak;\nswitch(8)\ncase 7:\nbreak;\ndefault:\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16748,"code":"size_t data;\ndata = 0;\nwhile(1)\ndata = 20;\nbreak;\nwhile(1)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\nbreak;\n \n","target":0}
{"idx":16749,"code":"size_t data;\ndata = 0;\nwhile(1)\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(connectSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nbreak;\nwhile(1)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\nbreak;\n \n","target":1}
{"idx":16750,"code":"size_t data;\ndata = 0;\nwhile(1)\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(connectSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nbreak;\nwhile(1)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\nbreak;\n \n","target":0}
{"idx":16751,"code":"size_t data;\ndata = 0;\nfor(h = 0; h < 1; h++)\ndata = 20;\nfor(j = 0; j < 1; j++)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16752,"code":"size_t data;\ndata = 0;\nfor(i = 0; i < 1; i++)\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(connectSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nfor(j = 0; j < 1; j++)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":16753,"code":"size_t data;\ndata = 0;\nfor(i = 0; i < 1; i++)\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(connectSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nfor(k = 0; k < 1; k++)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16754,"code":"size_t data;\ndata = 0;\ngoto source;\nsource:\ndata = 20;\ngoto sink;\nsink:\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16755,"code":"size_t data;\ndata = 0;\ngoto source;\nsource:\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(connectSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\ngoto sink;\nsink:\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16756,"code":"size_t data;\ndata = 0;\ngoto source;\nsource:\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(connectSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\ngoto sink;\nsink:\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":16757,"code":"size_t data;\ndata = 0;\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(connectSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\ngoodB2G2Static = 1;\ngoodB2G2Sink(data);\nstatic void goodB2G2Sink(size_t data)\nif(goodB2G2Static)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16758,"code":"size_t data;\ndata = 0;\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(connectSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nbadStatic = 1;\nbadSink(data);\nstatic void badSink(size_t data)\nif(badStatic)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":16759,"code":"size_t data;\ndata = 0;\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(connectSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\ngoodB2G1Static = 0;\ngoodB2G1Sink(data);\nstatic void goodB2G1Sink(size_t data)\nif(goodB2G1Static){}\nelse\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16760,"code":"size_t data;\ndata = 0;\ndata = 20;\ngoodG2bStatic = 1;\ngoodG2BSink(data);\nstatic void goodG2BSink(size_t data)\nif(goodG2bStatic)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16761,"code":"size_t data;\ndata = 0;\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(connectSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nbadGlobal = 1;\nbadSink(data);\nvoid badSink(size_t data)\nif(badGlobal)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":16762,"code":"size_t data;\ndata = 0;\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(connectSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\ngoodB2G2Global = 1;\ngoodB2G2Sink(data);\nvoid goodB2G2Sink(size_t data)\nif(goodB2G2Global)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16763,"code":"size_t data;\ndata = 0;\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(connectSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\ngoodB2G1Global = 0;\ngoodB2G1Sink(data);\nvoid goodB2G1Sink(size_t data)\nif(goodB2G1Global){}\nelse\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16764,"code":"size_t data;\ndata = 0;\ndata = 20;\ngoodG2B1Global = 1;\ngoodG2B1Sink(data);\nvoid goodG2B1Sink(size_t data)\nif(goodG2B1Global)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16765,"code":"size_t data;\ndata = 0;\ndata = 20;\nsize_t dataCopy = data;\nsize_t data = dataCopy;\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16766,"code":"size_t data;\ndata = 0;\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(connectSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nsize_t dataCopy = data;\nsize_t data = dataCopy;\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16767,"code":"size_t data;\ndata = 0;\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(connectSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nsize_t dataCopy = data;\nsize_t data = dataCopy;\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":16768,"code":"size_t data;\nsize_t *dataPtr1 = &data;\nsize_t *dataPtr2 = &data;\ndata = 0;\nsize_t data = *dataPtr1;\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(connectSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\n*dataPtr1 = data;\nsize_t data = *dataPtr2;\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16769,"code":"size_t data;\nsize_t *dataPtr1 = &data;\nsize_t *dataPtr2 = &data;\ndata = 0;\nsize_t data = *dataPtr1;\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(connectSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\n*dataPtr1 = data;\nsize_t data = *dataPtr2;\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":16770,"code":"size_t data;\nsize_t *dataPtr1 = &data;\nsize_t *dataPtr2 = &data;\ndata = 0;\nsize_t data = *dataPtr1;\ndata = 20;\n*dataPtr1 = data;\nsize_t data = *dataPtr2;\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16771,"code":"size_t data;\nsize_t &dataRef = data;\ndata = 0;\ndata = 20;\nsize_t data = dataRef;\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16772,"code":"size_t data;\nsize_t &dataRef = data;\ndata = 0;\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(connectSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nsize_t data = dataRef;\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16773,"code":"size_t data;\nsize_t &dataRef = data;\ndata = 0;\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(connectSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nsize_t data = dataRef;\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":16774,"code":"size_t data;\nunionType myUnion;\ndata = 0;\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(connectSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nmyUnion.unionFirst = data;\nsize_t data = myUnion.unionSecond;\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16775,"code":"size_t data;\nunionType myUnion;\ndata = 0;\ndata = 20;\nmyUnion.unionFirst = data;\nsize_t data = myUnion.unionSecond;\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16776,"code":"size_t data;\nunionType myUnion;\ndata = 0;\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(connectSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nmyUnion.unionFirst = data;\nsize_t data = myUnion.unionSecond;\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":16777,"code":"size_t data;\ndata = 0;\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(connectSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nbadSink(data);\nstatic void badSink(size_t data)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":16778,"code":"size_t data;\ndata = 0;\ndata = 20;\ngoodG2BSink(data);\nstatic void goodG2BSink(size_t data)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16779,"code":"size_t data;\ndata = 0;\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(connectSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\ngoodB2GSink(data);\nstatic void goodB2GSink(size_t data)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16780,"code":"size_t data;\ndata = 0;\ndata = badSource(data);\nstatic size_t badSource(size_t data)\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(connectSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nreturn data;\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":16781,"code":"size_t data;\ndata = 0;\ndata = goodG2BSource(data);\nstatic size_t goodG2BSource(size_t data)\ndata = 20;\nreturn data;\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16782,"code":"size_t data;\ndata = 0;\ndata = goodB2GSource(data);\nstatic size_t goodB2GSource(size_t data)\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(connectSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nreturn data;\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16783,"code":"size_t data;\ndata = 0;\nbadSource(data);\nvoid badSource(size_t &data)\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(connectSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":16784,"code":"size_t data;\ndata = 0;\ngoodG2BSource(data);\nstatic void goodG2BSource(size_t &data)\ndata = 20;\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16785,"code":"size_t data;\ndata = 0;\ngoodB2GSource(data);\nstatic void goodB2GSource(size_t &data)\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(connectSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16786,"code":"size_t data;\nvoid (*funcPtr) (size_t) = goodB2GSink;\ndata = 0;\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(connectSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nfuncPtr(data);\nstatic void goodB2GSink(size_t data)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16787,"code":"size_t data;\nvoid (*funcPtr) (size_t) = badSink;\ndata = 0;\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(connectSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nfuncPtr(data);\nstatic void badSink(size_t data)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":16788,"code":"size_t data;\nvoid (*funcPtr) (size_t) = goodG2BSink;\ndata = 0;\ndata = 20;\nfuncPtr(data);\nstatic void goodG2BSink(size_t data)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16789,"code":"size_t data;\ndata = 0;\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(connectSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nbadData = data;\nbadSink();\nstatic void badSink()\nsize_t data = badData;\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":16790,"code":"size_t data;\ndata = 0;\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(connectSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\ngoodB2GData = data;\ngoodB2GSink();\nstatic void goodB2GSink()\nsize_t data = goodB2GData;\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16791,"code":"size_t data;\ndata = 0;\ndata = 20;\ngoodG2BData = data;\ngoodG2BSink();\nstatic void goodG2BSink()\nsize_t data = goodG2BData;\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16792,"code":"size_t data;\ndata = 0;\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(connectSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\ngoodB2GSink(data);\nvoid goodB2GSink(size_t data)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16793,"code":"size_t data;\ndata = 0;\ndata = 20;\ngoodG2BSink(data);\nvoid goodG2BSink(size_t data)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16794,"code":"size_t data;\ndata = 0;\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(connectSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nbadSink(data);\nvoid badSink(size_t data)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":16795,"code":"size_t data;\ndata = 0;\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(connectSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nbadSink_b(data);\nvoid badSink_b(size_t data)\nbadSink_c(data);\nvoid badSink_c(size_t data)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":16796,"code":"size_t data;\ndata = 0;\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(connectSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\ngoodB2GSink_b(data);\nvoid goodB2GSink_b(size_t data)\ngoodB2GSink_c(data);\nvoid goodB2GSink_c(size_t data)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16797,"code":"size_t data;\ndata = 0;\ndata = 20;\ngoodG2BSink_b(data);\nvoid goodG2BSink_b(size_t data)\ngoodG2BSink_c(data);\nvoid goodG2BSink_c(size_t data)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16798,"code":"size_t data;\ndata = 0;\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(connectSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\ngoodB2GSink_b(data);\nvoid goodB2GSink_b(size_t data)\ngoodB2GSink_c(data);\nvoid goodB2GSink_c(size_t data)\ngoodB2GSink_d(data);\nvoid goodB2GSink_d(size_t data)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16799,"code":"size_t data;\ndata = 0;\ndata = 20;\ngoodG2BSink_b(data);\nvoid goodG2BSink_b(size_t data)\ngoodG2BSink_c(data);\nvoid goodG2BSink_c(size_t data)\ngoodG2BSink_d(data);\nvoid goodG2BSink_d(size_t data)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16800,"code":"size_t data;\ndata = 0;\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(connectSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nbadSink_b(data);\nvoid badSink_b(size_t data)\nbadSink_c(data);\nvoid badSink_c(size_t data)\nbadSink_d(data);\nvoid badSink_d(size_t data)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":16801,"code":"size_t data;\ndata = 0;\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(connectSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\ngoodB2GSink_b(data);\nvoid goodB2GSink_b(size_t data)\ngoodB2GSink_c(data);\nvoid goodB2GSink_c(size_t data)\ngoodB2GSink_d(data);\nvoid goodB2GSink_d(size_t data)\ngoodB2GSink_e(data);\nvoid goodB2GSink_e(size_t data)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16802,"code":"size_t data;\ndata = 0;\ndata = 20;\ngoodG2BSink_b(data);\nvoid goodG2BSink_b(size_t data)\ngoodG2BSink_c(data);\nvoid goodG2BSink_c(size_t data)\ngoodG2BSink_d(data);\nvoid goodG2BSink_d(size_t data)\ngoodG2BSink_e(data);\nvoid goodG2BSink_e(size_t data)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16803,"code":"size_t data;\ndata = 0;\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(connectSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nbadSink_b(data);\nvoid badSink_b(size_t data)\nbadSink_c(data);\nvoid badSink_c(size_t data)\nbadSink_d(data);\nvoid badSink_d(size_t data)\nbadSink_e(data);\nvoid badSink_e(size_t data)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":16804,"code":"size_t data;\ndata = 0;\ndata = badSource(data);\nsize_t badSource(size_t data)\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(connectSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nreturn data;\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":16805,"code":"size_t data;\ndata = 0;\ndata = goodG2BSource(data);\nsize_t goodG2BSource(size_t data)\ndata = 20;\nreturn data;\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16806,"code":"size_t data;\ndata = 0;\ndata = goodB2GSource(data);\nsize_t goodB2GSource(size_t data)\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(connectSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nreturn data;\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16807,"code":"size_t data;\ndata = 0;\nbadSource(data);\nvoid badSource(size_t &data)\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(connectSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":16808,"code":"size_t data;\ndata = 0;\ngoodG2BSource(data);\nvoid goodG2BSource(size_t &data)\ndata = 20;\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16809,"code":"size_t data;\ndata = 0;\ngoodB2GSource(data);\nvoid goodB2GSource(size_t &data)\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(connectSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16810,"code":"size_t data;\ndata = 0;\ndata = 20;\ngoodG2BSink(&data);\nvoid goodG2BSink(size_t * dataPtr)\nsize_t data = *dataPtr;\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16811,"code":"size_t data;\ndata = 0;\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(connectSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\ngoodB2GSink(&data);\nvoid goodB2GSink(size_t * dataPtr)\nsize_t data = *dataPtr;\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16812,"code":"size_t data;\ndata = 0;\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(connectSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nbadSink(&data);\nvoid badSink(size_t * dataPtr)\nsize_t data = *dataPtr;\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":16813,"code":"size_t data;\ndata = 0;\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(connectSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\ngoodB2GSink(&data);\nvoid goodB2GSink(void * dataVoidPtr)\nsize_t * dataPtr = (size_t *)dataVoidPtr;\nsize_t data = (*dataPtr);\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16814,"code":"size_t data;\ndata = 0;\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(connectSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nbadSink(&data);\nvoid badSink(void * dataVoidPtr)\nsize_t * dataPtr = (size_t *)dataVoidPtr;\nsize_t data = (*dataPtr);\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":16815,"code":"size_t data;\ndata = 0;\ndata = 20;\ngoodG2BSink(&data);\nvoid goodG2BSink(void * dataVoidPtr)\nsize_t * dataPtr = (size_t *)dataVoidPtr;\nsize_t data = (*dataPtr);\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16816,"code":"size_t data;\nvoid (*funcPtr) (size_t) = goodB2GSink;\ndata = 0;\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(connectSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nfuncPtr(data);\nvoid goodB2GSink(size_t data)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16817,"code":"size_t data;\nvoid (*funcPtr) (size_t) = badSink;\ndata = 0;\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(connectSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nfuncPtr(data);\nvoid badSink(size_t data)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":16818,"code":"size_t data;\nvoid (*funcPtr) (size_t) = goodG2BSink;\ndata = 0;\ndata = 20;\nfuncPtr(data);\nvoid goodG2BSink(size_t data)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16819,"code":"size_t data;\nsize_t dataArray[5];\ndata = 0;\ndata = 20;\ndataArray[2] = data;\ngoodG2BSink(dataArray);\nvoid goodG2BSink(size_t dataArray[])\nsize_t data = dataArray[2];\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16820,"code":"size_t data;\nsize_t dataArray[5];\ndata = 0;\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(connectSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\ndataArray[2] = data;\ngoodB2GSink(dataArray);\nvoid goodB2GSink(size_t dataArray[])\nsize_t data = dataArray[2];\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16821,"code":"size_t data;\nsize_t dataArray[5];\ndata = 0;\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(connectSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\ndataArray[2] = data;\nbadSink(dataArray);\nvoid badSink(size_t dataArray[])\nsize_t data = dataArray[2];\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":16822,"code":"size_t data;\nstructType myStruct;\ndata = 0;\ndata = 20;\nmyStruct.structFirst = data;\ngoodG2BSink(myStruct);\nvoid goodG2BSink(structType myStruct)\nsize_t data = myStruct.structFirst;\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16823,"code":"size_t data;\nstructType myStruct;\ndata = 0;\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(connectSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nmyStruct.structFirst = data;\ngoodB2GSink(myStruct);\nvoid goodB2GSink(structType myStruct)\nsize_t data = myStruct.structFirst;\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16824,"code":"size_t data;\nstructType myStruct;\ndata = 0;\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(connectSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nmyStruct.structFirst = data;\nbadSink(myStruct);\nvoid badSink(structType myStruct)\nsize_t data = myStruct.structFirst;\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":16825,"code":"size_t data;\ndata = 0;\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(connectSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nbadData = data;\nbadSink();\nvoid badSink()\nsize_t data = badData;\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":16826,"code":"size_t data;\ndata = 0;\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(connectSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\ngoodB2GData = data;\ngoodB2GSink();\nvoid goodB2GSink()\nsize_t data = goodB2GData;\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16827,"code":"size_t data;\ndata = 0;\ndata = 20;\ngoodG2BData = data;\ngoodG2BSink();\nvoid goodG2BSink()\nsize_t data = goodG2BData;\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16828,"code":"size_t data;\nvector<size_t> dataVector;\ndata = 0;\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(connectSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\ndataVector.insert(dataVector.end(), 1, data);\ndataVector.insert(dataVector.end(), 1, data);\ndataVector.insert(dataVector.end(), 1, data);\nbadSink(dataVector);\nvoid badSink(vector<size_t> dataVector)\nsize_t data = dataVector[2];\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":16829,"code":"size_t data;\nvector<size_t> dataVector;\ndata = 0;\ndata = 20;\ndataVector.insert(dataVector.end(), 1, data);\ndataVector.insert(dataVector.end(), 1, data);\ndataVector.insert(dataVector.end(), 1, data);\ngoodG2BSink(dataVector);\nvoid goodG2BSink(vector<size_t> dataVector)\nsize_t data = dataVector[2];\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16830,"code":"size_t data;\nvector<size_t> dataVector;\ndata = 0;\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(connectSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\ndataVector.insert(dataVector.end(), 1, data);\ndataVector.insert(dataVector.end(), 1, data);\ndataVector.insert(dataVector.end(), 1, data);\ngoodB2GSink(dataVector);\nvoid goodB2GSink(vector<size_t> dataVector)\nsize_t data = dataVector[2];\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16831,"code":"size_t data;\nlist<size_t> dataList;\ndata = 0;\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(connectSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\ndataList.push_back(data);\ndataList.push_back(data);\ndataList.push_back(data);\nbadSink(dataList);\nvoid badSink(list<size_t> dataList)\nsize_t data = dataList.back();\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":16832,"code":"size_t data;\nlist<size_t> dataList;\ndata = 0;\ndata = 20;\ndataList.push_back(data);\ndataList.push_back(data);\ndataList.push_back(data);\ngoodG2BSink(dataList);\nvoid goodG2BSink(list<size_t> dataList)\nsize_t data = dataList.back();\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16833,"code":"size_t data;\nlist<size_t> dataList;\ndata = 0;\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(connectSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\ndataList.push_back(data);\ndataList.push_back(data);\ndataList.push_back(data);\ngoodB2GSink(dataList);\nvoid goodB2GSink(list<size_t> dataList)\nsize_t data = dataList.back();\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16834,"code":"size_t data;\nmap<int, size_t> dataMap;\ndata = 0;\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(connectSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\ndataMap[0] = data;\ndataMap[1] = data;\ndataMap[2] = data;\nbadSink(dataMap);\nvoid badSink(map<int, size_t> dataMap)\nsize_t data = dataMap[2];\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":16835,"code":"size_t data;\nmap<int, size_t> dataMap;\ndata = 0;\ndata = 20;\ndataMap[0] = data;\ndataMap[1] = data;\ndataMap[2] = data;\ngoodG2BSink(dataMap);\nvoid goodG2BSink(map<int, size_t> dataMap)\nsize_t data = dataMap[2];\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16836,"code":"size_t data;\nmap<int, size_t> dataMap;\ndata = 0;\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(connectSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\ndataMap[0] = data;\ndataMap[1] = data;\ndataMap[2] = data;\ngoodB2GSink(dataMap);\nvoid goodB2GSink(map<int, size_t> dataMap)\nsize_t data = dataMap[2];\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16837,"code":"size_t data;\ndata = 0;\ndata = 20;\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16838,"code":"size_t data;\ndata = 0;\nchar inputBuffer[CHAR_ARRAY_SIZE] = \"\";\nif (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)\ndata = strtoul(inputBuffer, NULL, 0);\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16839,"code":"size_t data;\ndata = 0;\nchar inputBuffer[CHAR_ARRAY_SIZE] = \"\";\nif (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)\ndata = strtoul(inputBuffer, NULL, 0);\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":16840,"code":"size_t data;\ndata = 0;\nif(1)\nchar inputBuffer[CHAR_ARRAY_SIZE] = \"\";\nif (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)\ndata = strtoul(inputBuffer, NULL, 0);\nif(1)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":16841,"code":"size_t data;\ndata = 0;\nif(1)\nchar inputBuffer[CHAR_ARRAY_SIZE] = \"\";\nif (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)\ndata = strtoul(inputBuffer, NULL, 0);\nif(0){}\nelse\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16842,"code":"size_t data;\ndata = 0;\nif(1)\nchar inputBuffer[CHAR_ARRAY_SIZE] = \"\";\nif (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)\ndata = strtoul(inputBuffer, NULL, 0);\nif(1)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16843,"code":"size_t data;\ndata = 0;\nif(0){}\nelse\ndata = 20;\nif(1)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16844,"code":"size_t data;\ndata = 0;\nif(1)\ndata = 20;\nif(1)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16845,"code":"size_t data;\ndata = 0;\nif(5==5)\nchar inputBuffer[CHAR_ARRAY_SIZE] = \"\";\nif (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)\ndata = strtoul(inputBuffer, NULL, 0);\nif(5==5)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":16846,"code":"size_t data;\ndata = 0;\nif(5==5)\nchar inputBuffer[CHAR_ARRAY_SIZE] = \"\";\nif (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)\ndata = strtoul(inputBuffer, NULL, 0);\nif(5!=5){}\nelse\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16847,"code":"size_t data;\ndata = 0;\nif(5==5)\ndata = 20;\nif(5==5)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16848,"code":"size_t data;\ndata = 0;\nif(5!=5){}\nelse\ndata = 20;\nif(5==5)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16849,"code":"size_t data;\ndata = 0;\nif(5==5)\nchar inputBuffer[CHAR_ARRAY_SIZE] = \"\";\nif (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)\ndata = strtoul(inputBuffer, NULL, 0);\nif(5==5)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16850,"code":"size_t data;\ndata = 0;\nif(STATIC_CONST_FALSE){}\nelse\ndata = 20;\nif(STATIC_CONST_TRUE)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16851,"code":"size_t data;\ndata = 0;\nif(STATIC_CONST_TRUE)\nchar inputBuffer[CHAR_ARRAY_SIZE] = \"\";\nif (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)\ndata = strtoul(inputBuffer, NULL, 0);\nif(STATIC_CONST_TRUE)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16852,"code":"size_t data;\ndata = 0;\nif(STATIC_CONST_TRUE)\nchar inputBuffer[CHAR_ARRAY_SIZE] = \"\";\nif (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)\ndata = strtoul(inputBuffer, NULL, 0);\nif(STATIC_CONST_TRUE)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":16853,"code":"size_t data;\ndata = 0;\nif(STATIC_CONST_TRUE)\nchar inputBuffer[CHAR_ARRAY_SIZE] = \"\";\nif (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)\ndata = strtoul(inputBuffer, NULL, 0);\nif(STATIC_CONST_FALSE){}\nelse\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16854,"code":"size_t data;\ndata = 0;\nif(STATIC_CONST_TRUE)\ndata = 20;\nif(STATIC_CONST_TRUE)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16855,"code":"size_t data;\ndata = 0;\nif(staticFalse){}\nelse\ndata = 20;\nif(staticTrue)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16856,"code":"size_t data;\ndata = 0;\nif(staticTrue)\nchar inputBuffer[CHAR_ARRAY_SIZE] = \"\";\nif (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)\ndata = strtoul(inputBuffer, NULL, 0);\nif(staticTrue)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16857,"code":"size_t data;\ndata = 0;\nif(staticTrue)\nchar inputBuffer[CHAR_ARRAY_SIZE] = \"\";\nif (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)\ndata = strtoul(inputBuffer, NULL, 0);\nif(staticTrue)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":16858,"code":"size_t data;\ndata = 0;\nif(staticTrue)\nchar inputBuffer[CHAR_ARRAY_SIZE] = \"\";\nif (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)\ndata = strtoul(inputBuffer, NULL, 0);\nif(staticFalse){}\nelse\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16859,"code":"size_t data;\ndata = 0;\nif(staticTrue)\ndata = 20;\nif(staticTrue)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16860,"code":"size_t data;\ndata = 0;\nif(STATIC_CONST_FIVE==5)\nchar inputBuffer[CHAR_ARRAY_SIZE] = \"\";\nif (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)\ndata = strtoul(inputBuffer, NULL, 0);\nif(STATIC_CONST_FIVE==5)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16861,"code":"size_t data;\ndata = 0;\nif(STATIC_CONST_FIVE==5)\ndata = 20;\nif(STATIC_CONST_FIVE==5)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16862,"code":"size_t data;\ndata = 0;\nif(STATIC_CONST_FIVE!=5){}\nelse\ndata = 20;\nif(STATIC_CONST_FIVE==5)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16863,"code":"size_t data;\ndata = 0;\nif(STATIC_CONST_FIVE==5)\nchar inputBuffer[CHAR_ARRAY_SIZE] = \"\";\nif (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)\ndata = strtoul(inputBuffer, NULL, 0);\nif(STATIC_CONST_FIVE==5)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":16864,"code":"size_t data;\ndata = 0;\nif(STATIC_CONST_FIVE==5)\nchar inputBuffer[CHAR_ARRAY_SIZE] = \"\";\nif (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)\ndata = strtoul(inputBuffer, NULL, 0);\nif(STATIC_CONST_FIVE!=5){}\nelse\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16865,"code":"size_t data;\ndata = 0;\nif(staticFive==5)\nchar inputBuffer[CHAR_ARRAY_SIZE] = \"\";\nif (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)\ndata = strtoul(inputBuffer, NULL, 0);\nif(staticFive==5)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16866,"code":"size_t data;\ndata = 0;\nif(staticFive==5)\ndata = 20;\nif(staticFive==5)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16867,"code":"size_t data;\ndata = 0;\nif(staticFive!=5){}\nelse\ndata = 20;\nif(staticFive==5)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16868,"code":"size_t data;\ndata = 0;\nif(staticFive==5)\nchar inputBuffer[CHAR_ARRAY_SIZE] = \"\";\nif (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)\ndata = strtoul(inputBuffer, NULL, 0);\nif(staticFive==5)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":16869,"code":"size_t data;\ndata = 0;\nif(staticFive==5)\nchar inputBuffer[CHAR_ARRAY_SIZE] = \"\";\nif (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)\ndata = strtoul(inputBuffer, NULL, 0);\nif(staticFive!=5){}\nelse\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16870,"code":"size_t data;\ndata = 0;\nif(staticReturnsTrue())\nchar inputBuffer[CHAR_ARRAY_SIZE] = \"\";\nif (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)\ndata = strtoul(inputBuffer, NULL, 0);\nif(staticReturnsTrue())\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16871,"code":"size_t data;\ndata = 0;\nif(staticReturnsTrue())\ndata = 20;\nif(staticReturnsTrue())\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16872,"code":"size_t data;\ndata = 0;\nif(staticReturnsFalse()){}\nelse\ndata = 20;\nif(staticReturnsTrue())\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16873,"code":"size_t data;\ndata = 0;\nif(staticReturnsTrue())\nchar inputBuffer[CHAR_ARRAY_SIZE] = \"\";\nif (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)\ndata = strtoul(inputBuffer, NULL, 0);\nif(staticReturnsTrue())\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":16874,"code":"size_t data;\ndata = 0;\nif(staticReturnsTrue())\nchar inputBuffer[CHAR_ARRAY_SIZE] = \"\";\nif (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)\ndata = strtoul(inputBuffer, NULL, 0);\nif(staticReturnsFalse()){}\nelse\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16875,"code":"size_t data;\ndata = 0;\nif(GLOBAL_CONST_TRUE)\nchar inputBuffer[CHAR_ARRAY_SIZE] = \"\";\nif (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)\ndata = strtoul(inputBuffer, NULL, 0);\nif(GLOBAL_CONST_TRUE)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":16876,"code":"size_t data;\ndata = 0;\nif(GLOBAL_CONST_TRUE)\nchar inputBuffer[CHAR_ARRAY_SIZE] = \"\";\nif (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)\ndata = strtoul(inputBuffer, NULL, 0);\nif(GLOBAL_CONST_FALSE){}\nelse\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16877,"code":"size_t data;\ndata = 0;\nif(GLOBAL_CONST_TRUE)\ndata = 20;\nif(GLOBAL_CONST_TRUE)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16878,"code":"size_t data;\ndata = 0;\nif(GLOBAL_CONST_FALSE){}\nelse\ndata = 20;\nif(GLOBAL_CONST_TRUE)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16879,"code":"size_t data;\ndata = 0;\nif(GLOBAL_CONST_TRUE)\nchar inputBuffer[CHAR_ARRAY_SIZE] = \"\";\nif (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)\ndata = strtoul(inputBuffer, NULL, 0);\nif(GLOBAL_CONST_TRUE)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16880,"code":"size_t data;\ndata = 0;\nif(globalTrue)\nchar inputBuffer[CHAR_ARRAY_SIZE] = \"\";\nif (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)\ndata = strtoul(inputBuffer, NULL, 0);\nif(globalTrue)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":16881,"code":"size_t data;\ndata = 0;\nif(globalTrue)\nchar inputBuffer[CHAR_ARRAY_SIZE] = \"\";\nif (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)\ndata = strtoul(inputBuffer, NULL, 0);\nif(globalFalse){}\nelse\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16882,"code":"size_t data;\ndata = 0;\nif(globalTrue)\ndata = 20;\nif(globalTrue)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16883,"code":"size_t data;\ndata = 0;\nif(globalFalse){}\nelse\ndata = 20;\nif(globalTrue)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16884,"code":"size_t data;\ndata = 0;\nif(globalTrue)\nchar inputBuffer[CHAR_ARRAY_SIZE] = \"\";\nif (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)\ndata = strtoul(inputBuffer, NULL, 0);\nif(globalTrue)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16885,"code":"size_t data;\ndata = 0;\nif(globalReturnsFalse()){}\nelse\ndata = 20;\nif(globalReturnsTrue())\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16886,"code":"size_t data;\ndata = 0;\nif(globalReturnsTrue())\nchar inputBuffer[CHAR_ARRAY_SIZE] = \"\";\nif (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)\ndata = strtoul(inputBuffer, NULL, 0);\nif(globalReturnsTrue())\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":16887,"code":"size_t data;\ndata = 0;\nif(globalReturnsTrue())\nchar inputBuffer[CHAR_ARRAY_SIZE] = \"\";\nif (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)\ndata = strtoul(inputBuffer, NULL, 0);\nif(globalReturnsFalse()){}\nelse\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16888,"code":"size_t data;\ndata = 0;\nif(globalReturnsTrue())\nchar inputBuffer[CHAR_ARRAY_SIZE] = \"\";\nif (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)\ndata = strtoul(inputBuffer, NULL, 0);\nif(globalReturnsTrue())\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16889,"code":"size_t data;\ndata = 0;\nif(globalReturnsTrue())\ndata = 20;\nif(globalReturnsTrue())\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16890,"code":"size_t data;\ndata = 0;\nif(GLOBAL_CONST_FIVE!=5){}\nelse\ndata = 20;\nif(GLOBAL_CONST_FIVE==5)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16891,"code":"size_t data;\ndata = 0;\nif(GLOBAL_CONST_FIVE==5)\nchar inputBuffer[CHAR_ARRAY_SIZE] = \"\";\nif (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)\ndata = strtoul(inputBuffer, NULL, 0);\nif(GLOBAL_CONST_FIVE==5)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":16892,"code":"size_t data;\ndata = 0;\nif(GLOBAL_CONST_FIVE==5)\nchar inputBuffer[CHAR_ARRAY_SIZE] = \"\";\nif (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)\ndata = strtoul(inputBuffer, NULL, 0);\nif(GLOBAL_CONST_FIVE!=5){}\nelse\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16893,"code":"size_t data;\ndata = 0;\nif(GLOBAL_CONST_FIVE==5)\nchar inputBuffer[CHAR_ARRAY_SIZE] = \"\";\nif (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)\ndata = strtoul(inputBuffer, NULL, 0);\nif(GLOBAL_CONST_FIVE==5)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16894,"code":"size_t data;\ndata = 0;\nif(GLOBAL_CONST_FIVE==5)\ndata = 20;\nif(GLOBAL_CONST_FIVE==5)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16895,"code":"size_t data;\ndata = 0;\nif(globalFive!=5){}\nelse\ndata = 20;\nif(globalFive==5)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16896,"code":"size_t data;\ndata = 0;\nif(globalFive==5)\nchar inputBuffer[CHAR_ARRAY_SIZE] = \"\";\nif (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)\ndata = strtoul(inputBuffer, NULL, 0);\nif(globalFive==5)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":16897,"code":"size_t data;\ndata = 0;\nif(globalFive==5)\nchar inputBuffer[CHAR_ARRAY_SIZE] = \"\";\nif (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)\ndata = strtoul(inputBuffer, NULL, 0);\nif(globalFive!=5){}\nelse\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16898,"code":"size_t data;\ndata = 0;\nif(globalFive==5)\nchar inputBuffer[CHAR_ARRAY_SIZE] = \"\";\nif (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)\ndata = strtoul(inputBuffer, NULL, 0);\nif(globalFive==5)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16899,"code":"size_t data;\ndata = 0;\nif(globalFive==5)\ndata = 20;\nif(globalFive==5)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16900,"code":"size_t data;\ndata = 0;\nswitch(6)\ncase 6:\ndata = 20;\nbreak;\ndefault:\nbreak;\nswitch(7)\ncase 7:\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16901,"code":"size_t data;\ndata = 0;\nswitch(6)\ncase 6:\nchar inputBuffer[CHAR_ARRAY_SIZE] = \"\";\nif (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)\ndata = strtoul(inputBuffer, NULL, 0);\nbreak;\ndefault:\nbreak;\nswitch(7)\ncase 7:\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":16902,"code":"size_t data;\ndata = 0;\nswitch(6)\ncase 6:\nchar inputBuffer[CHAR_ARRAY_SIZE] = \"\";\nif (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)\ndata = strtoul(inputBuffer, NULL, 0);\nbreak;\ndefault:\nbreak;\nswitch(8)\ncase 7:\nbreak;\ndefault:\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16903,"code":"size_t data;\ndata = 0;\nswitch(6)\ncase 6:\nchar inputBuffer[CHAR_ARRAY_SIZE] = \"\";\nif (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)\ndata = strtoul(inputBuffer, NULL, 0);\nbreak;\ndefault:\nbreak;\nswitch(7)\ncase 7:\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16904,"code":"size_t data;\ndata = 0;\nswitch(5)\ncase 6:\nbreak;\ndefault:\ndata = 20;\nbreak;\nswitch(7)\ncase 7:\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16905,"code":"size_t data;\ndata = 0;\nwhile(1)\nchar inputBuffer[CHAR_ARRAY_SIZE] = \"\";\nif (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)\ndata = strtoul(inputBuffer, NULL, 0);\nbreak;\nwhile(1)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\nbreak;\n \n","target":1}
{"idx":16906,"code":"size_t data;\ndata = 0;\nwhile(1)\ndata = 20;\nbreak;\nwhile(1)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\nbreak;\n \n","target":0}
{"idx":16907,"code":"size_t data;\ndata = 0;\nwhile(1)\nchar inputBuffer[CHAR_ARRAY_SIZE] = \"\";\nif (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)\ndata = strtoul(inputBuffer, NULL, 0);\nbreak;\nwhile(1)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\nbreak;\n \n","target":0}
{"idx":16908,"code":"size_t data;\ndata = 0;\nfor(i = 0; i < 1; i++)\nchar inputBuffer[CHAR_ARRAY_SIZE] = \"\";\nif (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)\ndata = strtoul(inputBuffer, NULL, 0);\nfor(j = 0; j < 1; j++)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":16909,"code":"size_t data;\ndata = 0;\nfor(h = 0; h < 1; h++)\ndata = 20;\nfor(j = 0; j < 1; j++)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16910,"code":"size_t data;\ndata = 0;\nfor(i = 0; i < 1; i++)\nchar inputBuffer[CHAR_ARRAY_SIZE] = \"\";\nif (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)\ndata = strtoul(inputBuffer, NULL, 0);\nfor(k = 0; k < 1; k++)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16911,"code":"size_t data;\ndata = 0;\ngoto source;\nsource:\nchar inputBuffer[CHAR_ARRAY_SIZE] = \"\";\nif (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)\ndata = strtoul(inputBuffer, NULL, 0);\ngoto sink;\nsink:\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":16912,"code":"size_t data;\ndata = 0;\ngoto source;\nsource:\nchar inputBuffer[CHAR_ARRAY_SIZE] = \"\";\nif (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)\ndata = strtoul(inputBuffer, NULL, 0);\ngoto sink;\nsink:\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16913,"code":"size_t data;\ndata = 0;\ngoto source;\nsource:\ndata = 20;\ngoto sink;\nsink:\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16914,"code":"size_t data;\ndata = 0;\nchar inputBuffer[CHAR_ARRAY_SIZE] = \"\";\nif (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)\ndata = strtoul(inputBuffer, NULL, 0);\nbadStatic = 1;\nbadSink(data);\nstatic void badSink(size_t data)\nif(badStatic)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":16915,"code":"size_t data;\ndata = 0;\nchar inputBuffer[CHAR_ARRAY_SIZE] = \"\";\nif (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)\ndata = strtoul(inputBuffer, NULL, 0);\ngoodB2G1Static = 0;\ngoodB2G1Sink(data);\nstatic void goodB2G1Sink(size_t data)\nif(goodB2G1Static){}\nelse\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16916,"code":"size_t data;\ndata = 0;\ndata = 20;\ngoodG2bStatic = 1;\ngoodG2BSink(data);\nstatic void goodG2BSink(size_t data)\nif(goodG2bStatic)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16917,"code":"size_t data;\ndata = 0;\nchar inputBuffer[CHAR_ARRAY_SIZE] = \"\";\nif (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)\ndata = strtoul(inputBuffer, NULL, 0);\ngoodB2G2Static = 1;\ngoodB2G2Sink(data);\nstatic void goodB2G2Sink(size_t data)\nif(goodB2G2Static)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16918,"code":"size_t data;\ndata = 0;\nchar inputBuffer[CHAR_ARRAY_SIZE] = \"\";\nif (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)\ndata = strtoul(inputBuffer, NULL, 0);\ngoodB2G2Global = 1;\ngoodB2G2Sink(data);\nvoid goodG2B1Sink(size_t data)\nif(goodG2B1Global)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16919,"code":"size_t data;\ndata = 0;\ndata = 20;\ngoodG2B1Global = 1;\ngoodG2B1Sink(data);\nvoid goodB2G2Sink(size_t data)\nif(goodB2G2Global)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16920,"code":"size_t data;\ndata = 0;\nchar inputBuffer[CHAR_ARRAY_SIZE] = \"\";\nif (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)\ndata = strtoul(inputBuffer, NULL, 0);\nbadGlobal = 1;\nbadSink(data);\nvoid badSink(size_t data)\nif(badGlobal)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":16921,"code":"size_t data;\ndata = 0;\nchar inputBuffer[CHAR_ARRAY_SIZE] = \"\";\nif (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)\ndata = strtoul(inputBuffer, NULL, 0);\ngoodB2G1Global = 0;\ngoodB2G1Sink(data);\nvoid goodB2G1Sink(size_t data)\nif(goodB2G1Global){}\nelse\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16922,"code":"size_t data;\ndata = 0;\nchar inputBuffer[CHAR_ARRAY_SIZE] = \"\";\nif (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)\ndata = strtoul(inputBuffer, NULL, 0);\nsize_t dataCopy = data;\nsize_t data = dataCopy;\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":16923,"code":"size_t data;\ndata = 0;\nchar inputBuffer[CHAR_ARRAY_SIZE] = \"\";\nif (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)\ndata = strtoul(inputBuffer, NULL, 0);\nsize_t dataCopy = data;\nsize_t data = dataCopy;\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16924,"code":"size_t data;\ndata = 0;\ndata = 20;\nsize_t dataCopy = data;\nsize_t data = dataCopy;\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16925,"code":"size_t data;\nsize_t *dataPtr1 = &data;\nsize_t *dataPtr2 = &data;\ndata = 0;\nsize_t data = *dataPtr1;\ndata = 20;\n*dataPtr1 = data;\nsize_t data = *dataPtr2;\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16926,"code":"size_t data;\nsize_t *dataPtr1 = &data;\nsize_t *dataPtr2 = &data;\ndata = 0;\nsize_t data = *dataPtr1;\nchar inputBuffer[CHAR_ARRAY_SIZE] = \"\";\nif (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)\ndata = strtoul(inputBuffer, NULL, 0);\n*dataPtr1 = data;\nsize_t data = *dataPtr2;\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16927,"code":"size_t data;\nsize_t *dataPtr1 = &data;\nsize_t *dataPtr2 = &data;\ndata = 0;\nsize_t data = *dataPtr1;\nchar inputBuffer[CHAR_ARRAY_SIZE] = \"\";\nif (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)\ndata = strtoul(inputBuffer, NULL, 0);\n*dataPtr1 = data;\nsize_t data = *dataPtr2;\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":16928,"code":"size_t data;\nsize_t &dataRef = data;\ndata = 0;\nchar inputBuffer[CHAR_ARRAY_SIZE] = \"\";\nif (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)\ndata = strtoul(inputBuffer, NULL, 0);\nsize_t data = dataRef;\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":16929,"code":"size_t data;\nsize_t &dataRef = data;\ndata = 0;\nchar inputBuffer[CHAR_ARRAY_SIZE] = \"\";\nif (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)\ndata = strtoul(inputBuffer, NULL, 0);\nsize_t data = dataRef;\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16930,"code":"size_t data;\nsize_t &dataRef = data;\ndata = 0;\ndata = 20;\nsize_t data = dataRef;\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16931,"code":"size_t data;\nunionType myUnion;\ndata = 0;\nchar inputBuffer[CHAR_ARRAY_SIZE] = \"\";\nif (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)\ndata = strtoul(inputBuffer, NULL, 0);\nmyUnion.unionFirst = data;\nsize_t data = myUnion.unionSecond;\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16932,"code":"size_t data;\nunionType myUnion;\ndata = 0;\nchar inputBuffer[CHAR_ARRAY_SIZE] = \"\";\nif (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)\ndata = strtoul(inputBuffer, NULL, 0);\nmyUnion.unionFirst = data;\nsize_t data = myUnion.unionSecond;\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":16933,"code":"size_t data;\nunionType myUnion;\ndata = 0;\ndata = 20;\nmyUnion.unionFirst = data;\nsize_t data = myUnion.unionSecond;\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16934,"code":"size_t data;\ndata = 0;\ndata = 20;\ngoodG2BSink(data);\nstatic void goodG2BSink(size_t data)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16935,"code":"size_t data;\ndata = 0;\nchar inputBuffer[CHAR_ARRAY_SIZE] = \"\";\nif (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)\ndata = strtoul(inputBuffer, NULL, 0);\ngoodB2GSink(data);\nstatic void goodB2GSink(size_t data)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16936,"code":"size_t data;\ndata = 0;\nchar inputBuffer[CHAR_ARRAY_SIZE] = \"\";\nif (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)\ndata = strtoul(inputBuffer, NULL, 0);\nbadSink(data);\nstatic void badSink(size_t data)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":16937,"code":"size_t data;\ndata = 0;\ndata = badSource(data);\nstatic size_t badSource(size_t data)\nchar inputBuffer[CHAR_ARRAY_SIZE] = \"\";\nif (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)\ndata = strtoul(inputBuffer, NULL, 0);\nreturn data;\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":16938,"code":"size_t data;\ndata = 0;\ndata = goodG2BSource(data);\nstatic size_t goodG2BSource(size_t data)\ndata = 20;\nreturn data;\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16939,"code":"size_t data;\ndata = 0;\ndata = goodB2GSource(data);\nstatic size_t goodB2GSource(size_t data)\nchar inputBuffer[CHAR_ARRAY_SIZE] = \"\";\nif (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)\ndata = strtoul(inputBuffer, NULL, 0);\nreturn data;\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16940,"code":"size_t data;\ndata = 0;\nbadSource(data);\nvoid badSource(size_t &data)\nchar inputBuffer[CHAR_ARRAY_SIZE] = \"\";\nif (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)\ndata = strtoul(inputBuffer, NULL, 0);\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":16941,"code":"size_t data;\ndata = 0;\ngoodB2GSource(data);\nstatic void goodB2GSource(size_t &data)\nchar inputBuffer[CHAR_ARRAY_SIZE] = \"\";\nif (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)\ndata = strtoul(inputBuffer, NULL, 0);\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16942,"code":"size_t data;\ndata = 0;\ngoodG2BSource(data);\nstatic void goodG2BSource(size_t &data)\ndata = 20;\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16943,"code":"size_t data;\nvoid (*funcPtr) (size_t) = goodB2GSink;\ndata = 0;\nchar inputBuffer[CHAR_ARRAY_SIZE] = \"\";\nif (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)\ndata = strtoul(inputBuffer, NULL, 0);\nfuncPtr(data);\nstatic void goodB2GSink(size_t data)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16944,"code":"size_t data;\nvoid (*funcPtr) (size_t) = goodG2BSink;\ndata = 0;\ndata = 20;\nfuncPtr(data);\nstatic void goodG2BSink(size_t data)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16945,"code":"size_t data;\nvoid (*funcPtr) (size_t) = badSink;\ndata = 0;\nchar inputBuffer[CHAR_ARRAY_SIZE] = \"\";\nif (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)\ndata = strtoul(inputBuffer, NULL, 0);\nfuncPtr(data);\nstatic void badSink(size_t data)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":16946,"code":"size_t data;\ndata = 0;\nchar inputBuffer[CHAR_ARRAY_SIZE] = \"\";\nif (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)\ndata = strtoul(inputBuffer, NULL, 0);\nbadData = data;\nbadSink();\nstatic void badSink()\nsize_t data = badData;\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":16947,"code":"size_t data;\ndata = 0;\nchar inputBuffer[CHAR_ARRAY_SIZE] = \"\";\nif (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)\ndata = strtoul(inputBuffer, NULL, 0);\ngoodB2GData = data;\ngoodB2GSink();\nstatic void goodB2GSink()\nsize_t data = goodB2GData;\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16948,"code":"size_t data;\ndata = 0;\ndata = 20;\ngoodG2BData = data;\ngoodG2BSink();\nstatic void goodG2BSink()\nsize_t data = goodG2BData;\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16949,"code":"size_t data;\ndata = 0;\nchar inputBuffer[CHAR_ARRAY_SIZE] = \"\";\nif (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)\ndata = strtoul(inputBuffer, NULL, 0);\ngoodB2GSink(data);\nvoid goodB2GSink(size_t data)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16950,"code":"size_t data;\ndata = 0;\ndata = 20;\ngoodG2BSink(data);\nvoid goodG2BSink(size_t data)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16951,"code":"size_t data;\ndata = 0;\nchar inputBuffer[CHAR_ARRAY_SIZE] = \"\";\nif (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)\ndata = strtoul(inputBuffer, NULL, 0);\nbadSink(data);\nvoid badSink(size_t data)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":16952,"code":"size_t data;\ndata = 0;\nchar inputBuffer[CHAR_ARRAY_SIZE] = \"\";\nif (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)\ndata = strtoul(inputBuffer, NULL, 0);\ngoodB2GSink_b(data);\nvoid goodB2GSink_b(size_t data)\ngoodB2GSink_c(data);\nvoid goodB2GSink_c(size_t data)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16953,"code":"size_t data;\ndata = 0;\ndata = 20;\ngoodG2BSink_b(data);\nvoid goodG2BSink_b(size_t data)\ngoodG2BSink_c(data);\nvoid goodG2BSink_c(size_t data)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16954,"code":"size_t data;\ndata = 0;\nchar inputBuffer[CHAR_ARRAY_SIZE] = \"\";\nif (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)\ndata = strtoul(inputBuffer, NULL, 0);\nbadSink_b(data);\nvoid badSink_b(size_t data)\nbadSink_c(data);\nvoid badSink_c(size_t data)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":16955,"code":"size_t data;\ndata = 0;\nchar inputBuffer[CHAR_ARRAY_SIZE] = \"\";\nif (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)\ndata = strtoul(inputBuffer, NULL, 0);\nbadSink_b(data);\nvoid badSink_b(size_t data)\nbadSink_c(data);\nvoid badSink_c(size_t data)\nbadSink_d(data);\nvoid badSink_d(size_t data)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":16956,"code":"size_t data;\ndata = 0;\nchar inputBuffer[CHAR_ARRAY_SIZE] = \"\";\nif (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)\ndata = strtoul(inputBuffer, NULL, 0);\ngoodB2GSink_b(data);\nvoid goodB2GSink_b(size_t data)\ngoodB2GSink_c(data);\nvoid goodB2GSink_c(size_t data)\ngoodB2GSink_d(data);\nvoid goodB2GSink_d(size_t data)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16957,"code":"size_t data;\ndata = 0;\ndata = 20;\ngoodG2BSink_b(data);\nvoid goodG2BSink_b(size_t data)\ngoodG2BSink_c(data);\nvoid goodG2BSink_c(size_t data)\ngoodG2BSink_d(data);\nvoid goodG2BSink_d(size_t data)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16958,"code":"size_t data;\ndata = 0;\nchar inputBuffer[CHAR_ARRAY_SIZE] = \"\";\nif (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)\ndata = strtoul(inputBuffer, NULL, 0);\ngoodB2GSink_b(data);\nvoid goodB2GSink_b(size_t data)\ngoodB2GSink_c(data);\nvoid goodB2GSink_c(size_t data)\ngoodB2GSink_d(data);\nvoid goodB2GSink_d(size_t data)\ngoodB2GSink_e(data);\nvoid goodB2GSink_e(size_t data)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16959,"code":"size_t data;\ndata = 0;\ndata = 20;\ngoodG2BSink_b(data);\nvoid goodG2BSink_b(size_t data)\ngoodG2BSink_c(data);\nvoid goodG2BSink_c(size_t data)\ngoodG2BSink_d(data);\nvoid goodG2BSink_d(size_t data)\ngoodG2BSink_e(data);\nvoid goodG2BSink_e(size_t data)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16960,"code":"size_t data;\ndata = 0;\nchar inputBuffer[CHAR_ARRAY_SIZE] = \"\";\nif (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)\ndata = strtoul(inputBuffer, NULL, 0);\nbadSink_b(data);\nvoid badSink_b(size_t data)\nbadSink_c(data);\nvoid badSink_c(size_t data)\nbadSink_d(data);\nvoid badSink_d(size_t data)\nbadSink_e(data);\nvoid badSink_e(size_t data)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":16961,"code":"size_t data;\ndata = 0;\ndata = goodB2GSource(data);\nsize_t goodB2GSource(size_t data)\nchar inputBuffer[CHAR_ARRAY_SIZE] = \"\";\nif (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)\ndata = strtoul(inputBuffer, NULL, 0);\nreturn data;\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16962,"code":"size_t data;\ndata = 0;\ndata = badSource(data);\nsize_t badSource(size_t data)\nchar inputBuffer[CHAR_ARRAY_SIZE] = \"\";\nif (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)\ndata = strtoul(inputBuffer, NULL, 0);\nreturn data;\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":16963,"code":"size_t data;\ndata = 0;\ndata = goodG2BSource(data);\nsize_t goodG2BSource(size_t data)\ndata = 20;\nreturn data;\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16964,"code":"size_t data;\ndata = 0;\ngoodB2GSource(data);\nvoid goodB2GSource(size_t &data)\nchar inputBuffer[CHAR_ARRAY_SIZE] = \"\";\nif (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)\ndata = strtoul(inputBuffer, NULL, 0);\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16965,"code":"size_t data;\ndata = 0;\nbadSource(data);\nvoid badSource(size_t &data)\nchar inputBuffer[CHAR_ARRAY_SIZE] = \"\";\nif (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)\ndata = strtoul(inputBuffer, NULL, 0);\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":16966,"code":"size_t data;\ndata = 0;\ngoodG2BSource(data);\nvoid goodG2BSource(size_t &data)\ndata = 20;\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16967,"code":"size_t data;\ndata = 0;\nchar inputBuffer[CHAR_ARRAY_SIZE] = \"\";\nif (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)\ndata = strtoul(inputBuffer, NULL, 0);\ngoodB2GSink(&data);\nvoid goodB2GSink(size_t * dataPtr)\nsize_t data = *dataPtr;\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16968,"code":"size_t data;\ndata = 0;\nchar inputBuffer[CHAR_ARRAY_SIZE] = \"\";\nif (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)\ndata = strtoul(inputBuffer, NULL, 0);\nbadSink(&data);\nvoid badSink(size_t * dataPtr)\nsize_t data = *dataPtr;\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":16969,"code":"size_t data;\ndata = 0;\ndata = 20;\ngoodG2BSink(&data);\nvoid goodG2BSink(size_t * dataPtr)\nsize_t data = *dataPtr;\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16970,"code":"size_t data;\ndata = 0;\nchar inputBuffer[CHAR_ARRAY_SIZE] = \"\";\nif (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)\ndata = strtoul(inputBuffer, NULL, 0);\nbadSink(&data);\nvoid badSink(void * dataVoidPtr)\nsize_t * dataPtr = (size_t *)dataVoidPtr;\nsize_t data = (*dataPtr);\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":16971,"code":"size_t data;\ndata = 0;\ndata = 20;\ngoodG2BSink(&data);\nvoid goodG2BSink(void * dataVoidPtr)\nsize_t * dataPtr = (size_t *)dataVoidPtr;\nsize_t data = (*dataPtr);\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16972,"code":"size_t data;\ndata = 0;\nchar inputBuffer[CHAR_ARRAY_SIZE] = \"\";\nif (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)\ndata = strtoul(inputBuffer, NULL, 0);\ngoodB2GSink(&data);\nvoid goodB2GSink(void * dataVoidPtr)\nsize_t * dataPtr = (size_t *)dataVoidPtr;\nsize_t data = (*dataPtr);\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16973,"code":"size_t data;\nvoid (*funcPtr) (size_t) = badSink;\ndata = 0;\nchar inputBuffer[CHAR_ARRAY_SIZE] = \"\";\nif (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)\ndata = strtoul(inputBuffer, NULL, 0);\nfuncPtr(data);\nvoid badSink(size_t data)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":16974,"code":"size_t data;\nvoid (*funcPtr) (size_t) = goodG2BSink;\ndata = 0;\ndata = 20;\nfuncPtr(data);\nvoid goodG2BSink(size_t data)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16975,"code":"size_t data;\nvoid (*funcPtr) (size_t) = goodB2GSink;\ndata = 0;\nchar inputBuffer[CHAR_ARRAY_SIZE] = \"\";\nif (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)\ndata = strtoul(inputBuffer, NULL, 0);\nfuncPtr(data);\nvoid goodB2GSink(size_t data)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16976,"code":"size_t data;\nsize_t dataArray[5];\ndata = 0;\ndata = 20;\ndataArray[2] = data;\ngoodG2BSink(dataArray);\nvoid goodG2BSink(size_t dataArray[])\nsize_t data = dataArray[2];\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16977,"code":"size_t data;\nsize_t dataArray[5];\ndata = 0;\nchar inputBuffer[CHAR_ARRAY_SIZE] = \"\";\nif (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)\ndata = strtoul(inputBuffer, NULL, 0);\ndataArray[2] = data;\nbadSink(dataArray);\nvoid badSink(size_t dataArray[])\nsize_t data = dataArray[2];\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":16978,"code":"size_t data;\nsize_t dataArray[5];\ndata = 0;\nchar inputBuffer[CHAR_ARRAY_SIZE] = \"\";\nif (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)\ndata = strtoul(inputBuffer, NULL, 0);\ndataArray[2] = data;\ngoodB2GSink(dataArray);\nvoid goodB2GSink(size_t dataArray[])\nsize_t data = dataArray[2];\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16979,"code":"size_t data;\nstructType myStruct;\ndata = 0;\nchar inputBuffer[CHAR_ARRAY_SIZE] = \"\";\nif (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)\ndata = strtoul(inputBuffer, NULL, 0);\nmyStruct.structFirst = data;\ngoodB2GSink(myStruct);\nvoid goodB2GSink(structType myStruct)\nsize_t data = myStruct.structFirst;\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16980,"code":"size_t data;\nstructType myStruct;\ndata = 0;\nchar inputBuffer[CHAR_ARRAY_SIZE] = \"\";\nif (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)\ndata = strtoul(inputBuffer, NULL, 0);\nmyStruct.structFirst = data;\nbadSink(myStruct);\nvoid badSink(structType myStruct)\nsize_t data = myStruct.structFirst;\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":16981,"code":"size_t data;\nstructType myStruct;\ndata = 0;\ndata = 20;\nmyStruct.structFirst = data;\ngoodG2BSink(myStruct);\nvoid goodG2BSink(structType myStruct)\nsize_t data = myStruct.structFirst;\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16982,"code":"size_t data;\ndata = 0;\nchar inputBuffer[CHAR_ARRAY_SIZE] = \"\";\nif (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)\ndata = strtoul(inputBuffer, NULL, 0);\nbadData = data;\nbadSink();\nvoid badSink()\nsize_t data = badData;\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":16983,"code":"size_t data;\ndata = 0;\ndata = 20;\ngoodG2BData = data;\ngoodG2BSink();\nvoid goodG2BSink()\nsize_t data = goodG2BData;\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16984,"code":"size_t data;\ndata = 0;\nchar inputBuffer[CHAR_ARRAY_SIZE] = \"\";\nif (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)\ndata = strtoul(inputBuffer, NULL, 0);\ngoodB2GData = data;\ngoodB2GSink();\nvoid goodB2GSink()\nsize_t data = goodB2GData;\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16985,"code":"size_t data;\nvector<size_t> dataVector;\ndata = 0;\nchar inputBuffer[CHAR_ARRAY_SIZE] = \"\";\nif (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)\ndata = strtoul(inputBuffer, NULL, 0);\ndataVector.insert(dataVector.end(), 1, data);\ndataVector.insert(dataVector.end(), 1, data);\ndataVector.insert(dataVector.end(), 1, data);\nbadSink(dataVector);\nvoid badSink(vector<size_t> dataVector)\nsize_t data = dataVector[2];\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":16986,"code":"size_t data;\nvector<size_t> dataVector;\ndata = 0;\ndata = 20;\ndataVector.insert(dataVector.end(), 1, data);\ndataVector.insert(dataVector.end(), 1, data);\ndataVector.insert(dataVector.end(), 1, data);\ngoodG2BSink(dataVector);\nvoid goodG2BSink(vector<size_t> dataVector)\nsize_t data = dataVector[2];\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16987,"code":"size_t data;\nvector<size_t> dataVector;\ndata = 0;\nchar inputBuffer[CHAR_ARRAY_SIZE] = \"\";\nif (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)\ndata = strtoul(inputBuffer, NULL, 0);\ndataVector.insert(dataVector.end(), 1, data);\ndataVector.insert(dataVector.end(), 1, data);\ndataVector.insert(dataVector.end(), 1, data);\ngoodB2GSink(dataVector);\nvoid goodB2GSink(vector<size_t> dataVector)\nsize_t data = dataVector[2];\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16988,"code":"size_t data;\nlist<size_t> dataList;\ndata = 0;\nchar inputBuffer[CHAR_ARRAY_SIZE] = \"\";\nif (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)\ndata = strtoul(inputBuffer, NULL, 0);\ndataList.push_back(data);\ndataList.push_back(data);\ndataList.push_back(data);\nbadSink(dataList);\nvoid badSink(list<size_t> dataList)\nsize_t data = dataList.back();\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":16989,"code":"size_t data;\nlist<size_t> dataList;\ndata = 0;\ndata = 20;\ndataList.push_back(data);\ndataList.push_back(data);\ndataList.push_back(data);\ngoodG2BSink(dataList);\nvoid goodG2BSink(list<size_t> dataList)\nsize_t data = dataList.back();\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16990,"code":"size_t data;\nlist<size_t> dataList;\ndata = 0;\nchar inputBuffer[CHAR_ARRAY_SIZE] = \"\";\nif (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)\ndata = strtoul(inputBuffer, NULL, 0);\ndataList.push_back(data);\ndataList.push_back(data);\ndataList.push_back(data);\ngoodB2GSink(dataList);\nvoid goodB2GSink(list<size_t> dataList)\nsize_t data = dataList.back();\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16991,"code":"size_t data;\nmap<int, size_t> dataMap;\ndata = 0;\nchar inputBuffer[CHAR_ARRAY_SIZE] = \"\";\nif (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)\ndata = strtoul(inputBuffer, NULL, 0);\ndataMap[0] = data;\ndataMap[1] = data;\ndataMap[2] = data;\nbadSink(dataMap);\nvoid badSink(map<int, size_t> dataMap)\nsize_t data = dataMap[2];\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":16992,"code":"size_t data;\nmap<int, size_t> dataMap;\ndata = 0;\ndata = 20;\ndataMap[0] = data;\ndataMap[1] = data;\ndataMap[2] = data;\ngoodG2BSink(dataMap);\nvoid goodG2BSink(map<int, size_t> dataMap)\nsize_t data = dataMap[2];\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16993,"code":"size_t data;\nmap<int, size_t> dataMap;\ndata = 0;\nchar inputBuffer[CHAR_ARRAY_SIZE] = \"\";\nif (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)\ndata = strtoul(inputBuffer, NULL, 0);\ndataMap[0] = data;\ndataMap[1] = data;\ndataMap[2] = data;\ngoodB2GSink(dataMap);\nvoid goodB2GSink(map<int, size_t> dataMap)\nsize_t data = dataMap[2];\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16994,"code":"size_t data;\ndata = 0;\nfscanf(stdin, \"%ud\", &data);\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":16995,"code":"size_t data;\ndata = 0;\ndata = 20;\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16996,"code":"size_t data;\ndata = 0;\nfscanf(stdin, \"%ud\", &data);\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16997,"code":"size_t data;\ndata = 0;\nif(1)\nfscanf(stdin, \"%ud\", &data);\nif(1)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16998,"code":"size_t data;\ndata = 0;\nif(1)\ndata = 20;\nif(1)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":16999,"code":"size_t data;\ndata = 0;\nif(1)\nfscanf(stdin, \"%ud\", &data);\nif(0){}\nelse\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17000,"code":"size_t data;\ndata = 0;\nif(0){}\nelse\ndata = 20;\nif(1)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17001,"code":"size_t data;\ndata = 0;\nif(1)\nfscanf(stdin, \"%ud\", &data);\nif(1)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":17002,"code":"size_t data;\ndata = 0;\nif(5==5)\nfscanf(stdin, \"%ud\", &data);\nif(5==5)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17003,"code":"size_t data;\ndata = 0;\nif(5==5)\ndata = 20;\nif(5==5)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17004,"code":"size_t data;\ndata = 0;\nif(5==5)\nfscanf(stdin, \"%ud\", &data);\nif(5!=5){}\nelse\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17005,"code":"size_t data;\ndata = 0;\nif(5!=5){}\nelse\ndata = 20;\nif(5==5)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17006,"code":"size_t data;\ndata = 0;\nif(5==5)\nfscanf(stdin, \"%ud\", &data);\nif(5==5)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":17007,"code":"size_t data;\ndata = 0;\nif(STATIC_CONST_TRUE)\nfscanf(stdin, \"%ud\", &data);\nif(STATIC_CONST_TRUE)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":17008,"code":"size_t data;\ndata = 0;\nif(STATIC_CONST_TRUE)\nfscanf(stdin, \"%ud\", &data);\nif(STATIC_CONST_TRUE)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17009,"code":"size_t data;\ndata = 0;\nif(STATIC_CONST_TRUE)\ndata = 20;\nif(STATIC_CONST_TRUE)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17010,"code":"size_t data;\ndata = 0;\nif(STATIC_CONST_TRUE)\nfscanf(stdin, \"%ud\", &data);\nif(STATIC_CONST_FALSE){}\nelse\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17011,"code":"size_t data;\ndata = 0;\nif(STATIC_CONST_FALSE){}\nelse\ndata = 20;\nif(STATIC_CONST_TRUE)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17012,"code":"size_t data;\ndata = 0;\nif(staticTrue)\nfscanf(stdin, \"%ud\", &data);\nif(staticTrue)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":17013,"code":"size_t data;\ndata = 0;\nif(staticTrue)\nfscanf(stdin, \"%ud\", &data);\nif(staticTrue)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17014,"code":"size_t data;\ndata = 0;\nif(staticTrue)\ndata = 20;\nif(staticTrue)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17015,"code":"size_t data;\ndata = 0;\nif(staticTrue)\nfscanf(stdin, \"%ud\", &data);\nif(staticFalse){}\nelse\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17016,"code":"size_t data;\ndata = 0;\nif(staticFalse){}\nelse\ndata = 20;\nif(staticTrue)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17017,"code":"size_t data;\ndata = 0;\nif(STATIC_CONST_FIVE==5)\nfscanf(stdin, \"%ud\", &data);\nif(STATIC_CONST_FIVE==5)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":17018,"code":"size_t data;\ndata = 0;\nif(STATIC_CONST_FIVE==5)\ndata = 20;\nif(STATIC_CONST_FIVE==5)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17019,"code":"size_t data;\ndata = 0;\nif(STATIC_CONST_FIVE!=5){}\nelse\ndata = 20;\nif(STATIC_CONST_FIVE==5)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17020,"code":"size_t data;\ndata = 0;\nif(STATIC_CONST_FIVE==5)\nfscanf(stdin, \"%ud\", &data);\nif(STATIC_CONST_FIVE==5)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17021,"code":"size_t data;\ndata = 0;\nif(STATIC_CONST_FIVE==5)\nfscanf(stdin, \"%ud\", &data);\nif(STATIC_CONST_FIVE!=5){}\nelse\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17022,"code":"size_t data;\ndata = 0;\nif(staticFive==5)\nfscanf(stdin, \"%ud\", &data);\nif(staticFive==5)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":17023,"code":"size_t data;\ndata = 0;\nif(staticFive==5)\ndata = 20;\nif(staticFive==5)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17024,"code":"size_t data;\ndata = 0;\nif(staticFive!=5){}\nelse\ndata = 20;\nif(staticFive==5)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17025,"code":"size_t data;\ndata = 0;\nif(staticFive==5)\nfscanf(stdin, \"%ud\", &data);\nif(staticFive==5)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17026,"code":"size_t data;\ndata = 0;\nif(staticFive==5)\nfscanf(stdin, \"%ud\", &data);\nif(staticFive!=5){}\nelse\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17027,"code":"size_t data;\ndata = 0;\nif(staticReturnsTrue())\nfscanf(stdin, \"%ud\", &data);\nif(staticReturnsTrue())\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":17028,"code":"size_t data;\ndata = 0;\nif(staticReturnsTrue())\ndata = 20;\nif(staticReturnsTrue())\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17029,"code":"size_t data;\ndata = 0;\nif(staticReturnsFalse()){}\nelse\ndata = 20;\nif(staticReturnsTrue())\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17030,"code":"size_t data;\ndata = 0;\nif(staticReturnsTrue())\nfscanf(stdin, \"%ud\", &data);\nif(staticReturnsTrue())\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17031,"code":"size_t data;\ndata = 0;\nif(staticReturnsTrue())\nfscanf(stdin, \"%ud\", &data);\nif(staticReturnsFalse()){}\nelse\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17032,"code":"size_t data;\ndata = 0;\nif(GLOBAL_CONST_TRUE)\nfscanf(stdin, \"%ud\", &data);\nif(GLOBAL_CONST_TRUE)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17033,"code":"size_t data;\ndata = 0;\nif(GLOBAL_CONST_TRUE)\ndata = 20;\nif(GLOBAL_CONST_TRUE)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17034,"code":"size_t data;\ndata = 0;\nif(GLOBAL_CONST_TRUE)\nfscanf(stdin, \"%ud\", &data);\nif(GLOBAL_CONST_FALSE){}\nelse\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17035,"code":"size_t data;\ndata = 0;\nif(GLOBAL_CONST_FALSE){}\nelse\ndata = 20;\nif(GLOBAL_CONST_TRUE)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17036,"code":"size_t data;\ndata = 0;\nif(GLOBAL_CONST_TRUE)\nfscanf(stdin, \"%ud\", &data);\nif(GLOBAL_CONST_TRUE)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":17037,"code":"size_t data;\ndata = 0;\nif(globalTrue)\nfscanf(stdin, \"%ud\", &data);\nif(globalTrue)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17038,"code":"size_t data;\ndata = 0;\nif(globalTrue)\ndata = 20;\nif(globalTrue)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17039,"code":"size_t data;\ndata = 0;\nif(globalTrue)\nfscanf(stdin, \"%ud\", &data);\nif(globalFalse){}\nelse\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17040,"code":"size_t data;\ndata = 0;\nif(globalFalse){}\nelse\ndata = 20;\nif(globalTrue)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17041,"code":"size_t data;\ndata = 0;\nif(globalTrue)\nfscanf(stdin, \"%ud\", &data);\nif(globalTrue)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":17042,"code":"size_t data;\ndata = 0;\nif(globalReturnsTrue())\ndata = 20;\nif(globalReturnsTrue())\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17043,"code":"size_t data;\ndata = 0;\nif(globalReturnsFalse()){}\nelse\ndata = 20;\nif(globalReturnsTrue())\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17044,"code":"size_t data;\ndata = 0;\nif(globalReturnsTrue())\nfscanf(stdin, \"%ud\", &data);\nif(globalReturnsTrue())\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17045,"code":"size_t data;\ndata = 0;\nif(globalReturnsTrue())\nfscanf(stdin, \"%ud\", &data);\nif(globalReturnsFalse()){}\nelse\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17046,"code":"size_t data;\ndata = 0;\nif(globalReturnsTrue())\nfscanf(stdin, \"%ud\", &data);\nif(globalReturnsTrue())\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":17047,"code":"size_t data;\ndata = 0;\nif(GLOBAL_CONST_FIVE==5)\ndata = 20;\nif(GLOBAL_CONST_FIVE==5)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17048,"code":"size_t data;\ndata = 0;\nif(GLOBAL_CONST_FIVE!=5){}\nelse\ndata = 20;\nif(GLOBAL_CONST_FIVE==5)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17049,"code":"size_t data;\ndata = 0;\nif(GLOBAL_CONST_FIVE==5)\nfscanf(stdin, \"%ud\", &data);\nif(GLOBAL_CONST_FIVE==5)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17050,"code":"size_t data;\ndata = 0;\nif(GLOBAL_CONST_FIVE==5)\nfscanf(stdin, \"%ud\", &data);\nif(GLOBAL_CONST_FIVE!=5){}\nelse\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17051,"code":"size_t data;\ndata = 0;\nif(GLOBAL_CONST_FIVE==5)\nfscanf(stdin, \"%ud\", &data);\nif(GLOBAL_CONST_FIVE==5)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":17052,"code":"size_t data;\ndata = 0;\nif(globalFive==5)\ndata = 20;\nif(globalFive==5)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17053,"code":"size_t data;\ndata = 0;\nif(globalFive!=5){}\nelse\ndata = 20;\nif(globalFive==5)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17054,"code":"size_t data;\ndata = 0;\nif(globalFive==5)\nfscanf(stdin, \"%ud\", &data);\nif(globalFive==5)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17055,"code":"size_t data;\ndata = 0;\nif(globalFive==5)\nfscanf(stdin, \"%ud\", &data);\nif(globalFive!=5){}\nelse\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17056,"code":"size_t data;\ndata = 0;\nif(globalFive==5)\nfscanf(stdin, \"%ud\", &data);\nif(globalFive==5)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":17057,"code":"size_t data;\ndata = 0;\nswitch(6)\ncase 6:\nfscanf(stdin, \"%ud\", &data);\nbreak;\ndefault:\nbreak;\nswitch(7)\ncase 7:\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":17058,"code":"size_t data;\ndata = 0;\nswitch(6)\ncase 6:\nfscanf(stdin, \"%ud\", &data);\nbreak;\ndefault:\nbreak;\nswitch(8)\ncase 7:\nbreak;\ndefault:\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17059,"code":"size_t data;\ndata = 0;\nswitch(5)\ncase 6:\nbreak;\ndefault:\ndata = 20;\nbreak;\nswitch(7)\ncase 7:\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17060,"code":"size_t data;\ndata = 0;\nswitch(6)\ncase 6:\ndata = 20;\nbreak;\ndefault:\nbreak;\nswitch(7)\ncase 7:\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17061,"code":"size_t data;\ndata = 0;\nswitch(6)\ncase 6:\nfscanf(stdin, \"%ud\", &data);\nbreak;\ndefault:\nbreak;\nswitch(7)\ncase 7:\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17062,"code":"size_t data;\ndata = 0;\nwhile(1)\ndata = 20;\nbreak;\nwhile(1)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\nbreak;\n \n","target":0}
{"idx":17063,"code":"size_t data;\ndata = 0;\nwhile(1)\nfscanf(stdin, \"%ud\", &data);\nbreak;\nwhile(1)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\nbreak;\n \n","target":0}
{"idx":17064,"code":"size_t data;\ndata = 0;\nwhile(1)\nfscanf(stdin, \"%ud\", &data);\nbreak;\nwhile(1)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\nbreak;\n \n","target":1}
{"idx":17065,"code":"size_t data;\ndata = 0;\nfor(h = 0; h < 1; h++)\ndata = 20;\nfor(j = 0; j < 1; j++)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17066,"code":"size_t data;\ndata = 0;\nfor(i = 0; i < 1; i++)\nfscanf(stdin, \"%ud\", &data);\nfor(k = 0; k < 1; k++)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17067,"code":"size_t data;\ndata = 0;\nfor(i = 0; i < 1; i++)\nfscanf(stdin, \"%ud\", &data);\nfor(j = 0; j < 1; j++)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":17068,"code":"size_t data;\ndata = 0;\ngoto source;\nsource:\nfscanf(stdin, \"%ud\", &data);\ngoto sink;\nsink:\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":17069,"code":"size_t data;\ndata = 0;\ngoto source;\nsource:\nfscanf(stdin, \"%ud\", &data);\ngoto sink;\nsink:\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17070,"code":"size_t data;\ndata = 0;\ngoto source;\nsource:\ndata = 20;\ngoto sink;\nsink:\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17071,"code":"size_t data;\ndata = 0;\nfscanf(stdin, \"%ud\", &data);\ngoodB2G1Static = 0;\ngoodB2G1Sink(data);\nstatic void goodB2G1Sink(size_t data)\nif(goodB2G1Static){}\nelse\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17072,"code":"size_t data;\ndata = 0;\nfscanf(stdin, \"%ud\", &data);\nbadStatic = 1;\nbadSink(data);\nstatic void badSink(size_t data)\nif(badStatic)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":17073,"code":"size_t data;\ndata = 0;\nfscanf(stdin, \"%ud\", &data);\ngoodB2G2Static = 1;\ngoodB2G2Sink(data);\nstatic void goodB2G2Sink(size_t data)\nif(goodB2G2Static)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17074,"code":"size_t data;\ndata = 0;\ndata = 20;\ngoodG2bStatic = 1;\ngoodG2BSink(data);\nstatic void goodG2BSink(size_t data)\nif(goodG2bStatic)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17075,"code":"size_t data;\ndata = 0;\nfscanf(stdin, \"%ud\", &data);\nbadGlobal = 1;\nbadSink(data);\nvoid badSink(size_t data)\nif(badGlobal)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":17076,"code":"size_t data;\ndata = 0;\ndata = 20;\ngoodG2B1Global = 1;\ngoodG2B1Sink(data);\nvoid goodG2B1Sink(size_t data)\nif(goodG2B1Global)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17077,"code":"size_t data;\ndata = 0;\nfscanf(stdin, \"%ud\", &data);\ngoodB2G2Global = 1;\ngoodB2G2Sink(data);\nvoid goodB2G2Sink(size_t data)\nif(goodB2G2Global)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17078,"code":"size_t data;\ndata = 0;\nfscanf(stdin, \"%ud\", &data);\ngoodB2G1Global = 0;\ngoodB2G1Sink(data);\nvoid goodB2G1Sink(size_t data)\nif(goodB2G1Global){}\nelse\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17079,"code":"size_t data;\ndata = 0;\nfscanf(stdin, \"%ud\", &data);\nsize_t dataCopy = data;\nsize_t data = dataCopy;\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":17080,"code":"size_t data;\ndata = 0;\ndata = 20;\nsize_t dataCopy = data;\nsize_t data = dataCopy;\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17081,"code":"size_t data;\ndata = 0;\nfscanf(stdin, \"%ud\", &data);\nsize_t dataCopy = data;\nsize_t data = dataCopy;\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17082,"code":"size_t data;\nsize_t *dataPtr1 = &data;\nsize_t *dataPtr2 = &data;\ndata = 0;\nsize_t data = *dataPtr1;\nfscanf(stdin, \"%ud\", &data);\n*dataPtr1 = data;\nsize_t data = *dataPtr2;\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":17083,"code":"size_t data;\nsize_t *dataPtr1 = &data;\nsize_t *dataPtr2 = &data;\ndata = 0;\nsize_t data = *dataPtr1;\ndata = 20;\n*dataPtr1 = data;\nsize_t data = *dataPtr2;\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17084,"code":"size_t data;\nsize_t *dataPtr1 = &data;\nsize_t *dataPtr2 = &data;\ndata = 0;\nsize_t data = *dataPtr1;\nfscanf(stdin, \"%ud\", &data);\n*dataPtr1 = data;\nsize_t data = *dataPtr2;\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17085,"code":"size_t data;\nsize_t &dataRef = data;\ndata = 0;\nfscanf(stdin, \"%ud\", &data);\nsize_t data = dataRef;\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":17086,"code":"size_t data;\nsize_t &dataRef = data;\ndata = 0;\ndata = 20;\nsize_t data = dataRef;\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17087,"code":"size_t data;\nsize_t &dataRef = data;\ndata = 0;\nfscanf(stdin, \"%ud\", &data);\nsize_t data = dataRef;\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17088,"code":"size_t data;\nunionType myUnion;\ndata = 0;\nfscanf(stdin, \"%ud\", &data);\nmyUnion.unionFirst = data;\nsize_t data = myUnion.unionSecond;\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":17089,"code":"size_t data;\nunionType myUnion;\ndata = 0;\nfscanf(stdin, \"%ud\", &data);\nmyUnion.unionFirst = data;\nsize_t data = myUnion.unionSecond;\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17090,"code":"size_t data;\nunionType myUnion;\ndata = 0;\ndata = 20;\nmyUnion.unionFirst = data;\nsize_t data = myUnion.unionSecond;\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17091,"code":"size_t data;\ndata = 0;\nfscanf(stdin, \"%ud\", &data);\nbadSink(data);\nstatic void badSink(size_t data)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":17092,"code":"size_t data;\ndata = 0;\ndata = 20;\ngoodG2BSink(data);\nstatic void goodG2BSink(size_t data)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17093,"code":"size_t data;\ndata = 0;\nfscanf(stdin, \"%ud\", &data);\ngoodB2GSink(data);\nstatic void goodB2GSink(size_t data)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17094,"code":"size_t data;\ndata = 0;\ndata = goodB2GSource(data);\nstatic size_t goodB2GSource(size_t data)\nfscanf(stdin, \"%ud\", &data);\nreturn data;\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17095,"code":"size_t data;\ndata = 0;\ndata = badSource(data);\nstatic size_t badSource(size_t data)\nfscanf(stdin, \"%ud\", &data);\nreturn data;\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":17096,"code":"size_t data;\ndata = 0;\ndata = goodG2BSource(data);\nstatic size_t goodG2BSource(size_t data)\ndata = 20;\nreturn data;\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17097,"code":"size_t data;\ndata = 0;\ngoodG2BSource(data);\nstatic void goodG2BSource(size_t &data)\ndata = 20;\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17098,"code":"size_t data;\ndata = 0;\ngoodB2GSource(data);\nstatic void goodB2GSource(size_t &data)\nfscanf(stdin, \"%ud\", &data);\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17099,"code":"size_t data;\ndata = 0;\nbadSource(data);\nvoid badSource(size_t &data)\nfscanf(stdin, \"%ud\", &data);\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":17100,"code":"size_t data;\nvoid (*funcPtr) (size_t) = goodG2BSink;\ndata = 0;\ndata = 20;\nfuncPtr(data);\nstatic void goodG2BSink(size_t data)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17101,"code":"size_t data;\nvoid (*funcPtr) (size_t) = goodB2GSink;\ndata = 0;\nfscanf(stdin, \"%ud\", &data);\nfuncPtr(data);\nstatic void goodB2GSink(size_t data)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17102,"code":"size_t data;\nvoid (*funcPtr) (size_t) = badSink;\ndata = 0;\nfscanf(stdin, \"%ud\", &data);\nfuncPtr(data);\nstatic void badSink(size_t data)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":17103,"code":"size_t data;\ndata = 0;\nfscanf(stdin, \"%ud\", &data);\ngoodB2GData = data;\ngoodB2GSink();\nstatic void goodB2GSink()\nsize_t data = goodB2GData;\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17104,"code":"size_t data;\ndata = 0;\nfscanf(stdin, \"%ud\", &data);\nbadData = data;\nbadSink();\nstatic void badSink()\nsize_t data = badData;\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":17105,"code":"size_t data;\ndata = 0;\ndata = 20;\ngoodG2BData = data;\ngoodG2BSink();\nstatic void goodG2BSink()\nsize_t data = goodG2BData;\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17106,"code":"size_t data;\ndata = 0;\nfscanf(stdin, \"%ud\", &data);\ngoodB2GSink(data);\nvoid goodB2GSink(size_t data)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17107,"code":"size_t data;\ndata = 0;\ndata = 20;\ngoodG2BSink(data);\nvoid goodG2BSink(size_t data)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17108,"code":"size_t data;\ndata = 0;\nfscanf(stdin, \"%ud\", &data);\nbadSink(data);\nvoid badSink(size_t data)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":17109,"code":"size_t data;\ndata = 0;\nfscanf(stdin, \"%ud\", &data);\ngoodB2GSink_b(data);\nvoid goodB2GSink_b(size_t data)\ngoodB2GSink_c(data);\nvoid goodB2GSink_c(size_t data)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17110,"code":"size_t data;\ndata = 0;\ndata = 20;\ngoodG2BSink_b(data);\nvoid goodG2BSink_b(size_t data)\ngoodG2BSink_c(data);\nvoid goodG2BSink_c(size_t data)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17111,"code":"size_t data;\ndata = 0;\nfscanf(stdin, \"%ud\", &data);\nbadSink_b(data);\nvoid badSink_b(size_t data)\nbadSink_c(data);\nvoid badSink_c(size_t data)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":17112,"code":"size_t data;\ndata = 0;\nfscanf(stdin, \"%ud\", &data);\ngoodB2GSink_b(data);\nvoid goodB2GSink_b(size_t data)\ngoodB2GSink_c(data);\nvoid goodB2GSink_c(size_t data)\ngoodB2GSink_d(data);\nvoid goodB2GSink_d(size_t data)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17113,"code":"size_t data;\ndata = 0;\ndata = 20;\ngoodG2BSink_b(data);\nvoid goodG2BSink_b(size_t data)\ngoodG2BSink_c(data);\nvoid goodG2BSink_c(size_t data)\ngoodG2BSink_d(data);\nvoid goodG2BSink_d(size_t data)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17114,"code":"size_t data;\ndata = 0;\nfscanf(stdin, \"%ud\", &data);\nbadSink_b(data);\nvoid badSink_b(size_t data)\nbadSink_c(data);\nvoid badSink_c(size_t data)\nbadSink_d(data);\nvoid badSink_d(size_t data)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":17115,"code":"size_t data;\ndata = 0;\nfscanf(stdin, \"%ud\", &data);\ngoodB2GSink_b(data);\nvoid goodB2GSink_b(size_t data)\ngoodB2GSink_c(data);\nvoid goodB2GSink_c(size_t data)\ngoodB2GSink_d(data);\nvoid goodB2GSink_d(size_t data)\ngoodB2GSink_e(data);\nvoid goodB2GSink_e(size_t data)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17116,"code":"size_t data;\ndata = 0;\ndata = 20;\ngoodG2BSink_b(data);\nvoid goodG2BSink_b(size_t data)\ngoodG2BSink_c(data);\nvoid goodG2BSink_c(size_t data)\ngoodG2BSink_d(data);\nvoid goodG2BSink_d(size_t data)\ngoodG2BSink_e(data);\nvoid goodG2BSink_e(size_t data)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17117,"code":"size_t data;\ndata = 0;\nfscanf(stdin, \"%ud\", &data);\nbadSink_b(data);\nvoid badSink_b(size_t data)\nbadSink_c(data);\nvoid badSink_c(size_t data)\nbadSink_d(data);\nvoid badSink_d(size_t data)\nbadSink_e(data);\nvoid badSink_e(size_t data)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":17118,"code":"size_t data;\ndata = 0;\ndata = badSource(data);\nsize_t badSource(size_t data)\nfscanf(stdin, \"%ud\", &data);\nreturn data;\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":17119,"code":"size_t data;\ndata = 0;\ndata = goodG2BSource(data);\nsize_t goodG2BSource(size_t data)\ndata = 20;\nreturn data;\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17120,"code":"size_t data;\ndata = 0;\ndata = goodB2GSource(data);\nsize_t goodB2GSource(size_t data)\nfscanf(stdin, \"%ud\", &data);\nreturn data;\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17121,"code":"size_t data;\ndata = 0;\nbadSource(data);\nvoid badSource(size_t &data)\nfscanf(stdin, \"%ud\", &data);\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":17122,"code":"size_t data;\ndata = 0;\ngoodG2BSource(data);\nvoid goodG2BSource(size_t &data)\ndata = 20;\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17123,"code":"size_t data;\ndata = 0;\ngoodB2GSource(data);\nvoid goodB2GSource(size_t &data)\nfscanf(stdin, \"%ud\", &data);\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17124,"code":"size_t data;\ndata = 0;\ndata = 20;\ngoodG2BSink(&data);\nvoid goodG2BSink(size_t * dataPtr)\nsize_t data = *dataPtr;\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17125,"code":"size_t data;\ndata = 0;\nfscanf(stdin, \"%ud\", &data);\ngoodB2GSink(&data);\nvoid goodB2GSink(size_t * dataPtr)\nsize_t data = *dataPtr;\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17126,"code":"size_t data;\ndata = 0;\nfscanf(stdin, \"%ud\", &data);\nbadSink(&data);\nvoid badSink(size_t * dataPtr)\nsize_t data = *dataPtr;\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":17127,"code":"size_t data;\ndata = 0;\nfscanf(stdin, \"%ud\", &data);\ngoodB2GSink(&data);\nvoid goodB2GSink(void * dataVoidPtr)\nsize_t * dataPtr = (size_t *)dataVoidPtr;\nsize_t data = (*dataPtr);\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17128,"code":"size_t data;\ndata = 0;\nfscanf(stdin, \"%ud\", &data);\nbadSink(&data);\nvoid badSink(void * dataVoidPtr)\nsize_t * dataPtr = (size_t *)dataVoidPtr;\nsize_t data = (*dataPtr);\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":17129,"code":"size_t data;\ndata = 0;\ndata = 20;\ngoodG2BSink(&data);\nvoid goodG2BSink(void * dataVoidPtr)\nsize_t * dataPtr = (size_t *)dataVoidPtr;\nsize_t data = (*dataPtr);\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17130,"code":"size_t data;\nvoid (*funcPtr) (size_t) = goodB2GSink;\ndata = 0;\nfscanf(stdin, \"%ud\", &data);\nfuncPtr(data);\nvoid goodB2GSink(size_t data)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17131,"code":"size_t data;\nvoid (*funcPtr) (size_t) = badSink;\ndata = 0;\nfscanf(stdin, \"%ud\", &data);\nfuncPtr(data);\nvoid badSink(size_t data)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":17132,"code":"size_t data;\nvoid (*funcPtr) (size_t) = goodG2BSink;\ndata = 0;\ndata = 20;\nfuncPtr(data);\nvoid goodG2BSink(size_t data)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17133,"code":"size_t data;\nsize_t dataArray[5];\ndata = 0;\ndata = 20;\ndataArray[2] = data;\ngoodG2BSink(dataArray);\nvoid goodG2BSink(size_t dataArray[])\nsize_t data = dataArray[2];\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17134,"code":"size_t data;\nsize_t dataArray[5];\ndata = 0;\nfscanf(stdin, \"%ud\", &data);\ndataArray[2] = data;\ngoodB2GSink(dataArray);\nvoid goodB2GSink(size_t dataArray[])\nsize_t data = dataArray[2];\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17135,"code":"size_t data;\nsize_t dataArray[5];\ndata = 0;\nfscanf(stdin, \"%ud\", &data);\ndataArray[2] = data;\nbadSink(dataArray);\nvoid badSink(size_t dataArray[])\nsize_t data = dataArray[2];\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":17136,"code":"size_t data;\nstructType myStruct;\ndata = 0;\nfscanf(stdin, \"%ud\", &data);\nmyStruct.structFirst = data;\ngoodB2GSink(myStruct);\nvoid goodB2GSink(structType myStruct)\nsize_t data = myStruct.structFirst;\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17137,"code":"size_t data;\nstructType myStruct;\ndata = 0;\ndata = 20;\nmyStruct.structFirst = data;\ngoodG2BSink(myStruct);\nvoid goodG2BSink(structType myStruct)\nsize_t data = myStruct.structFirst;\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17138,"code":"size_t data;\nstructType myStruct;\ndata = 0;\nfscanf(stdin, \"%ud\", &data);\nmyStruct.structFirst = data;\nbadSink(myStruct);\nvoid badSink(structType myStruct)\nsize_t data = myStruct.structFirst;\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":17139,"code":"size_t data;\ndata = 0;\nfscanf(stdin, \"%ud\", &data);\nbadData = data;\nbadSink();\nvoid badSink()\nsize_t data = badData;\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":17140,"code":"size_t data;\ndata = 0;\ndata = 20;\ngoodG2BData = data;\ngoodG2BSink();\nvoid goodG2BSink()\nsize_t data = goodG2BData;\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17141,"code":"size_t data;\ndata = 0;\nfscanf(stdin, \"%ud\", &data);\ngoodB2GData = data;\ngoodB2GSink();\nvoid goodB2GSink()\nsize_t data = goodB2GData;\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17142,"code":"size_t data;\nvector<size_t> dataVector;\ndata = 0;\nfscanf(stdin, \"%ud\", &data);\ndataVector.insert(dataVector.end(), 1, data);\ndataVector.insert(dataVector.end(), 1, data);\ndataVector.insert(dataVector.end(), 1, data);\nbadSink(dataVector);\nvoid badSink(vector<size_t> dataVector)\nsize_t data = dataVector[2];\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":17143,"code":"size_t data;\nvector<size_t> dataVector;\ndata = 0;\nfscanf(stdin, \"%ud\", &data);\ndataVector.insert(dataVector.end(), 1, data);\ndataVector.insert(dataVector.end(), 1, data);\ndataVector.insert(dataVector.end(), 1, data);\ngoodB2GSink(dataVector);\nvoid goodB2GSink(vector<size_t> dataVector)\nsize_t data = dataVector[2];\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17144,"code":"size_t data;\nvector<size_t> dataVector;\ndata = 0;\ndata = 20;\ndataVector.insert(dataVector.end(), 1, data);\ndataVector.insert(dataVector.end(), 1, data);\ndataVector.insert(dataVector.end(), 1, data);\ngoodG2BSink(dataVector);\nvoid goodG2BSink(vector<size_t> dataVector)\nsize_t data = dataVector[2];\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17145,"code":"size_t data;\nlist<size_t> dataList;\ndata = 0;\nfscanf(stdin, \"%ud\", &data);\ndataList.push_back(data);\ndataList.push_back(data);\ndataList.push_back(data);\nbadSink(dataList);\nvoid badSink(list<size_t> dataList)\nsize_t data = dataList.back();\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":17146,"code":"size_t data;\nlist<size_t> dataList;\ndata = 0;\nfscanf(stdin, \"%ud\", &data);\ndataList.push_back(data);\ndataList.push_back(data);\ndataList.push_back(data);\ngoodB2GSink(dataList);\nvoid goodB2GSink(list<size_t> dataList)\nsize_t data = dataList.back();\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17147,"code":"size_t data;\nlist<size_t> dataList;\ndata = 0;\ndata = 20;\ndataList.push_back(data);\ndataList.push_back(data);\ndataList.push_back(data);\ngoodG2BSink(dataList);\nvoid goodG2BSink(list<size_t> dataList)\nsize_t data = dataList.back();\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17148,"code":"size_t data;\nmap<int, size_t> dataMap;\ndata = 0;\nfscanf(stdin, \"%ud\", &data);\ndataMap[0] = data;\ndataMap[1] = data;\ndataMap[2] = data;\nbadSink(dataMap);\nvoid badSink(map<int, size_t> dataMap)\nsize_t data = dataMap[2];\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":17149,"code":"size_t data;\nmap<int, size_t> dataMap;\ndata = 0;\nfscanf(stdin, \"%ud\", &data);\ndataMap[0] = data;\ndataMap[1] = data;\ndataMap[2] = data;\ngoodB2GSink(dataMap);\nvoid goodB2GSink(map<int, size_t> dataMap)\nsize_t data = dataMap[2];\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17150,"code":"size_t data;\nmap<int, size_t> dataMap;\ndata = 0;\ndata = 20;\ndataMap[0] = data;\ndataMap[1] = data;\ndataMap[2] = data;\ngoodG2BSink(dataMap);\nvoid goodG2BSink(map<int, size_t> dataMap)\nsize_t data = dataMap[2];\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17151,"code":"size_t data;\ndata = 0;\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(acceptSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17152,"code":"size_t data;\ndata = 0;\ndata = 20;\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17153,"code":"size_t data;\ndata = 0;\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(acceptSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":17154,"code":"size_t data;\ndata = 0;\nif(1)\ndata = 20;\nif(1)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17155,"code":"size_t data;\ndata = 0;\nif(0){}\nelse\ndata = 20;\nif(1)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17156,"code":"size_t data;\ndata = 0;\nif(1)\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(acceptSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nif(1)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17157,"code":"size_t data;\ndata = 0;\nif(1)\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(acceptSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nif(1)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":17158,"code":"size_t data;\ndata = 0;\nif(1)\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(acceptSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nif(0){}\nelse\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17159,"code":"size_t data;\ndata = 0;\nif(5==5)\ndata = 20;\nif(5==5)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17160,"code":"size_t data;\ndata = 0;\nif(5!=5){}\nelse\ndata = 20;\nif(5==5)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17161,"code":"size_t data;\ndata = 0;\nif(5==5)\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(acceptSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nif(5==5)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17162,"code":"size_t data;\ndata = 0;\nif(5==5)\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(acceptSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nif(5==5)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":17163,"code":"size_t data;\ndata = 0;\nif(5==5)\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(acceptSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nif(5!=5){}\nelse\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17164,"code":"size_t data;\ndata = 0;\nif(STATIC_CONST_TRUE)\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(acceptSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nif(STATIC_CONST_FALSE){}\nelse\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17165,"code":"size_t data;\ndata = 0;\nif(STATIC_CONST_TRUE)\ndata = 20;\nif(STATIC_CONST_TRUE)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17166,"code":"size_t data;\ndata = 0;\nif(STATIC_CONST_FALSE){}\nelse\ndata = 20;\nif(STATIC_CONST_TRUE)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17167,"code":"size_t data;\ndata = 0;\nif(STATIC_CONST_TRUE)\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(acceptSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nif(STATIC_CONST_TRUE)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17168,"code":"size_t data;\ndata = 0;\nif(STATIC_CONST_TRUE)\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(acceptSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nif(STATIC_CONST_TRUE)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":17169,"code":"size_t data;\ndata = 0;\nif(staticTrue)\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(acceptSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nif(staticFalse){}\nelse\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17170,"code":"size_t data;\ndata = 0;\nif(staticTrue)\ndata = 20;\nif(staticTrue)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17171,"code":"size_t data;\ndata = 0;\nif(staticFalse){}\nelse\ndata = 20;\nif(staticTrue)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17172,"code":"size_t data;\ndata = 0;\nif(staticTrue)\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(acceptSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nif(staticTrue)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17173,"code":"size_t data;\ndata = 0;\nif(staticTrue)\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(acceptSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nif(staticTrue)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":17174,"code":"size_t data;\ndata = 0;\nif(STATIC_CONST_FIVE==5)\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(acceptSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nif(STATIC_CONST_FIVE==5)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":17175,"code":"size_t data;\ndata = 0;\nif(STATIC_CONST_FIVE==5)\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(acceptSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nif(STATIC_CONST_FIVE!=5){}\nelse\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17176,"code":"size_t data;\ndata = 0;\nif(STATIC_CONST_FIVE==5)\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(acceptSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nif(STATIC_CONST_FIVE==5)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17177,"code":"size_t data;\ndata = 0;\nif(STATIC_CONST_FIVE==5)\ndata = 20;\nif(STATIC_CONST_FIVE==5)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17178,"code":"size_t data;\ndata = 0;\nif(STATIC_CONST_FIVE!=5){}\nelse\ndata = 20;\nif(STATIC_CONST_FIVE==5)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17179,"code":"size_t data;\ndata = 0;\nif(staticFive==5)\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(acceptSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nif(staticFive==5)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":17180,"code":"size_t data;\ndata = 0;\nif(staticFive==5)\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(acceptSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nif(staticFive!=5){}\nelse\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17181,"code":"size_t data;\ndata = 0;\nif(staticFive==5)\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(acceptSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nif(staticFive==5)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17182,"code":"size_t data;\ndata = 0;\nif(staticFive==5)\ndata = 20;\nif(staticFive==5)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17183,"code":"size_t data;\ndata = 0;\nif(staticFive!=5){}\nelse\ndata = 20;\nif(staticFive==5)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17184,"code":"size_t data;\ndata = 0;\nif(staticReturnsTrue())\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(acceptSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nif(staticReturnsTrue())\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":17185,"code":"size_t data;\ndata = 0;\nif(staticReturnsTrue())\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(acceptSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nif(staticReturnsFalse()){}\nelse\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17186,"code":"size_t data;\ndata = 0;\nif(staticReturnsTrue())\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(acceptSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nif(staticReturnsTrue())\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17187,"code":"size_t data;\ndata = 0;\nif(staticReturnsTrue())\ndata = 20;\nif(staticReturnsTrue())\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17188,"code":"size_t data;\ndata = 0;\nif(staticReturnsFalse()){}\nelse\ndata = 20;\nif(staticReturnsTrue())\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17189,"code":"size_t data;\ndata = 0;\nif(GLOBAL_CONST_TRUE)\ndata = 20;\nif(GLOBAL_CONST_TRUE)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17190,"code":"size_t data;\ndata = 0;\nif(GLOBAL_CONST_FALSE){}\nelse\ndata = 20;\nif(GLOBAL_CONST_TRUE)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17191,"code":"size_t data;\ndata = 0;\nif(GLOBAL_CONST_TRUE)\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(acceptSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nif(GLOBAL_CONST_TRUE)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17192,"code":"size_t data;\ndata = 0;\nif(GLOBAL_CONST_TRUE)\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(acceptSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nif(GLOBAL_CONST_TRUE)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":17193,"code":"size_t data;\ndata = 0;\nif(GLOBAL_CONST_TRUE)\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(acceptSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nif(GLOBAL_CONST_FALSE){}\nelse\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17194,"code":"size_t data;\ndata = 0;\nif(globalTrue)\ndata = 20;\nif(globalTrue)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17195,"code":"size_t data;\ndata = 0;\nif(globalFalse){}\nelse\ndata = 20;\nif(globalTrue)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17196,"code":"size_t data;\ndata = 0;\nif(globalTrue)\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(acceptSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nif(globalTrue)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17197,"code":"size_t data;\ndata = 0;\nif(globalTrue)\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(acceptSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nif(globalTrue)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":17198,"code":"size_t data;\ndata = 0;\nif(globalTrue)\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(acceptSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nif(globalFalse){}\nelse\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17199,"code":"size_t data;\ndata = 0;\nif(globalReturnsTrue())\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(acceptSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nif(globalReturnsFalse()){}\nelse\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17200,"code":"size_t data;\ndata = 0;\nif(globalReturnsTrue())\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(acceptSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nif(globalReturnsTrue())\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17201,"code":"size_t data;\ndata = 0;\nif(globalReturnsTrue())\ndata = 20;\nif(globalReturnsTrue())\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17202,"code":"size_t data;\ndata = 0;\nif(globalReturnsFalse()){}\nelse\ndata = 20;\nif(globalReturnsTrue())\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17203,"code":"size_t data;\ndata = 0;\nif(globalReturnsTrue())\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(acceptSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nif(globalReturnsTrue())\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":17204,"code":"size_t data;\ndata = 0;\nif(GLOBAL_CONST_FIVE==5)\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(acceptSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nif(GLOBAL_CONST_FIVE!=5){}\nelse\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17205,"code":"size_t data;\ndata = 0;\nif(GLOBAL_CONST_FIVE==5)\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(acceptSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nif(GLOBAL_CONST_FIVE==5)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17206,"code":"size_t data;\ndata = 0;\nif(GLOBAL_CONST_FIVE==5)\ndata = 20;\nif(GLOBAL_CONST_FIVE==5)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17207,"code":"size_t data;\ndata = 0;\nif(GLOBAL_CONST_FIVE!=5){}\nelse\ndata = 20;\nif(GLOBAL_CONST_FIVE==5)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17208,"code":"size_t data;\ndata = 0;\nif(GLOBAL_CONST_FIVE==5)\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(acceptSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nif(GLOBAL_CONST_FIVE==5)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":17209,"code":"size_t data;\ndata = 0;\nif(globalFive==5)\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(acceptSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nif(globalFive==5)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17210,"code":"size_t data;\ndata = 0;\nif(globalFive==5)\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(acceptSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nif(globalFive!=5){}\nelse\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17211,"code":"size_t data;\ndata = 0;\nif(globalFive==5)\ndata = 20;\nif(globalFive==5)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17212,"code":"size_t data;\ndata = 0;\nif(globalFive!=5){}\nelse\ndata = 20;\nif(globalFive==5)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17213,"code":"size_t data;\ndata = 0;\nif(globalFive==5)\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(acceptSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nif(globalFive==5)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":17214,"code":"size_t data;\ndata = 0;\nswitch(6)\ncase 6:\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(acceptSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nbreak;\ndefault:\nbreak;\nswitch(7)\ncase 7:\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17215,"code":"size_t data;\ndata = 0;\nswitch(5)\ncase 6:\nbreak;\ndefault:\ndata = 20;\nbreak;\nswitch(7)\ncase 7:\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17216,"code":"size_t data;\ndata = 0;\nswitch(6)\ncase 6:\ndata = 20;\nbreak;\ndefault:\nbreak;\nswitch(7)\ncase 7:\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17217,"code":"size_t data;\ndata = 0;\nswitch(6)\ncase 6:\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(acceptSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nbreak;\ndefault:\nbreak;\nswitch(7)\ncase 7:\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":17218,"code":"size_t data;\ndata = 0;\nswitch(6)\ncase 6:\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(acceptSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nbreak;\ndefault:\nbreak;\nswitch(8)\ncase 7:\nbreak;\ndefault:\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17219,"code":"size_t data;\ndata = 0;\nwhile(1)\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(acceptSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nbreak;\nwhile(1)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\nbreak;\n \n","target":0}
{"idx":17220,"code":"size_t data;\ndata = 0;\nwhile(1)\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(acceptSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nbreak;\nwhile(1)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\nbreak;\n \n","target":1}
{"idx":17221,"code":"size_t data;\ndata = 0;\nwhile(1)\ndata = 20;\nbreak;\nwhile(1)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\nbreak;\n \n","target":0}
{"idx":17222,"code":"size_t data;\ndata = 0;\nfor(h = 0; h < 1; h++)\ndata = 20;\nfor(j = 0; j < 1; j++)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17223,"code":"size_t data;\ndata = 0;\nfor(i = 0; i < 1; i++)\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(acceptSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nfor(k = 0; k < 1; k++)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17224,"code":"size_t data;\ndata = 0;\nfor(i = 0; i < 1; i++)\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(acceptSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nfor(j = 0; j < 1; j++)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":17225,"code":"size_t data;\ndata = 0;\ngoto source;\nsource:\ndata = 20;\ngoto sink;\nsink:\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17226,"code":"size_t data;\ndata = 0;\ngoto source;\nsource:\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(acceptSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\ngoto sink;\nsink:\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":17227,"code":"size_t data;\ndata = 0;\ngoto source;\nsource:\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(acceptSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\ngoto sink;\nsink:\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17228,"code":"size_t data;\ndata = 0;\ndata = 20;\ngoodG2bStatic = 1;\ngoodG2BSink(data);\nstatic void goodG2BSink(size_t data)\nif(goodG2bStatic)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17229,"code":"size_t data;\ndata = 0;\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(acceptSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nbadStatic = 1;\nbadSink(data);\nstatic void badSink(size_t data)\nif(badStatic)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":17230,"code":"size_t data;\ndata = 0;\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(acceptSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\ngoodB2G2Static = 1;\ngoodB2G2Sink(data);\nstatic void goodB2G2Sink(size_t data)\nif(goodB2G2Static)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17231,"code":"size_t data;\ndata = 0;\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(acceptSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\ngoodB2G1Static = 0;\ngoodB2G1Sink(data);\nstatic void goodB2G1Sink(size_t data)\nif(goodB2G1Static){}\nelse\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17232,"code":"size_t data;\ndata = 0;\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(acceptSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nbadGlobal = 1;\nbadSink(data);\nvoid badSink(size_t data)\nif(badGlobal)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":17233,"code":"size_t data;\ndata = 0;\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(acceptSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\ngoodB2G1Global = 0;\ngoodB2G1Sink(data);\nvoid goodB2G1Sink(size_t data)\nif(goodB2G1Global){}\nelse\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17234,"code":"size_t data;\ndata = 0;\ndata = 20;\ngoodG2B1Global = 1;\ngoodG2B1Sink(data);\nvoid goodG2B1Sink(size_t data)\nif(goodG2B1Global)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17235,"code":"size_t data;\ndata = 0;\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(acceptSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\ngoodB2G2Global = 1;\ngoodB2G2Sink(data);\nvoid goodB2G2Sink(size_t data)\nif(goodB2G2Global)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17236,"code":"size_t data;\ndata = 0;\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(acceptSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nsize_t dataCopy = data;\nsize_t data = dataCopy;\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17237,"code":"size_t data;\ndata = 0;\ndata = 20;\nsize_t dataCopy = data;\nsize_t data = dataCopy;\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17238,"code":"size_t data;\ndata = 0;\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(acceptSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nsize_t dataCopy = data;\nsize_t data = dataCopy;\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":17239,"code":"size_t data;\nsize_t *dataPtr1 = &data;\nsize_t *dataPtr2 = &data;\ndata = 0;\nsize_t data = *dataPtr1;\ndata = 20;\n*dataPtr1 = data;\nsize_t data = *dataPtr2;\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17240,"code":"size_t data;\nsize_t *dataPtr1 = &data;\nsize_t *dataPtr2 = &data;\ndata = 0;\nsize_t data = *dataPtr1;\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(acceptSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\n*dataPtr1 = data;\nsize_t data = *dataPtr2;\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17241,"code":"size_t data;\nsize_t *dataPtr1 = &data;\nsize_t *dataPtr2 = &data;\ndata = 0;\nsize_t data = *dataPtr1;\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(acceptSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\n*dataPtr1 = data;\nsize_t data = *dataPtr2;\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":17242,"code":"size_t data;\nsize_t &dataRef = data;\ndata = 0;\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(acceptSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nsize_t data = dataRef;\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17243,"code":"size_t data;\nsize_t &dataRef = data;\ndata = 0;\ndata = 20;\nsize_t data = dataRef;\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17244,"code":"size_t data;\nsize_t &dataRef = data;\ndata = 0;\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(acceptSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nsize_t data = dataRef;\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":17245,"code":"size_t data;\nunionType myUnion;\ndata = 0;\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(acceptSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nmyUnion.unionFirst = data;\nsize_t data = myUnion.unionSecond;\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":17246,"code":"size_t data;\nunionType myUnion;\ndata = 0;\ndata = 20;\nmyUnion.unionFirst = data;\nsize_t data = myUnion.unionSecond;\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17247,"code":"size_t data;\nunionType myUnion;\ndata = 0;\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(acceptSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nmyUnion.unionFirst = data;\nsize_t data = myUnion.unionSecond;\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17248,"code":"size_t data;\ndata = 0;\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(acceptSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\ngoodB2GSink(data);\nstatic void goodB2GSink(size_t data)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17249,"code":"size_t data;\ndata = 0;\ndata = 20;\ngoodG2BSink(data);\nstatic void goodG2BSink(size_t data)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17250,"code":"size_t data;\ndata = 0;\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(acceptSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nbadSink(data);\nstatic void badSink(size_t data)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":17251,"code":"size_t data;\ndata = 0;\ndata = goodB2GSource(data);\nstatic size_t goodB2GSource(size_t data)\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(acceptSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nreturn data;\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17252,"code":"size_t data;\ndata = 0;\ndata = badSource(data);\nstatic size_t badSource(size_t data)\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(acceptSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nreturn data;\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":17253,"code":"size_t data;\ndata = 0;\ndata = goodG2BSource(data);\nstatic size_t goodG2BSource(size_t data)\ndata = 20;\nreturn data;\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17254,"code":"size_t data;\ndata = 0;\ngoodG2BSource(data);\nstatic void goodG2BSource(size_t &data)\ndata = 20;\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17255,"code":"size_t data;\ndata = 0;\nbadSource(data);\nvoid badSource(size_t &data)\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(acceptSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":17256,"code":"size_t data;\ndata = 0;\ngoodB2GSource(data);\nstatic void goodB2GSource(size_t &data)\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(acceptSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17257,"code":"size_t data;\nvoid (*funcPtr) (size_t) = badSink;\ndata = 0;\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(acceptSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nfuncPtr(data);\nstatic void badSink(size_t data)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":17258,"code":"size_t data;\nvoid (*funcPtr) (size_t) = goodB2GSink;\ndata = 0;\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(acceptSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nfuncPtr(data);\nstatic void goodB2GSink(size_t data)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17259,"code":"size_t data;\nvoid (*funcPtr) (size_t) = goodG2BSink;\ndata = 0;\ndata = 20;\nfuncPtr(data);\nstatic void goodG2BSink(size_t data)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17260,"code":"size_t data;\ndata = 0;\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(acceptSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\ngoodB2GData = data;\ngoodB2GSink();\nstatic void goodB2GSink()\nsize_t data = goodB2GData;\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17261,"code":"size_t data;\ndata = 0;\ndata = 20;\ngoodG2BData = data;\ngoodG2BSink();\nstatic void goodG2BSink()\nsize_t data = goodG2BData;\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17262,"code":"size_t data;\ndata = 0;\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(acceptSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nbadData = data;\nbadSink();\nstatic void badSink()\nsize_t data = badData;\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":17263,"code":"size_t data;\ndata = 0;\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(acceptSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\ngoodB2GSink(data);\nvoid goodB2GSink(size_t data)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17264,"code":"size_t data;\ndata = 0;\ndata = 20;\ngoodG2BSink(data);\nvoid goodG2BSink(size_t data)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17265,"code":"size_t data;\ndata = 0;\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(acceptSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nbadSink(data);\nvoid badSink(size_t data)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":17266,"code":"size_t data;\ndata = 0;\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(acceptSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\ngoodB2GSink_b(data);\nvoid goodB2GSink_b(size_t data)\ngoodB2GSink_c(data);\nvoid goodB2GSink_c(size_t data)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17267,"code":"size_t data;\ndata = 0;\ndata = 20;\ngoodG2BSink_b(data);\nvoid goodG2BSink_b(size_t data)\ngoodG2BSink_c(data);\nvoid goodG2BSink_c(size_t data)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17268,"code":"size_t data;\ndata = 0;\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(acceptSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nbadSink_b(data);\nvoid badSink_b(size_t data)\nbadSink_c(data);\nvoid badSink_c(size_t data)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":17269,"code":"size_t data;\ndata = 0;\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(acceptSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nbadSink_b(data);\nvoid badSink_b(size_t data)\nbadSink_c(data);\nvoid badSink_c(size_t data)\nbadSink_d(data);\nvoid badSink_d(size_t data)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":17270,"code":"size_t data;\ndata = 0;\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(acceptSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\ngoodB2GSink_b(data);\nvoid goodB2GSink_b(size_t data)\ngoodB2GSink_c(data);\nvoid goodB2GSink_c(size_t data)\ngoodB2GSink_d(data);\nvoid goodB2GSink_d(size_t data)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17271,"code":"size_t data;\ndata = 0;\ndata = 20;\ngoodG2BSink_b(data);\nvoid goodG2BSink_b(size_t data)\ngoodG2BSink_c(data);\nvoid goodG2BSink_c(size_t data)\ngoodG2BSink_d(data);\nvoid goodG2BSink_d(size_t data)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17272,"code":"size_t data;\ndata = 0;\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(acceptSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\ngoodB2GSink_b(data);\nvoid goodB2GSink_b(size_t data)\ngoodB2GSink_c(data);\nvoid goodB2GSink_c(size_t data)\ngoodB2GSink_d(data);\nvoid goodB2GSink_d(size_t data)\ngoodB2GSink_e(data);\nvoid goodB2GSink_e(size_t data)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17273,"code":"size_t data;\ndata = 0;\ndata = 20;\ngoodG2BSink_b(data);\nvoid goodG2BSink_b(size_t data)\ngoodG2BSink_c(data);\nvoid goodG2BSink_c(size_t data)\ngoodG2BSink_d(data);\nvoid goodG2BSink_d(size_t data)\ngoodG2BSink_e(data);\nvoid goodG2BSink_e(size_t data)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17274,"code":"size_t data;\ndata = 0;\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(acceptSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nbadSink_b(data);\nvoid badSink_b(size_t data)\nbadSink_c(data);\nvoid badSink_c(size_t data)\nbadSink_d(data);\nvoid badSink_d(size_t data)\nbadSink_e(data);\nvoid badSink_e(size_t data)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":17275,"code":"size_t data;\ndata = 0;\ndata = badSource(data);\nsize_t badSource(size_t data)\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(acceptSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nreturn data;\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":17276,"code":"size_t data;\ndata = 0;\ndata = goodG2BSource(data);\nsize_t goodG2BSource(size_t data)\ndata = 20;\nreturn data;\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17277,"code":"size_t data;\ndata = 0;\ndata = goodB2GSource(data);\nsize_t goodB2GSource(size_t data)\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(acceptSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nreturn data;\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17278,"code":"size_t data;\ndata = 0;\nbadSource(data);\nvoid badSource(size_t &data)\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(acceptSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":17279,"code":"size_t data;\ndata = 0;\ngoodG2BSource(data);\nvoid goodG2BSource(size_t &data)\ndata = 20;\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17280,"code":"size_t data;\ndata = 0;\ngoodB2GSource(data);\nvoid goodB2GSource(size_t &data)\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(acceptSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17281,"code":"size_t data;\ndata = 0;\ndata = 20;\ngoodG2BSink(&data);\nvoid goodG2BSink(size_t * dataPtr)\nsize_t data = *dataPtr;\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17282,"code":"size_t data;\ndata = 0;\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(acceptSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nbadSink(&data);\nvoid badSink(size_t * dataPtr)\nsize_t data = *dataPtr;\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":17283,"code":"size_t data;\ndata = 0;\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(acceptSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\ngoodB2GSink(&data);\nvoid goodB2GSink(size_t * dataPtr)\nsize_t data = *dataPtr;\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17284,"code":"size_t data;\ndata = 0;\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(acceptSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nbadSink(&data);\nvoid badSink(void * dataVoidPtr)\nsize_t * dataPtr = (size_t *)dataVoidPtr;\nsize_t data = (*dataPtr);\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":17285,"code":"size_t data;\ndata = 0;\ndata = 20;\ngoodG2BSink(&data);\nvoid goodG2BSink(void * dataVoidPtr)\nsize_t * dataPtr = (size_t *)dataVoidPtr;\nsize_t data = (*dataPtr);\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17286,"code":"size_t data;\ndata = 0;\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(acceptSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\ngoodB2GSink(&data);\nvoid goodB2GSink(void * dataVoidPtr)\nsize_t * dataPtr = (size_t *)dataVoidPtr;\nsize_t data = (*dataPtr);\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17287,"code":"size_t data;\nvoid (*funcPtr) (size_t) = badSink;\ndata = 0;\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(acceptSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nfuncPtr(data);\nvoid badSink(size_t data)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":17288,"code":"size_t data;\nvoid (*funcPtr) (size_t) = goodG2BSink;\ndata = 0;\ndata = 20;\nfuncPtr(data);\nvoid goodG2BSink(size_t data)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17289,"code":"size_t data;\nvoid (*funcPtr) (size_t) = goodB2GSink;\ndata = 0;\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(acceptSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nfuncPtr(data);\nvoid goodB2GSink(size_t data)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17290,"code":"size_t data;\nsize_t dataArray[5];\ndata = 0;\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(acceptSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\ndataArray[2] = data;\ngoodB2GSink(dataArray);\nvoid goodB2GSink(size_t dataArray[])\nsize_t data = dataArray[2];\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17291,"code":"size_t data;\nsize_t dataArray[5];\ndata = 0;\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(acceptSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\ndataArray[2] = data;\nbadSink(dataArray);\nvoid badSink(size_t dataArray[])\nsize_t data = dataArray[2];\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":17292,"code":"size_t data;\nsize_t dataArray[5];\ndata = 0;\ndata = 20;\ndataArray[2] = data;\ngoodG2BSink(dataArray);\nvoid goodG2BSink(size_t dataArray[])\nsize_t data = dataArray[2];\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17293,"code":"size_t data;\nstructType myStruct;\ndata = 0;\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(acceptSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nmyStruct.structFirst = data;\ngoodB2GSink(myStruct);\nvoid goodB2GSink(structType myStruct)\nsize_t data = myStruct.structFirst;\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17294,"code":"size_t data;\nstructType myStruct;\ndata = 0;\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(acceptSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nmyStruct.structFirst = data;\nbadSink(myStruct);\nvoid badSink(structType myStruct)\nsize_t data = myStruct.structFirst;\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":17295,"code":"size_t data;\nstructType myStruct;\ndata = 0;\ndata = 20;\nmyStruct.structFirst = data;\ngoodG2BSink(myStruct);\nvoid goodG2BSink(structType myStruct)\nsize_t data = myStruct.structFirst;\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17296,"code":"size_t data;\ndata = 0;\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(acceptSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\nbadData = data;\nbadSink();\nvoid badSink()\nsize_t data = badData;\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":17297,"code":"size_t data;\ndata = 0;\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(acceptSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\ngoodB2GData = data;\ngoodB2GSink();\nvoid goodB2GSink()\nsize_t data = goodB2GData;\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17298,"code":"size_t data;\ndata = 0;\ndata = 20;\ngoodG2BData = data;\ngoodG2BSink();\nvoid goodG2BSink()\nsize_t data = goodG2BData;\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17299,"code":"size_t data;\nvector<size_t> dataVector;\ndata = 0;\ndata = 20;\ndataVector.insert(dataVector.end(), 1, data);\ndataVector.insert(dataVector.end(), 1, data);\ndataVector.insert(dataVector.end(), 1, data);\ngoodG2BSink(dataVector);\nvoid goodG2BSink(vector<size_t> dataVector)\nsize_t data = dataVector[2];\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17300,"code":"size_t data;\nvector<size_t> dataVector;\ndata = 0;\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(acceptSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\ndataVector.insert(dataVector.end(), 1, data);\ndataVector.insert(dataVector.end(), 1, data);\ndataVector.insert(dataVector.end(), 1, data);\ngoodB2GSink(dataVector);\nvoid goodB2GSink(vector<size_t> dataVector)\nsize_t data = dataVector[2];\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17301,"code":"size_t data;\nvector<size_t> dataVector;\ndata = 0;\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(acceptSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\ndataVector.insert(dataVector.end(), 1, data);\ndataVector.insert(dataVector.end(), 1, data);\ndataVector.insert(dataVector.end(), 1, data);\nbadSink(dataVector);\nvoid badSink(vector<size_t> dataVector)\nsize_t data = dataVector[2];\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":17302,"code":"size_t data;\nlist<size_t> dataList;\ndata = 0;\ndata = 20;\ndataList.push_back(data);\ndataList.push_back(data);\ndataList.push_back(data);\ngoodG2BSink(dataList);\nvoid goodG2BSink(list<size_t> dataList)\nsize_t data = dataList.back();\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17303,"code":"size_t data;\nlist<size_t> dataList;\ndata = 0;\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(acceptSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\ndataList.push_back(data);\ndataList.push_back(data);\ndataList.push_back(data);\ngoodB2GSink(dataList);\nvoid goodB2GSink(list<size_t> dataList)\nsize_t data = dataList.back();\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17304,"code":"size_t data;\nlist<size_t> dataList;\ndata = 0;\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(acceptSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\ndataList.push_back(data);\ndataList.push_back(data);\ndataList.push_back(data);\nbadSink(dataList);\nvoid badSink(list<size_t> dataList)\nsize_t data = dataList.back();\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":17305,"code":"size_t data;\nmap<int, size_t> dataMap;\ndata = 0;\ndata = 20;\ndataMap[0] = data;\ndataMap[1] = data;\ndataMap[2] = data;\ngoodG2BSink(dataMap);\nvoid goodG2BSink(map<int, size_t> dataMap)\nsize_t data = dataMap[2];\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17306,"code":"size_t data;\nmap<int, size_t> dataMap;\ndata = 0;\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(acceptSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\ndataMap[0] = data;\ndataMap[1] = data;\ndataMap[2] = data;\ngoodB2GSink(dataMap);\nvoid goodB2GSink(map<int, size_t> dataMap)\nsize_t data = dataMap[2];\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17307,"code":"size_t data;\nmap<int, size_t> dataMap;\ndata = 0;\nchar inputBuffer[CHAR_ARRAY_SIZE];\nrecvResult = recv(acceptSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\nif (recvResult == SOCKET_ERROR || recvResult == 0)\nbreak;\ninputBuffer[recvResult] = '\\0';\ndata = strtoul(inputBuffer, NULL, 0);\ndataMap[0] = data;\ndataMap[1] = data;\ndataMap[2] = data;\nbadSink(dataMap);\nvoid badSink(map<int, size_t> dataMap)\nsize_t data = dataMap[2];\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":17308,"code":"size_t data;\ndata = 0;\ndata = rand();\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":17309,"code":"size_t data;\ndata = 0;\ndata = 20;\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17310,"code":"size_t data;\ndata = 0;\ndata = rand();\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17311,"code":"size_t data;\ndata = 0;\nif(1)\ndata = rand();\nif(1)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17312,"code":"size_t data;\ndata = 0;\nif(1)\ndata = 20;\nif(1)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17313,"code":"size_t data;\ndata = 0;\nif(1)\ndata = rand();\nif(0){}\nelse\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17314,"code":"size_t data;\ndata = 0;\nif(0){}\nelse\ndata = 20;\nif(1)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17315,"code":"size_t data;\ndata = 0;\nif(1)\ndata = rand();\nif(1)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":17316,"code":"size_t data;\ndata = 0;\nif(5==5)\ndata = rand();\nif(5==5)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17317,"code":"size_t data;\ndata = 0;\nif(5==5)\ndata = 20;\nif(5==5)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17318,"code":"size_t data;\ndata = 0;\nif(5==5)\ndata = rand();\nif(5!=5){}\nelse\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17319,"code":"size_t data;\ndata = 0;\nif(5!=5){}\nelse\ndata = 20;\nif(5==5)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17320,"code":"size_t data;\ndata = 0;\nif(5==5)\ndata = rand();\nif(5==5)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":17321,"code":"size_t data;\ndata = 0;\nif(STATIC_CONST_TRUE)\ndata = rand();\nif(STATIC_CONST_TRUE)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":17322,"code":"size_t data;\ndata = 0;\nif(STATIC_CONST_TRUE)\ndata = rand();\nif(STATIC_CONST_TRUE)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17323,"code":"size_t data;\ndata = 0;\nif(STATIC_CONST_TRUE)\ndata = 20;\nif(STATIC_CONST_TRUE)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17324,"code":"size_t data;\ndata = 0;\nif(STATIC_CONST_TRUE)\ndata = rand();\nif(STATIC_CONST_FALSE){}\nelse\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17325,"code":"size_t data;\ndata = 0;\nif(STATIC_CONST_FALSE){}\nelse\ndata = 20;\nif(STATIC_CONST_TRUE)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17326,"code":"size_t data;\ndata = 0;\nif(staticTrue)\ndata = rand();\nif(staticTrue)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":17327,"code":"size_t data;\ndata = 0;\nif(staticTrue)\ndata = rand();\nif(staticTrue)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17328,"code":"size_t data;\ndata = 0;\nif(staticTrue)\ndata = 20;\nif(staticTrue)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17329,"code":"size_t data;\ndata = 0;\nif(staticTrue)\ndata = rand();\nif(staticFalse){}\nelse\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17330,"code":"size_t data;\ndata = 0;\nif(staticFalse){}\nelse\ndata = 20;\nif(staticTrue)\nwchar_t * myString;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17331,"code":"data = 20;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17332,"code":"data = 20;\nvoid (*funcPtr)(size_t) = badSource;\n(*badSource)(data);\nvoid badSource(size_t data)\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17333,"code":"data = 20;\nHELLO_STRING_len = wcslen(HELLO_STRING);\nif (data > HELLO_STRING_len)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17334,"code":"data = 20;\nsize_t * dataArray[5];\ndataArray[2] = data;\nbadSource(dataArray);\nvoid badSource(size_t * dataArray[])\nsize_t data = dataArray[2];\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17335,"code":"data = 20;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17336,"code":"data = 20;\nvoid (*funcPtr)(size_t) = badSource;\n(*badSource)(data);\nvoid badSource(size_t data)\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17337,"code":"data = 20;\nHELLO_STRING_len = wcslen(HELLO_STRING);\nif (data > HELLO_STRING_len)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17338,"code":"data = 20;\nsize_t * dataArray[5];\ndataArray[2] = data;\nbadSource(dataArray);\nvoid badSource(size_t * dataArray[])\nsize_t data = dataArray[2];\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17339,"code":"data = rand();\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING) ;\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17340,"code":"data = rand();\nvoid (*funcPtr)(size_t) = badSource;\n(*badSource)(data);\nvoid badSource(size_t data)\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING) ;\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17341,"code":"data = rand();\nHELLO_STRING_len = wcslen(HELLO_STRING);\nif (data > HELLO_STRING_len && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING) ;\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17342,"code":"data = rand();\nsize_t * dataArray[5];\ndataArray[2] = data;\nbadSource(dataArray);\nvoid badSource(size_t * dataArray[])\nsize_t data = dataArray[2];\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING) ;\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17343,"code":"data = rand();\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":17344,"code":"data = rand();\nvoid (*funcPtr)(size_t) = badSource;\n(*badSource)(data);\nvoid badSource(size_t data)\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":17345,"code":"data = rand();\nHELLO_STRING_len = wcslen(HELLO_STRING);\nif (data > HELLO_STRING_len)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":17346,"code":"data = rand();\nsize_t * dataArray[5];\ndataArray[2] = data;\nbadSource(dataArray);\nvoid badSource(size_t * dataArray[])\nsize_t data = dataArray[2];\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":17347,"code":"data = rand();\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17348,"code":"data = rand();\nvoid (*funcPtr)(size_t) = badSource;\n(*badSource)(data);\nvoid badSource(size_t data)\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17349,"code":"data = rand();\nHELLO_STRING_len = wcslen(HELLO_STRING);\nif (data > HELLO_STRING_len && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17350,"code":"data = rand();\nsize_t * dataArray[5];\ndataArray[2] = data;\nbadSource(dataArray);\nvoid badSource(size_t * dataArray[])\nsize_t data = dataArray[2];\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17351,"code":"data = 20;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17352,"code":"data = 20;\nvoid (*funcPtr)(size_t) = badSource;\n(*badSource)(data);\nvoid badSource(size_t data)\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17353,"code":"data = 20;\nHELLO_STRING_len = wcslen(HELLO_STRING);\nif (data > HELLO_STRING_len)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17354,"code":"data = 20;\nsize_t * dataArray[5];\ndataArray[2] = data;\nbadSource(dataArray);\nvoid badSource(size_t * dataArray[])\nsize_t data = dataArray[2];\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17355,"code":"data = rand();\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":17356,"code":"data = rand();\nvoid (*funcPtr)(size_t) = badSource;\n(*badSource)(data);\nvoid badSource(size_t data)\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":17357,"code":"data = rand();\nHELLO_STRING_len = wcslen(HELLO_STRING);\nif (data > HELLO_STRING_len)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":17358,"code":"data = rand();\nsize_t * dataArray[5];\ndataArray[2] = data;\nbadSource(dataArray);\nvoid badSource(size_t * dataArray[])\nsize_t data = dataArray[2];\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":17359,"code":"data = 20;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17360,"code":"data = 20;\nvoid (*funcPtr)(size_t) = badSource;\n(*badSource)(data);\nvoid badSource(size_t data)\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17361,"code":"data = 20;\nHELLO_STRING_len = wcslen(HELLO_STRING);\nif (data > HELLO_STRING_len)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17362,"code":"data = 20;\nsize_t * dataArray[5];\ndataArray[2] = data;\nbadSource(dataArray);\nvoid badSource(size_t * dataArray[])\nsize_t data = dataArray[2];\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17363,"code":"data = 20;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17364,"code":"data = 20;\nvoid (*funcPtr)(size_t) = badSource;\n(*badSource)(data);\nvoid badSource(size_t data)\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17365,"code":"data = 20;\nHELLO_STRING_len = wcslen(HELLO_STRING);\nif (data > HELLO_STRING_len)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17366,"code":"data = 20;\nsize_t * dataArray[5];\ndataArray[2] = data;\nbadSource(dataArray);\nvoid badSource(size_t * dataArray[])\nsize_t data = dataArray[2];\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17367,"code":"data = rand();\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17368,"code":"data = rand();\nvoid (*funcPtr)(size_t) = badSource;\n(*badSource)(data);\nvoid badSource(size_t data)\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17369,"code":"data = rand();\nHELLO_STRING_len = wcslen(HELLO_STRING);\nif (data > HELLO_STRING_len && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17370,"code":"data = rand();\nsize_t * dataArray[5];\ndataArray[2] = data;\nbadSource(dataArray);\nvoid badSource(size_t * dataArray[])\nsize_t data = dataArray[2];\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17371,"code":"data = rand();\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17372,"code":"data = rand();\nvoid (*funcPtr)(size_t) = badSource;\n(*badSource)(data);\nvoid badSource(size_t data)\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17373,"code":"data = rand();\nHELLO_STRING_len = wcslen(HELLO_STRING);\nif (data > HELLO_STRING_len && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17374,"code":"data = rand();\nsize_t * dataArray[5];\ndataArray[2] = data;\nbadSource(dataArray);\nvoid badSource(size_t * dataArray[])\nsize_t data = dataArray[2];\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17375,"code":"data = 20;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17376,"code":"data = 20;\nvoid (*funcPtr)(size_t) = badSource;\n(*badSource)(data);\nvoid badSource(size_t data)\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17377,"code":"data = 20;\nHELLO_STRING_len = wcslen(HELLO_STRING);\nif (data > HELLO_STRING_len)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17378,"code":"data = 20;\nsize_t * dataArray[5];\ndataArray[2] = data;\nbadSource(dataArray);\nvoid badSource(size_t * dataArray[])\nsize_t data = dataArray[2];\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17379,"code":"data = 20;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17380,"code":"data = 20;\nvoid (*funcPtr)(size_t) = badSource;\n(*badSource)(data);\nvoid badSource(size_t data)\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17381,"code":"data = 20;\nHELLO_STRING_len = wcslen(HELLO_STRING);\nif (data > HELLO_STRING_len)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17382,"code":"data = 20;\nsize_t * dataArray[5];\ndataArray[2] = data;\nbadSource(dataArray);\nvoid badSource(size_t * dataArray[])\nsize_t data = dataArray[2];\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17383,"code":"data = rand();\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17384,"code":"data = rand();\nvoid (*funcPtr)(size_t) = badSource;\n(*badSource)(data);\nvoid badSource(size_t data)\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17385,"code":"data = rand();\nHELLO_STRING_len = wcslen(HELLO_STRING);\nif (data > HELLO_STRING_len && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17386,"code":"data = rand();\nsize_t * dataArray[5];\ndataArray[2] = data;\nbadSource(dataArray);\nvoid badSource(size_t * dataArray[])\nsize_t data = dataArray[2];\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17387,"code":"data = rand();\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17388,"code":"data = rand();\nvoid (*funcPtr)(size_t) = badSource;\n(*badSource)(data);\nvoid badSource(size_t data)\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17389,"code":"data = rand();\nHELLO_STRING_len = wcslen(HELLO_STRING);\nif (data > HELLO_STRING_len && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17390,"code":"data = rand();\nsize_t * dataArray[5];\ndataArray[2] = data;\nbadSource(dataArray);\nvoid badSource(size_t * dataArray[])\nsize_t data = dataArray[2];\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17391,"code":"data = rand();\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":17392,"code":"data = rand();\nvoid (*funcPtr)(size_t) = badSource;\n(*badSource)(data);\nvoid badSource(size_t data)\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":17393,"code":"data = rand();\nHELLO_STRING_len = wcslen(HELLO_STRING);\nif (data > HELLO_STRING_len)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":17394,"code":"data = rand();\nsize_t * dataArray[5];\ndataArray[2] = data;\nbadSource(dataArray);\nvoid badSource(size_t * dataArray[])\nsize_t data = dataArray[2];\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":17395,"code":"data = 20;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17396,"code":"data = 20;\nvoid (*funcPtr)(size_t) = badSource;\n(*badSource)(data);\nvoid badSource(size_t data)\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17397,"code":"data = 20;\nHELLO_STRING_len = wcslen(HELLO_STRING);\nif (data > HELLO_STRING_len)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17398,"code":"data = 20;\nsize_t * dataArray[5];\ndataArray[2] = data;\nbadSource(dataArray);\nvoid badSource(size_t * dataArray[])\nsize_t data = dataArray[2];\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17399,"code":"data = 20;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17400,"code":"data = 20;\nvoid (*funcPtr)(size_t) = badSource;\n(*badSource)(data);\nvoid badSource(size_t data)\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17401,"code":"data = 20;\nHELLO_STRING_len = wcslen(HELLO_STRING);\nif (data > HELLO_STRING_len)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17402,"code":"data = 20;\nsize_t * dataArray[5];\ndataArray[2] = data;\nbadSource(dataArray);\nvoid badSource(size_t * dataArray[])\nsize_t data = dataArray[2];\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17403,"code":"data = rand();\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17404,"code":"data = rand();\nvoid (*funcPtr)(size_t) = badSource;\n(*badSource)(data);\nvoid badSource(size_t data)\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17405,"code":"data = rand();\nHELLO_STRING_len = wcslen(HELLO_STRING);\nif (data > HELLO_STRING_len && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17406,"code":"data = rand();\nsize_t * dataArray[5];\ndataArray[2] = data;\nbadSource(dataArray);\nvoid badSource(size_t * dataArray[])\nsize_t data = dataArray[2];\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17407,"code":"data = rand();\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17408,"code":"data = rand();\nvoid (*funcPtr)(size_t) = badSource;\n(*badSource)(data);\nvoid badSource(size_t data)\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17409,"code":"data = rand();\nHELLO_STRING_len = wcslen(HELLO_STRING);\nif (data > HELLO_STRING_len && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17410,"code":"data = rand();\nsize_t * dataArray[5];\ndataArray[2] = data;\nbadSource(dataArray);\nvoid badSource(size_t * dataArray[])\nsize_t data = dataArray[2];\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17411,"code":"data = 20;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17412,"code":"data = 20;\nvoid (*funcPtr)(size_t) = badSource;\n(*badSource)(data);\nvoid badSource(size_t data)\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17413,"code":"data = 20;\nHELLO_STRING_len = wcslen(HELLO_STRING);\nif (data > HELLO_STRING_len)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17414,"code":"data = 20;\nsize_t * dataArray[5];\ndataArray[2] = data;\nbadSource(dataArray);\nvoid badSource(size_t * dataArray[])\nsize_t data = dataArray[2];\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17415,"code":"data = 20;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17416,"code":"data = 20;\nvoid (*funcPtr)(size_t) = badSource;\n(*badSource)(data);\nvoid badSource(size_t data)\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17417,"code":"data = 20;\nHELLO_STRING_len = wcslen(HELLO_STRING);\nif (data > HELLO_STRING_len)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17418,"code":"data = 20;\nsize_t * dataArray[5];\ndataArray[2] = data;\nbadSource(dataArray);\nvoid badSource(size_t * dataArray[])\nsize_t data = dataArray[2];\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17419,"code":"data = rand();\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17420,"code":"data = rand();\nvoid (*funcPtr)(size_t) = badSource;\n(*badSource)(data);\nvoid badSource(size_t data)\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17421,"code":"data = rand();\nHELLO_STRING_len = wcslen(HELLO_STRING);\nif (data > HELLO_STRING_len && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17422,"code":"data = rand();\nsize_t * dataArray[5];\ndataArray[2] = data;\nbadSource(dataArray);\nvoid badSource(size_t * dataArray[])\nsize_t data = dataArray[2];\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17423,"code":"data = rand();\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17424,"code":"data = rand();\nvoid (*funcPtr)(size_t) = badSource;\n(*badSource)(data);\nvoid badSource(size_t data)\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17425,"code":"data = rand();\nHELLO_STRING_len = wcslen(HELLO_STRING);\nif (data > HELLO_STRING_len && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17426,"code":"data = rand();\nsize_t * dataArray[5];\ndataArray[2] = data;\nbadSource(dataArray);\nvoid badSource(size_t * dataArray[])\nsize_t data = dataArray[2];\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17427,"code":"data = rand();\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":17428,"code":"data = rand();\nvoid (*funcPtr)(size_t) = badSource;\n(*badSource)(data);\nvoid badSource(size_t data)\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":17429,"code":"data = rand();\nHELLO_STRING_len = wcslen(HELLO_STRING);\nif (data > HELLO_STRING_len)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":17430,"code":"data = rand();\nsize_t * dataArray[5];\ndataArray[2] = data;\nbadSource(dataArray);\nvoid badSource(size_t * dataArray[])\nsize_t data = dataArray[2];\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":17431,"code":"data = 20;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17432,"code":"data = 20;\nvoid (*funcPtr)(size_t) = badSource;\n(*badSource)(data);\nvoid badSource(size_t data)\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17433,"code":"data = 20;\nHELLO_STRING_len = wcslen(HELLO_STRING);\nif (data > HELLO_STRING_len)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17434,"code":"data = 20;\nsize_t * dataArray[5];\ndataArray[2] = data;\nbadSource(dataArray);\nvoid badSource(size_t * dataArray[])\nsize_t data = dataArray[2];\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17435,"code":"data = 20;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17436,"code":"data = 20;\nvoid (*funcPtr)(size_t) = badSource;\n(*badSource)(data);\nvoid badSource(size_t data)\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17437,"code":"data = 20;\nHELLO_STRING_len = wcslen(HELLO_STRING);\nif (data > HELLO_STRING_len)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17438,"code":"data = 20;\nsize_t * dataArray[5];\ndataArray[2] = data;\nbadSource(dataArray);\nvoid badSource(size_t * dataArray[])\nsize_t data = dataArray[2];\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17439,"code":"data = rand();\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17440,"code":"data = rand();\nvoid (*funcPtr)(size_t) = badSource;\n(*badSource)(data);\nvoid badSource(size_t data)\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17441,"code":"data = rand();\nHELLO_STRING_len = wcslen(HELLO_STRING);\nif (data > HELLO_STRING_len && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17442,"code":"data = rand();\nsize_t * dataArray[5];\ndataArray[2] = data;\nbadSource(dataArray);\nvoid badSource(size_t * dataArray[])\nsize_t data = dataArray[2];\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17443,"code":"data = rand();\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17444,"code":"data = rand();\nvoid (*funcPtr)(size_t) = badSource;\n(*badSource)(data);\nvoid badSource(size_t data)\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17445,"code":"data = rand();\nHELLO_STRING_len = wcslen(HELLO_STRING);\nif (data > HELLO_STRING_len && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17446,"code":"data = rand();\nsize_t * dataArray[5];\ndataArray[2] = data;\nbadSource(dataArray);\nvoid badSource(size_t * dataArray[])\nsize_t data = dataArray[2];\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17447,"code":"data = 20;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17448,"code":"data = 20;\nvoid (*funcPtr)(size_t) = badSource;\n(*badSource)(data);\nvoid badSource(size_t data)\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17449,"code":"data = 20;\nHELLO_STRING_len = wcslen(HELLO_STRING);\nif (data > HELLO_STRING_len)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17450,"code":"data = 20;\nsize_t * dataArray[5];\ndataArray[2] = data;\nbadSource(dataArray);\nvoid badSource(size_t * dataArray[])\nsize_t data = dataArray[2];\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17451,"code":"data = 20;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17452,"code":"data = 20;\nvoid (*funcPtr)(size_t) = badSource;\n(*badSource)(data);\nvoid badSource(size_t data)\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17453,"code":"data = 20;\nHELLO_STRING_len = wcslen(HELLO_STRING);\nif (data > HELLO_STRING_len)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17454,"code":"data = 20;\nsize_t * dataArray[5];\ndataArray[2] = data;\nbadSource(dataArray);\nvoid badSource(size_t * dataArray[])\nsize_t data = dataArray[2];\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17455,"code":"data = rand();\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17456,"code":"data = rand();\nvoid (*funcPtr)(size_t) = badSource;\n(*badSource)(data);\nvoid badSource(size_t data)\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17457,"code":"data = rand();\nHELLO_STRING_len = wcslen(HELLO_STRING);\nif (data > HELLO_STRING_len && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17458,"code":"data = rand();\nsize_t * dataArray[5];\ndataArray[2] = data;\nbadSource(dataArray);\nvoid badSource(size_t * dataArray[])\nsize_t data = dataArray[2];\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17459,"code":"data = rand();\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17460,"code":"data = rand();\nvoid (*funcPtr)(size_t) = badSource;\n(*badSource)(data);\nvoid badSource(size_t data)\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17461,"code":"data = rand();\nHELLO_STRING_len = wcslen(HELLO_STRING);\nif (data > HELLO_STRING_len && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17462,"code":"data = rand();\nsize_t * dataArray[5];\ndataArray[2] = data;\nbadSource(dataArray);\nvoid badSource(size_t * dataArray[])\nsize_t data = dataArray[2];\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17463,"code":"data = rand();\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17464,"code":"data = rand();\nvoid (*funcPtr)(size_t) = badSource;\n(*badSource)(data);\nvoid badSource(size_t data)\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17465,"code":"data = rand();\nHELLO_STRING_len = wcslen(HELLO_STRING);\nif (data > HELLO_STRING_len && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17466,"code":"data = rand();\nsize_t * dataArray[5];\ndataArray[2] = data;\nbadSource(dataArray);\nvoid badSource(size_t * dataArray[])\nsize_t data = dataArray[2];\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17467,"code":"data = 20;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17468,"code":"data = 20;\nvoid (*funcPtr)(size_t) = badSource;\n(*badSource)(data);\nvoid badSource(size_t data)\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17469,"code":"data = 20;\nHELLO_STRING_len = wcslen(HELLO_STRING);\nif (data > HELLO_STRING_len)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17470,"code":"data = 20;\nsize_t * dataArray[5];\ndataArray[2] = data;\nbadSource(dataArray);\nvoid badSource(size_t * dataArray[])\nsize_t data = dataArray[2];\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17471,"code":"data = rand();\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17472,"code":"data = rand();\nvoid (*funcPtr)(size_t) = badSource;\n(*badSource)(data);\nvoid badSource(size_t data)\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17473,"code":"data = rand();\nHELLO_STRING_len = wcslen(HELLO_STRING);\nif (data > HELLO_STRING_len && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17474,"code":"data = rand();\nsize_t * dataArray[5];\ndataArray[2] = data;\nbadSource(dataArray);\nvoid badSource(size_t * dataArray[])\nsize_t data = dataArray[2];\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17475,"code":"data = 20;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17476,"code":"data = 20;\nvoid (*funcPtr)(size_t) = badSource;\n(*badSource)(data);\nvoid badSource(size_t data)\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17477,"code":"data = 20;\nHELLO_STRING_len = wcslen(HELLO_STRING);\nif (data > HELLO_STRING_len)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17478,"code":"data = 20;\nsize_t * dataArray[5];\ndataArray[2] = data;\nbadSource(dataArray);\nvoid badSource(size_t * dataArray[])\nsize_t data = dataArray[2];\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17479,"code":"data = rand();\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":17480,"code":"data = rand();\nvoid (*funcPtr)(size_t) = badSource;\n(*badSource)(data);\nvoid badSource(size_t data)\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":17481,"code":"data = rand();\nHELLO_STRING_len = wcslen(HELLO_STRING);\nif (data > HELLO_STRING_len)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":17482,"code":"data = rand();\nsize_t * dataArray[5];\ndataArray[2] = data;\nbadSource(dataArray);\nvoid badSource(size_t * dataArray[])\nsize_t data = dataArray[2];\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":1}
{"idx":17483,"code":"data = 20;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17484,"code":"data = 20;\nvoid (*funcPtr)(size_t) = badSource;\n(*badSource)(data);\nvoid badSource(size_t data)\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17485,"code":"data = 20;\nHELLO_STRING_len = wcslen(HELLO_STRING);\nif (data > HELLO_STRING_len)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17486,"code":"data = 20;\nsize_t * dataArray[5];\ndataArray[2] = data;\nbadSource(dataArray);\nvoid badSource(size_t * dataArray[])\nsize_t data = dataArray[2];\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17487,"code":"data = 20;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17488,"code":"data = 20;\nvoid (*funcPtr)(size_t) = badSource;\n(*badSource)(data);\nvoid badSource(size_t data)\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17489,"code":"data = 20;\nHELLO_STRING_len = wcslen(HELLO_STRING);\nif (data > HELLO_STRING_len)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17490,"code":"data = 20;\nsize_t * dataArray[5];\ndataArray[2] = data;\nbadSource(dataArray);\nvoid badSource(size_t * dataArray[])\nsize_t data = dataArray[2];\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17491,"code":"data = rand();\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17492,"code":"data = rand();\nvoid (*funcPtr)(size_t) = badSource;\n(*badSource)(data);\nvoid badSource(size_t data)\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17493,"code":"data = rand();\nHELLO_STRING_len = wcslen(HELLO_STRING);\nif (data > HELLO_STRING_len && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17494,"code":"data = rand();\nsize_t * dataArray[5];\ndataArray[2] = data;\nbadSource(dataArray);\nvoid badSource(size_t * dataArray[])\nsize_t data = dataArray[2];\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17495,"code":"data = rand();\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17496,"code":"data = rand();\nvoid (*funcPtr)(size_t) = badSource;\n(*badSource)(data);\nvoid badSource(size_t data)\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17497,"code":"data = rand();\nHELLO_STRING_len = wcslen(HELLO_STRING);\nif (data > HELLO_STRING_len && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17498,"code":"data = rand();\nsize_t * dataArray[5];\ndataArray[2] = data;\nbadSource(dataArray);\nvoid badSource(size_t * dataArray[])\nsize_t data = dataArray[2];\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17499,"code":"data = rand();\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17500,"code":"data = rand();\nvoid (*funcPtr)(size_t) = badSource;\n(*badSource)(data);\nvoid badSource(size_t data)\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17501,"code":"data = rand();\nHELLO_STRING_len = wcslen(HELLO_STRING);\nif (data > HELLO_STRING_len && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17502,"code":"data = rand();\nsize_t * dataArray[5];\ndataArray[2] = data;\nbadSource(dataArray);\nvoid badSource(size_t * dataArray[])\nsize_t data = dataArray[2];\nif (data > wcslen(HELLO_STRING) && data < 100)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17503,"code":"data = 20;\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17504,"code":"data = 20;\nvoid (*funcPtr)(size_t) = badSource;\n(*badSource)(data);\nvoid badSource(size_t data)\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17505,"code":"data = 20;\nHELLO_STRING_len = wcslen(HELLO_STRING);\nif (data > HELLO_STRING_len)\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
{"idx":17506,"code":"data = 20;\nsize_t * dataArray[5];\ndataArray[2] = data;\nbadSource(dataArray);\nvoid badSource(size_t * dataArray[])\nsize_t data = dataArray[2];\nif (data > wcslen(HELLO_STRING))\nmyString = new wchar_t[data];\nwcscpy(myString, HELLO_STRING);\nprintWLine(myString);\ndelete [] myString;\n \n","target":0}
